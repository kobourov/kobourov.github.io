%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: paper.dvi
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman
%%EndComments
%DVIPSCommandLine: dvips -D 600 paper -o paper.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1998.10.24:0438
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (paper.dvi)
@start
%DVIPSBitmapFont: Fa cmti9 9 51
/Fa 51 123 df<923803FF80031F13F092383F00F803F8133C4A48133E4A48137E17FE4A
5A17FC17384A481300A3141F92C8FCA55C143E011FB612E0A217C09039007E0007147C16
0F1780A214FC4A131F1700A301015C4A133EA3167E0103147C5C1718EEFC1CEEF83C0107
15385C1778177016F0010F15F04AEBF8E01679EE3FC0011FEC0F0093C7FC91C9FCA3133E
A21238EA7E3C137CEAFE7812FC485AEA79E0EA3FC0000FCAFC2F4582B42B>12
D<DB03FE903803FFC092271FFFC01F13F8923B7E03E07F007C9227F800F0F8131E912801
F003F1F0131FDA03E0D9F3E0133FDDF7C0137FDA07C013E7DC01CF147E9326000F80131C
020F17004B131F95C8FCA2141F92C7FC5F173EA25C143E011FB912F0A21AE0D9003EC738
7C0003147E027C160705FC14C05FA202FC160F4A178016015F191F010118005C16034D5B
193E13034A170C0407EC7E0E4DEB7C1E1A1C13075C040F15384D13781A78010FEF7C704A
EE3CF0041FEC1FE094C7EA078096C7FC49C7FC163EA3013E5C0038131C007E013F137801
3C14F83AFE7C7F01F026FC787E5B3AF8F03C07C0D878E0495A273FC01FFECAFC390F0003
F8484582B444>14 D<1560EC01E0EC03C0EC0700140E5C143C5C5C495A495A13075C49C7
FC5B131E5B137C137813F85B12015B12035B1207A25B120FA290C8FC5AA2121E123EA312
3C127CA31278A212F8A35AAF12701278A21238A2123C121CA27EA27E6C7E12011B4A75B7
1F>40 D<14301438A28080A2140F801580A2140315C0A4140115E0A81403A415C0A31407
A31580140FA315005CA3141E143EA2143C147CA25CA25C13015C13035C13075C130F91C7
FC131E133E133C5B5B485AA2485A485A48C8FC121E5A12705A5A1B4A7EB71F>I<EA0380
EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B17
7A8718>44 D<B51280A46C1300110579911B>I<EC0FE0EC3FF8ECF03E903803C01F9039
07800F80EB0F00011EEB07C0131C5BD978C013E0EB70E0EBF06013E0120113C0ECE00F00
0301C013C013801381EC801F01831480903887003F018E1400D801FC137ED800F05B9038
0001F84A5A4A5A4A5A4AC7FC147E14F8EB03E0EB0FC049C8FC133E13784848EB0380485A
4913074848140048C75A121E001C141E003F143E01F85B397DFF80F838781FFF486C5BD8
E0035B6D1380D9007EC7FC23347AB127>50 D<EC07F0EC3FFCECF81E903803E00F903907
800780D90F0013C0011E13035B013814E0EB7980EB71C00170130701F014C013E0A201E1
130FD9E380138090387F001F013C140090C7123E5D5D4A5AEC1FE0903807FF804AC7FC6D
7E90380007C06E7EA26E7EA514031218127EA21407485C5A00E0495AA26C495A007049C7
FC147E00785B383C01F0381E07E03807FF80D801FCC8FC233479B127>I<1370EA01FC12
03A413F8EA00E01300B0121C127F5AA45A12380E20779F18>58 D<161C163CA2167C16FC
A21501821503A2ED077E150F150E151CA21538A2157015F015E0EC01C0A2913803807F82
EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80A2130E131E13
1C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F367BB539>65
D<0107B612C04915F017FC903A003F8000FE177FEF3F8092C7121FA24A15C0A2147EA214
FE18804A143FA20101ED7F00177E4A5C16010103EC03F04C5A4AEB1FC091B6C7FC495C91
39F0007F804AEB0FC0707E010F6E7E834A1301A2011F81A25CA2133F5F91C71203A2494A
5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC07FC007FB612F0B712C04BC8FC32
337BB236>I<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003CF9139
FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A484815
3CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F127E16
0794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8FC6C6C
133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>I<0107B612C04915F017
FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E170102FE15F8A25C
A21301A25CA2130317035CA2130718F04A1407A2130F18E04A140F18C0011F151F18805C
EF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7FC49495A0001EC
0FF8007FB612E0B7C8FC15F835337BB23A>I<0107B712F05B18E0903A003F80001F1707
170392C7FC17015C18C0147EA214FEA24A130EA20101EC1E03041C13804A91C7FC163C13
035E9138F001F891B5FC5B5EECE0011500130F5E5C1707011F01015BEEC00E0280141E92
C7121C133F173C91C812381778495DA2017E14014C5A01FE14074C5A49141F00014AB45A
007FB7FCB8FC94C7FC34337CB234>I<0107B712E05B18C0903A003F80003F170F170792
C7FC17035C1880147EA214FEA25C161C0101EC3C07043813004A91C7FCA2010314781670
4A13F0150349B5FCA25EECE003130F6F5A14C0A2011F13035E1480A2013F90C9FCA291CA
FCA25BA2137EA213FEA25B1201387FFFFCB5FCA233337CB232>I<010FB51280A2160090
38003FC05DA292C7FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB2
1E>73 D<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301
A25CA21303A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F1580160791C7
FCEE0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB2
30>76 D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0EFC
610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF0703010316
07050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE038001
1E017C5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED3F
C001F0EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB245
>I<902607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B14
0360EC71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801C
EC801FA20107ECC03C030F1338140016E049010713781770010E14F01503011E15F0705A
011C1301A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201EA07F8
267FFF807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E03F91391F800FC091
393E0003E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E017E153E49
153F485AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217
F0160717E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007
EC1F806C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC303775B43B>I<
0107B612C04915F883903A003F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FE
EF1FC05CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7
FC16F802E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B120138
7FFFF0B5FCA233337CB234>I<ED1FE0913801FFFC913807E03F91391F800FC091393E00
07E002F8EB03F0494813014948EB00F8494814FC4948147C49C8127E133E137E49153F12
015B485A12075B120FA2485A177FA2485AA348C912FEA4007EED01FC12FE17F8160317F0
160717E0160F007E16C0EE1F80A2023EEB3F00003E9038FF807E263F01C1137C90390380
C0F8001F903800C1F0D80F87EBC3E001C6EBE7C00007ECFF80D803E649C7FCD801FE5B3B
007F07F0018090383FFFE0D907FC130390C714005E1401160EEDF01EEDF87EEDFFFC5EA2
6E5B5E6F5A031FC7FC304475B43B>I<0107B512FE49ECFFC017F0903A003F8007F8EE01
FCEE007E92C7127F835C1880147EA214FEEF7F005CA2010115FE5F4A13015F01034A5AEE
0FC04A495A04FEC7FC49B512F016C09138E003E0ED01F8010F6D7E167C4A137EA2131FA2
5CA2013F14FEA291C7FCA24913015E137EEF01C001FE150318805B00011607277FFFF000
1400B5ECFE0EEE7E1CC9EA1FF8EE07E032357BB238>I<913901FC018091380FFF03023F
13C791387E07EF903A01F801FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3
137E1638A293C7FC137FA26D7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F
1400153F6F7E150FA4120EA2001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C
6D485A9038C007E039F3F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B8
12C05A1880903AF800FC003F260FC001141F0180150F01005B001EEE07001403121C003C
4A5BA200380107140E127800705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143F
A292C9FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E001FB512F0
5AA2323374B237>I<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007
EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F
07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC
0FF03901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203A2
5BA21207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA212
3EA2007E131F1580127CA2143F00FC14005AA2147EA25CA2387801F85C495A6C485A495A
6C48C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F078090383E03C0EBFC0138
01F8033803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA400
7C14C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A0
23>I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803
F0F8EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F
005BA2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1C
EB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<EB
03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C
007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F
00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0
020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFF
FEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FC
A35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<143F
ECFF80903803E1E6903807C0FF90380F807FEB1F00133E017E133F49133EA24848137EA2
4848137CA215FC12074913F8A21401A2D80FC013F0A21403120715E01407140F141F3903
E03FC00001137FEBF0FF38007FCF90381F0F801300141FA21500A25C143E1238007E137E
5C00FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FF
A25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0
F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F1303
5DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C1407160000FC14
0E151E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7
FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60FCC65AA2
12015BA212035BA2000713C0EBC1E0000F13C01381A21383EB038013071400130E131EEA
07F8EA01F013337AB118>I<1538157C15FCA315701500AB143EECFF80903801E3C09038
0383E0EB0701130FEB0E03131C133C133814071378013013C01300140FA21580A2141FA2
1500A25CA2143EA2147EA2147CA214FCA25CA21301A25CA213035C1238387E07C0A238FE
0F804848C7FCEAF83EEA787CEA3FF0EA0F801E4283B118>I<EB0FC0EA01FF5A5CEA001F
A391C7FCA25BA2133EA2137EA2137CA213FCA2491378EC01FE0001EB078FEC0E0F9038F0
1C3F143800031370ECE03E9038E1C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB
9FC0EB83F0EA1F81EB80F81300150C48141E151C123EA2007E143C1538127C157800FCEB
787015E048EB3FC00070EB0F8020357BB323>I<133FEA07FF5A13FEEA007EA3137CA213
FCA213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25A
A2123EA2127EA2127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0
EA0F00103579B314>I<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7C
F00F8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC9038
0FC00100E05FD860F8148012000001021F130360491400A200034A13076049013E130FF0
81800007027EEC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E00
1F01015D183C010049EB0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC
391E787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC13
1F00E01500EA60F8120000015C153E5BA20003147E157C4913FCEDF8180007153C020113
3801C013F0A2000F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26
227AA02B>I<14FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A
5B120F484813FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0F
C01580141FEC3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<
011E137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F80003
13F0018314F814E0EA07871307000313C01200010F130316F01480A2011F130716E01400
A249EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8
FF80027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<903803
F01890380FF83890383E1C7890387C0EF89038F807F0EA01F0EA03E000071303D80FC013
E0A2EA1F801407D83F0013C0A348130F007E1480A300FE131F481400A35C143E147E127C
14FE495AEA3C03EA3E07EA1F0E3807FCF8EA01F0C7FC13015CA313035CA21307A25C48B5
FCA25C1D3078A023>I<3903C00FC0390FF03FF0391E78F078391C7DE03C393C3FC0FC00
381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201A25BA21203A25B
A21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>I<EB03F0EB1FFCEB3C1EEB
780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7F
FC1307EB00FE147E143E123800FC133CA3147C00F013784813F0EAF001387803E0383C0F
80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA21400A25BA2133EA2137EA213
7C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207A25BA2120FA25B1460001F
13F014E01300130114C01303001E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<
EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E133E1270A2017E137ED8F0
7C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002031370EDE0F0D807C014E0
A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038F071E73A007FE0FF009038
1F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E121C123C0038147CEA783E00
70143CA2137ED8F07C1338EA60FCC65A1578000114705BA215F0000314E05BA2EC01C0A2
EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F801E227AA023>I<D801F0
1538D803FC010E13FCD80F1E131E000E143E121C123C0038027E137CD8783E137C007016
3CA2017E13FCD8F07C491338EA60FCC65A0201147800014A137013F0A2020314F0000316
E001E05BA2160117C001C013C00207EB0380A29039E00FE0071700021F130E3A01F03DF0
1E3A00F878F83C90393FF03FF090390FC00FC02E227AA033>I<011F137C90387FC1FF3A
01E1E787803A03C0F703C0903880FE0FEA07004813FC000E1580001E9038F80700001C91
C7FC1301003C5B1218120013035CA31307A25C1506010F130F150E14800038141ED87C1F
131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF80260F807EC7FC22227CA0
23>I<13F0D803FC1307D80F1E130F000E141F121C123C0038143FD8783E133E1270A201
7E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314F013E0A2140315E0EA07
C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEFEB1F8FEB001F1500A25C
003E133E007E137E147C5C007C5BEA7001495A38380780D83C1FC7FCEA0FFCEA07F02031
7AA025>I<903807801C90381FE03C90383FF038017F13789038FFF8F03901F07CE0EBE0
1F3903C003C09038800780EC0F00C7121E141C143C5C5C495AEB07C0495A011EC7FC5B5B
4913704913F0000114E0485A38078001390FC003C0381FF80790383E0F80393C1FFF0012
7838700FFE38F007F838E001E01E227CA01F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmcsc10 9 50
/Fb 50 123 df<6C134038E001C0EAF003383C0F00EA1E1EEA0FFC6C5AEA01E06C5A1209
75AF29>20 D<123C127EB4FCA21380A2127F123D1201A4EA0300A35A1206120E120C5A12
385A12200917788718>44 D<B512F0A414047E911C>I<123C127E12FFA4127E123C0808
788718>I<156015F0A34A7EA34A7EA24A7E1406A2EC0EFFEC0C7FA202187F153FA24A6C
7EA202707FEC600FA202C07F1507A249486C7EA349486C7EA2498001061300A2010FB6FC
A30118C7EA3F80A3496E7EA20170810160140FA2498116071201707E487ED80FF0EC0FFC
D8FFFE91B512F0A334367CB53D>65 D<B712C016F816FFD801FEC77F0000ED1FE0707E70
7E160383160183A65F16035F4C5A4C5AEE3FC004FFC7FC90B612FC5E9039FE0001FF9238
001FC0EE0FF0EE03F8707E83160083831880A618005FA24C5A4C5A4C5AEE1FF00001ED7F
E0B812804CC7FC16F031337DB23A>I<DA03FF1301021FEBE00391B5EAF8070103EB807C
903A07F8000E0FD91FE0EB031FD93F80EB01BF49C812FF01FE157F4848153F485A484815
1F5B000F160F485A1707123F5B1703127FA290C9FC481600AB7E6D1503A2123FA27F001F
1606A26C7E0007160C7F6C6C15186C6C15386C6C1530017F15606D6C14C0D91FE0EB0380
D907F8EB0F00903903FF803E0100EBFFF8021F13E0020390C7FC30377BB43B>I<B712C0
16F816FE3B01FE0001FF8000009138003FE0EE0FF0EE03F8707E707E177F831880EF1FC0
A2EF0FE0A318F01707A318F8AA18F0A3170F18E0A2EF1FC0A21880173FEF7F0017FE4C5A
4C5A4C5AEE1FE00001EDFF80B748C7FC16F816C035337DB23E>I<B812E0A3D803FCC712
3F00011507EE01F01600A21770A21730A403061318A41700150EA2151E157E90B512FEA3
9038FC007E151E150EA215061706A3170C92C7FCA4171CA21738A2177817F81601160700
03153FB812F0A32F337CB237>I<B812E0A3D801FEC7123F00001507EE01F01600A21770
A21730A417181503A31700A25DA25D153F90B6FCA39038FE003F150F81A281A592C8FCAB
487EB6FCA32D337DB235>I<DA03FE130291393FFFC00691B5EAF00E0103EB0078D90FF8
EB1E1ED91FE0EB073ED93F80EB03FE49C7120101FC14004848157E12034848153E484815
1EA2485A170E123F5B1706127FA290C9FC4893C7FCAA0303B512F07E7FDB00011300003F
6F5AA27F121FA26C7EA26C7E6C7E6C7E1200017F14016D6CEB03BED91FE0EB073ED90FF8
EB0E1ED903FFEB7C0601009038FFF802023F01E0C7FC020390C8FC34377BB440>I<B5D8
FE01B512FCA3000190C73803FE006C486E5AB390B7FCA349C71201B3A3486C4A7EB5D8FE
01B512FCA336337DB23D>I<013FB51280A39039001FF0006E5AB3B0121C127FEAFF80A4
4A5A1300007C495A12706C49C7FC6C13FC380F81F83803FFE0C66CC8FC21357CB22A>74
D<B500FE903803FFFCA3000190C813806C48ED7E0017785FEE01C04C5A4CC7FC160E5E5E
5E5EED03C04BC8FC150E5D5D157815FC4A7E4A7E140F91381C7F804A6C7E14704A6C7E6D
486C7E02807FEC0007496D7E6F7EA26F7E707EA2707E707E707EA2707E707EA2707E8348
6C4A13C0B500FE011F13FEA337337DB23F>I<B6FCA3000190C9FC6C5AB3A91760A417E0
17C0A31601A316031607160F161FEE7F800001EC03FFB8FCA32B337DB233>I<D8FFFE93
383FFF806D5EA20001F0C0002600DF80EDDF80A2D9CFC0EC019FA3D9C7E0EC031FA2D9C3
F01406A3D9C1F8140CA2D9C0FC1418A3027E1430A26E1460A36E6C13C0A291390FC00180
A3913907E00300A2913803F006A36E6C5AA26E6C5AA3ED7E30A26F5AA36F5AA2486C6D5A
D807F84C7EB500C0021FB51280ED0700A241337CB24A>I<D8FFFE91380FFFFC7F80C66D
9038007F80EF1E00D9DFE0140CEBCFF08013C7EBC3FCEBC1FE8013C06E7E6E7EA26E7E6E
7E8114076E7E6E7E8180ED7F80ED3FC016E0151FED0FF0ED07F8A2ED03FCED01FEED00FF
A2EE7F8CEE3FCC17EC161FEE0FFC1607A2160316011600A2486C157CD807F8153CB500C0
141CA2170C36337DB23D>I<EC07FE91383FFFC0903901FC03F8903907E0007E49487F01
3FC7EA0FC0017E6E7E496E7E48486E7E0003824914004848157E000F167F4981001F1780
A24848ED1FC0A2007F17E0A290C9120FA24817F0AB6C17E06D151FA3003F17C06D153F00
1F1780A26C6CED7F00A26C6C15FE00035E6D14016C6C4A5A00005E017E4A5A6D6CEB1FC0
D90FC049C7FCD907F013FE903901FC03F89039003FFFC0DA07FEC8FC34377BB43F>I<B7
FC16E016F83A03FC0003FE0001EC00FFEE3F80EE1FC0EE0FE017F01607A217F8A617F0A2
EE0FE0A2EE1FC0EE3F80EEFF00ED03FC90B612F016C001FCC9FCB3A2487EB512F8A32D33
7CB237>I<B612FCEDFFC016F83A01FE0007FC0000EC00FFEE3F80707E707E831607A283
A55F160F5FA24C5A4CC7FC16FEED07F890B612E016809039FE000FE0ED03F0ED01FC6F7E
167E167F8283A583A5180617E0A2041F130E486C160CB500FEEB0FF00407131C933803F8
38CAEAFFF0EF1FC037357DB23C>82 D<D91FF0138090387FFE0148B512833903F00FC339
07C001E748C7127F001E143F48141F150F5A150700F81403A46C1401A27E007E91C7FCEA
7F807FEA3FF8EBFF806C13F86CEBFF806C14E06C14F8C680013F7F01037FEB003F020313
80EC007FED3FC0151FED0FE0150712C01503A47E16C07E15076C15806C140F6C15006C6C
131ED8F3E0137C39E1FC01F839E07FFFF0D8C01F13C0268003FEC7FC23377BB42E>I<00
7FB81280A3903A8003F8007FD87C00150F0078160700701603A20060160100E017C0A348
1600A6C71600B3AB4A7E011FB6FCA332337CB23B>I<B500F0903801FFFCA3D807FEC8EA
3FE06C48ED0F80000117006D150E0000160CA2017F5DA26E1438013F1530A26D6C5CA26E
14E0010F5DA26D6C495AA26E1303010392C7FCA26D6C1306A28001005CA2027F5BA21580
023F5BA26E6C5AA215E0020F5BA2913807F180A215F9DA03FBC8FCA2EC01FEA36E5AA215
78A3153036357DB23D>86 D<B5D8F803B539C003FFFCA3000390C7D81FF8C7EA7FC0D801
FC6E48EC1F001A0E6C6C14071A0C83017F02035DA26E80013F02075DA26E80011F020C5D
A26EEB1CFF010FDA187F5CA26E0138EB80010107DA303F5CA26E0170EBC0030103DA601F
91C7FCA26E01E06D5A0101DAC00F1306A2DAFE01ECF00E0100DA8007130CA2DAFF03ECF8
1C027FD900031318A20386903801FC38023F1630A2DA1FCC6D6C5AA3DA0FF8EC7FC0A36E
486E5AA36E486EC8FCA36E48140EA34E357EB253>I<B500F8EC7FFFA300030180EC1FF0
C690C8EA0F806D6CEC0700170E6D6C140C6E141C011F15186D6C5C6E1470010715606D6C
14E06E5C01014A5A6D6C1303038090C7FC027F130691383FC00E160C91381FE01C91380F
F0185E913807F870913803FC605EEC01FF6E5B93C8FC81B14B7E027F13FEA338337EB23D
>89 D<003FB612FEA39039F80003FC13C090C7EA07F8003EEC0FF0123C0038EC1FE00078
EC3FC01270ED7F80EDFF00A20060495A4A5A14075DC7485A141F5D4A5A147F5D4AC7FC5B
5C495A13075C495A011F14065C495A137F5C49C7FC4848140EA2485A485A161C485A4848
143C167C484814FC48481303151FB7FCA327337BB232>I<1418143CA3147EA214FFA390
38019F80A201037F140FA201067F1407A2496C7EA2011C7FEB1801A2496C7EA201707FEB
7FFFA29038C0003FA20001158049131FA2000315C090C7120F486C14E0120F486CEB1FF0
D8FFF090B5FCA228277EA62E>97 D<B67E15E0390FE001F800076D7E157E81A21680A516
005D157E5DEC03F890B512E0819038E001FCEC007E81ED1F8016C0150F16E0A6ED1FC0A2
ED3F80ED7F00000FEB01FEB612F815C023267DA52B>I<02FF13100107EBE03090391FC0
787090397E001CF001F813074848130348481301485A000F1400485A167048C8FCA24815
30127EA200FE1500A8127E1630127F7EA26C6C1460A26C7E000715C06C6CEB01806C6C13
036C6CEB0700017E130E90381FC078903807FFE00100138024287DA62C>I<B67E15F039
0FE001FC0007EB007E151FED0FC01507ED03E016F0150116F8A2ED00FCA316FEA916FCA3
ED01F8A2ED03F016E01507ED0FC0ED1F80ED7E00000F495AB612F0158027267DA52F>I<
B71280A2390FE0003F000714071503A2150116C0A21500A21403A21600A25C5C90B5FCA2
EBE00F8080A21660A291C7FC16E016C0A31501A21503A2ED0F80000F143FB7FCA223267D
A52A>I<B7FCA2390FE0007F0007140F81A2811680A21501A3140692C7FCA3140E141EEB
FFFEA2EBE01E140E1406A491C8FCA9487EB512C0A221267DA528>I<02FF13100107EBE0
3090391FC0787090397E001CF001F813074848130348481301485A000F1400485A167048
C8FCA2481530127EA200FE1500A64AB5FCA2007E90380007F8ED03F0127F7EA26C7EA26C
7E12076C7E6C6C1307EA00FC017E130C90391FC03870903907FFF0100100EB800028287D
A630>I<B53803FFFCA23A0FF0003FC06C48EB1F80AE90B6FCA29038E0001FB0486CEB3F
C0B53803FFFCA226267DA52E>I<B5FCA2EA0FF0EA07E0B3AEEA0FF0B5FCA210267DA517>
I<48B5FCA2380007F8EB03F0B3A8127812FCA3EB07E01270EB0FC0383C1F80380FFE00EA
03F818277DA520>I<B5EB0FFEA2D80FF0EB07F86C4814E01680ED0F00151C5D5D5D4A5A
4A5A4AC7FC140E143C147C14FE13E1EBE3FF9038E73F80EBEE1F01FC7F496C7E496C7E13
E06E7E6E7E6E7EA2157FED3F80151F16C0ED0FE016F0486CEB1FF8B5EB3FFFA228267DA5
2F>I<B57EA2D80FF0C7FC6C5AB3A21506A5150EA3151CA2153C157C000FEB03FCB6FCA2
1F267DA526>I<D8FFE0EC07FF6D5C000F16F0000716E0D806F8141BA2017C1433A36D14
63A26D14C3A290390F800183A3903907C00303A2903803E006A3903801F00CA2903800F8
18A3EC7C30A2EC3E60A3EC1FC0A2000FEB0F80A2D83FC0EC07F03BFFF007007FFFA23026
7DA538>I<D8FFE0EB3FFC7FD807F8EB0FF0ED03C06D1480D806FE1301137E137FEB3F80
EB1FC0A2EB0FE0EB07F0EB03F8A2EB01FCEB00FE147E147FEC3F81EC1FC1A2EC0FE1EC07
F1140315F9EC01FDEC00FFA2157F153F151FA20007140F481407D83FC01303EAFFF01501
26267DA52E>I<49B4FC010F13E090383F01F890387C007C4848133FD803E0EB0F800007
15C04848EB07E0491303001F15F048C7EA01F8A24815FCA2007E1400A200FE15FEA9007F
EC01FCA36C15F86D1303001F15F06D1307000F15E06C6CEB0FC06C6CEB1F806C6CEB3F00
6C6C137E90383F01F890380FFFE0010190C7FC27287DA62F>I<B6FC15E0390FE003F800
07EB00FC153E153FED1F80A216C0A51680A2ED3F00153E15FCEC03F890B512E092C7FC01
E0C8FCAE487EB5FCA222267DA52A>I<B512FCECFFC0390FE007F00007EB01F86E7E157E
811680A61600157E5D4A5AEC07F090B512C092C7FC9038E00FC0EC03F01401816E7EA481
A4160315FF157F486C1407B5EB3F8EED0FFCC8EA03F028277DA52D>114
D<EBFE013803FFC3380F01E7381E007F0038131F805A8012F0A2807EA26C90C7FC127F13
E0EA3FFEEBFFE06C13F800077F6C7FC66C7E13079038007F80141FEC0FC0140712C01403
A37E15806C1307150000FC130E6C131E38E7C07838C1FFF038803FC01A287DA622>I<00
7FB612F8A2397E00FC010078EC00780070153800601518A200E0151C48150CA5C71400B3
A4497E90387FFFF8A226267EA52C>I<B5EB3FFCA2D80FF0EB0FF06C48EB03C016801501
B3A51503000315007F5D6C6C13060000140E017C5B6D137890381F81E0903807FFC0D900
FEC7FC26277DA52E>I<B5903801FFC0A2D80FF8903800FE006C48147C1678000315707F
000115607F00005DA2017E495AA2017F13036D91C7FCA290381F8006A2ECC00E010F130C
14E001075BA2ECF0380103133014F801015BA26D6C5AA214FF6E5AA26EC8FCA3141EA214
0C2A277FA52E>I<3DFFFE03FFF803FFC0A2290FF0007FC0001300496D48137C0007021F
14387F00036E6C1330A26D167000014A6C1360A26D496C13E0000002335CA26D903873F8
01017E01615CA26D9026E1FC03C7FC15C0A2903A1F81807E06A3903A0FC3003F0CA3D907
E6EB1F98A3D903FCEB0FF0A36D486D5AA36D486D5AA302606D5A3A277FA53E>I<B59038
01FFC0A2D80FF8903800FE000007157C000315706C7E5E6C6C5C017F495A1503D93F8090
C7FC90381FC006150E90380FE00C01075BECF038903803F83001015BECFCE06D6C5A6E5A
147F6EC8FCAD4A7E903807FFF8A22A267FA52E>121 D<003FB512FCA2EBC00190380003
F8003CEB07F01238EC0FE048EB1FC0A2EC3F800060EB7F00A214FEC6485AA2495A495AA2
495A495A495AA249C7FC01FE130CA2485A485AA24848131C485A151848481338485A1578
397F0001F800FE1307B6FCA21E267DA526>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy9 9 3
/Fc 3 22 df<007FB712FCB812FEA26C16FC2F047A943C>0 D<171C177EEE01FEEE07FC
EE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8
FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFCA2EA7FC0EA1FF0EA07FC
EA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED
1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEEE007E171C1700AC007FB712FCB8
12FEA26C16FC2F3E7AB03C>20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0
EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01
FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0
ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FC
EA1FF0EA7FC048CAFC12FC1270CBFCAC007FB712FCB812FEA26C16FC2F3E7AB03C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt8 7 5
/Fd 5 120 df<EB03FC497EA21303EB003EA7137E3803FFBE4813FE5AEA1FC3EA3F0000
7E137EA248133EA25AA57E147E127E14FEEA3F0113836CB512E0000714F06C13BF3900FE
1FE01C247EA31F>100 D<EA7F80487EA2127F1207A7EBC3F8EBCFFC90B5FCA29038FE1F
8013F8EBF00F13E0A213C0AC397FFC3FF839FFFE7FFCA2397FFC3FF81E2480A31F>104
D<1370EA01FCA5EA007090C7FCA5EA7FF8487EA2127FEA007CB1387FFFFCB5FCA27E1625
7CA41F>I<13E0487EA6387FFFFCB57EA26C5BD801F0C7FCAB1407EC0F80A2141F13F890
38FC3F006CB5FC6D5AEB3FF8EB0FE019207F9F1F>116 D<397FE07FE039FFF0FFF0A239
7FE07FE0391E000780A4001F130F6C1400130FEB1F8FEB3FCFA3000713CE1339A2EBB9DE
A2EBF0FE00035BA33801E0781C197F981F>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy5 5 3
/Fe 3 68 df<EA0380EA07C0A3EA0F80A313005A121EA2123E123CA212381278A21270A2
5AA20A157D9612>48 D<90381FFF80137F48B5FCD803F0C7FCEA07C048C8FC121E5A1238
12781270A212F05AB61280A300E0C8FC7E1270A212781238123C7E7EEA07C0EA03F06CB5
12806C7E131F191F7A9927>50 D<14FF01071380131FEB7C0FEBF007EA01C0D803801300
48485A000E130E001E5B001C1318003C90C7FC12381278A2127012F0A47EA21403007C5B
007E130E007F133C383FC0F8381FFFE06C1380D803FCC7FC191E7D9C20>67
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi5 5 2
/Ff 2 107 df<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C01203
EA0780A3EA0F001308EA1E18A213301370EA0FE0EA07800D1D7D9C16>105
D<EB0180EB03C01307A2EB038090C7FCA6137CEA01FEEA038FEA070F1206120C1200A213
1EA45BA45BA4EA70F012F8EAF9E0485AB45A007EC7FC12257E9C18>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmss9 9 32
/Fg 32 121 df<EB03E0EB07C0EB0F80EB1F00133E137E137C5B12015B1203485AA25B12
0F5B121FA290C7FC5AA3123E127EA5127C12FCB0127C127EA5123E123FA37E7FA2120F7F
12077FA26C7E12017F1200137C137E133E7FEB0F80EB07C0EB03E0134A7AB71E>40
D<12F8127C7E7E6C7E7F12076C7E7F12017F6C7EA2137C137E133E133FA27F1480A3130F
14C0A5130714E0B014C0130FA51480131FA314005BA2133E137E137C13FCA2485A5B1203
5B485A120F5B48C7FC123E5A5A134A7CB71E>I<12FEA7121E123CA21238A212781270A2
12F00710798615>44 D<B512F0A514057F921A>I<12FEA70707798615>I<EB1FE0EBFFFC
000313FF4814804814C0391FF03FE0393FC00FF0387F0007003E1303001C14F814011208
C7FC1403A215F0A21407EC0FE0141FEC3FC0903801FF80017F13005C14F88014FF903800
3FC0EC0FE0EC07F0EC03F8140115FCA2EC00FEA70040EB01FC1260127000F8EB03F86C13
07007FEB0FF0393FE03FE06CB512C06C148000031400C613FCEB1FE01F357DB226>51
D<EC1FE0A34A7EA3EC7DF81479ECF9FC14F8A249487EA2157E903803E07FA201076D7E14
C0A2010F6D7E1480A2011F6D7E1400496D7EA2133E017E6D7E137CA201FC6D7E5B000181
90B6FCA24881A3D807E0C7EA3F805B000F16C0161F5B001F16E0160F90C8FC48ED07F012
3E007E16F81603127C00FCED01FC2E347EB333>65 D<12FEB3B3B0073479B315>73
D<D8FFC0147E7FA27FA27F12FDEAFCFCA27F137E137F7F80131F80130F80A26D7EA26D7E
A26D7EA26D7EA2147FA2EC3F80A2EC1FC0A2EC0FE0A2140715F0140315F8140115FC1400
15FE157EA2153F16FE151FA2150FA21507273479B336>78 D<B6FC15E015F88115FF26FE
000313809138007FC0151FED0FE0ED07F0A2150316F8A21501A31503A216F01507A2ED0F
E0ED1FC0157F913803FF80B7120015FC5D15E092C7FC48C9FCB3A3253479B331>80
D<B812F8A5C7D81FC0C7FCB3B3AB2D347DB334>84 D<EB3FC03803FFF0000F13FC487F80
9038C07F80381E001F001814C00010130FC713E01407A6EB03FF137F48B5FC1207001F13
C7383FF007EA7F80EA7E005AA3140F7E007F133FEBC0FF90B5FC7E6C13E76C1387D803FC
C7FC1B247DA225>97 D<12FCB2EB03F8EB1FFEEB7FFF00FDB51280B612C09038E07FE0EB
801F90380007F04813034814F81401A215FC1400A9EC01F8A3EC03F06C13076CEB0FE0EB
801F9038E07FC090B5128000FD140000FC5BEB3FFC380007E01E357AB328>I<EB0FF8EB
3FFF90B512E04814F05A3807F807390FE001E0391FC0006049130048C8FCA2127EA35AA9
127EA36C14106D1330001F14F0380FE001EBF80F6CB5FC6C14E0C6148090387FFE00EB0F
F01C247DA222>I<15FCB2EB3F80EBFFF0000313FC4813FE4813FFEBF81F381FE007383F
C001138048C7FC127EA35AA9127EA3007F1301EA3F801403381FE007380FF81F90B5FC6C
13FC6C13F8C613E090383F80001E357DB328>I<EB1FC0EB7FF848487E487F487F390FF0
7F80381FC01F90388007C0EA3F00EC03E0007E1301A2127C00FCEB00F0B6FCA500F8C8FC
A27EA2127C127EA27E6D13106C6C1370390FE001F0EBF80F6CB5FC6C14E0C6148090387F
FE00EB0FF01C247DA222>I<EB01FCEB0FFF5B5B5BEBFE07EBF801000113005B1203ABB5
12F0A53803F000B3AA18357FB417>I<90391FC00F8090387FF0FF90B612C05A5A2607F0
7FC7FC390FC01F80EB800FA248486C7EA76C6C485AA2EBC01F2607F07FC7FCEBFFFE485B
5C486C5AEB1FC090C9FCA37F380FFFFEECFFE06C804814FC48805A397F8003FF007EC77E
00FEEC3F8048141FA46C143F007FEC7F006D5B393FF007FE6CB55A6C5C000314E0C61480
D91FFCC7FC22337EA126>I<12FCB2EB07F0EB3FFE497E90B51280B6FC9038E07FC0EB80
1F9038000FE0A2481307A35AB3A41B347AB328>I<12FEA71200AC127EB3AF07347BB313>
I<12FCB3B3B006347AB313>108 D<D907F0EB3F803BFC3FFE01FFF0496C4813F890B500
8713FCB6129F903AE07FDF03FE9039801FFC00496C48137FA2486D48133FA3485CB3A430
227AA13D>I<EB07F038FC3FFE497E90B51280B6FC9038E07FC0EB801F9038000FE0A248
1307A35AB3A41B227AA128>I<EB07F0EB3FFE90B57E488048803907F80FF0390FE003F8
48486C7EEB800048C7127EA2007E80A2007C8000FC1580A86C143F007E1500A2007F5C6C
147E6D13FE6C6C485A6C6C485AEBF80F6CB55A000114C06C5CD93FFEC7FCEB07F021247E
A226>I<EB03F838FC1FFEEB7FFF00FDB51280B612C09038E07FE0EB801F9038000FF048
130748EB03F8A2140115FC1400A8140115F8A2140315F06C13076CEB0FE0EB801F9038E0
7FC090B5128000FD140000FC5BEB3FFCEB07E090C8FCAE1E317AA128>I<EB03C0EAF81F
133F13FF12F912FBEBFC00EAFFF013C05B90C7FCA25AA35AB312227AA11A>114
D<EBFF80000713F04813FC487F5AEA7F00007E131C48130C91C7FCA47EEA7F8013F86CB4
7E6C13E06C13F800037FC67FEB0FFF1300EC3F80A2141FA312400060133F00781400B413
FFEBFFFE5C6C5B000F5B0001138019247EA21D>I<EA03F0AAB512FEA53803F000B3A37F
14023801FC1E90B5FCA27EEB7FFCEB3FC0182C7FAA1C>I<00FCEB07E0B3A7140F141F6C
133F6C13FF6CB5FC14F76C13E76C1307D807F8C7FC1B227AA028>I<00FC143F007E143E
157E127F6C14FCA27F001FEB01F8A2390FC003F0A33907E007E0A2D803F013C0140FA2D8
01F81380141FA2D800FC13005CEB7C3E137E147EEB3E7CA3EB1F7814F86D5AA320217FA0
23>I<00FCD907F0EB1F807E007E010FEC3F008115786C011F143E177EEC1E7C261F803E
147C033C13FC153E000F013C5CD9C07C1301151E151F2607E0785C02F81303ED0F830003
5EEBF0F001F114870001913807C7C014E0A201FBEB03CF00005E02C013EF1501017B92C7
FCD97F8013FFA2013F6D5A91C7FC31217FA034>I<007E143F6C5C6C6C13FE6D5B6C6C48
5A0007495A6C6C485A3801F80FD800FC5B90387E1F80D97F3FC7FCEB3F7E6D5A6D5A1307
6D5AA2497E497E131FEB3F3EEB3E1F017C7F9038FC0FC048486C7E48486C7EEA07E06E7E
48486C7E4848137E48C7127F48EC3F8000FEEC1FC0222180A023>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmex10 10 2
/Fh 2 85 df<0078EF078000FCEF0FC0B3B3B3A46C171F007E1880A2007F173F6C1800A2
6D5E001F177E6D16FE6C6C4B5A6D15036C6C4B5A6C6C4B5A6C6C4B5A6C6C6CEC7FC06D6C
4A5AD93FF8010790C7FC6DB4EB3FFE6D90B55A010315F06D5D6D6C1480020F01FCC8FC02
0113E03A537B7F45>83 D<913801FFE0020F13FC027FEBFF8049B612E04981010F15FC49
9038003FFED93FF8EB07FFD97FC001007F49486E7E4848C8EA1FE048486F7E48486F7E48
486F7E49150148486F7E49167E003F177F90CA7EA2481880007E171FA200FE18C048170F
B3B3B3A40078EF07803A537B7F45>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy10 10 20
/Fi 20 113 df<007FB81280B912C0A26C17803204799641>0 D<EB0380497EA7397803
803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB
3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380
FE00FC147E0078143C390007C000A76D5A1F247BA62A>3 D<15301578B3A6007FB812F8
B912FCA26C17F8C80078C8FCB3A3007FB812F8B912FCA26C17F836367BB641>6
D<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3F
E0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECA
FCEA0FF8EA3FE0EAFF8048CBFC6C7EEA7FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE
903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0
EE0FF8EE03FE933800FF80EF3FC0170FEF038094C7FCAD007FB81280B912C0A26C178032
4279B441>20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB
01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE
1FF0EE07FCEE01FF9338007FC0171F177F933801FF80933807FC00EE1FF0EE7FC04B48C7
FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC0
4848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAD007FB81280B912C0A26C178032
4279B441>I<007FB512FCB712C016F06C15FCC8EA07FE9238007F80EE1FC0EE07E0707E
707E707E177C83A283A2EF0F80A2170718C0A21703A81707A21880170FA2EF1F00A2173E
A25F17FC4C5A4C5A4C5AEE1FC0EE7F80DB07FEC7FC007FB65AB712F016C06C02FCC8FC32
3279AD41>27 D<1478A414F85CA213015C1303495AA2495A49CCFC5B137E5B485A485AEA
0FE0003FBA12FEBCFCA2003F19FED80FE0CCFCEA03F06C7E6C7E137E7F7F6D7E6D7EA26D
7E1301801300A2801478A4482C7BAA53>32 D<153CA2157C157815F84A5A5D14034A5A4A
5A4ACBFC5C4AB812FE91BAFC5B5BD907C0CBFCEB1F80017FCCFC13FCEA07F8EA1FE0EAFF
80A2EA1FE0EA07F8C67E137FEB1F80EB07C06DBAFC7F7F6E17FE6ECBFC806E7E6E7E6E7E
1401816E7E1578157C153CA2482E7BAB53>40 D<173CA2173E171E171F717E170784717E
717E717E84007FB87EBAFC8585CBEA03E0F001F8F000FE193FF11FE0F107F8F101FFA2F1
07F8F11FE0F13F0019FEF001F8F003E0BA5A6196C7FC6C5FCB5A604D5A4D5A4D5A60170F
4DC8FC171E173E173CA2482E7BAB53>I<D90FF0ED07F0D93FFEED3FFE90B56C91B5FC00
036E903903F807C02707F07FF0903907C001E0270F801FF890390F8000F090260007FC01
3EC71270001E6D6C491438486D6C0178141C00386D6D5A48DA7FC1150E92383FE3E00060
91261FF3C01406EEF78000E0DA0FFF1507486E90C812036F5AA26F7E6F7F707EA24C7E6C
4A6D14070060DBEFF81406ED03CF0070912607C7FC140E92380F83FE6CDB01FF141CDB1E
006D133C6C023E6D6C13786C4A6D6C13F0000FD901F090381FF8016C6C484890390FFE0F
E02703E01FC00103B512C0C6B5C76C1400D97FFC9138007FFCD90FE0ED0FF048267BA453
>49 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA01F8485A485A
485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9FCA27EA21278
127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE010314FF130002
1F13FE283279AD37>I<EE0180EE03C01607A2EE0F80A2EE1F00A2163EA25EA25EA24B5A
A24B5AA24B5A150F5E4BC7FCA2153EA25DA25DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2
143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133EA25B13FC5B485AA2485AA2
485AA2485AA248CAFCA2123EA25AA25AA25A12602A4E75BB00>54
D<0060161800F0163C6C167CA200781678007C16F8A2003C16F0003E1501A26CED03E0A2
6C16C06D1407A2000716806D140FA26C6CEC1F00A26CB612FEA36C5D01F8C7127CA2017C
5CA2013C5C013E1301A2011E5C011F1303A26D6C485AA201075CECC00FA2010391C7FC6E
5AA2903801F03EA20100133CECF87CA2EC7878EC7CF8A2EC3FF0A26E5AA36E5AA36E5A6E
C8FC2E3C80B92F>56 D<156015F0A21401EB07F190383FFFE0EB7C1FEBF00748486C5AD8
03C07F4848487ED80F007FA248497E001E14BC153C003E143E141FA248EB1E1F143EA214
3CA2147C00FC1580147814F8A214F0A21301A214E01303A214C0A21307A21480A2130FA2
14005B007C1500131EA2D87E3E5BA2D83E3C133E137CA21378001F5C13F8000F14784913
F800075C0003495AEBE0033901F007802603FC1FC7FCEBFFFEEBC7F0D807C0C8FCA25BA2
6CC9FC21477CBF2A>59 D<ED03FE92381FFF80037F13C00203B5FCEC07C091381E003F4A
131F14F049481480495A495A49C7EA3F005B133E49147EA249147C000115FC495C0003EC
01E0495C000791C8FC5B120FA2485AA3123F90CAFCA35AA2127EA312FEA87E161E5E6D14
F8127F6D495A4B5A6C6C5C6D495A6C6C49C7FC01FE133C390FFF80F86CEBFFE06C1480C6
49C8FCEB3FF02A3D7FBA2C>67 D<0203B512FE027FECFFF049B712FC010F16FF90273FC3
F00080D9780302077F2601E0071401D803C06F6C7ED80780163F000F171FEA1F00484A14
0F123E5A0078010F5E12C0C7FC4B4A5AA296C7FC021F5D183E4B5C187860023F4A5A4D5A
92C7000FC8FC173EEE03F84AEBFFE0DA7E0313804B48C9FC4B7EECFC036F7F6F7F010114
7F4A80163F707E495A707EA249481307830403151049486E14F0F101E04A6D6CEB03C001
1F933880078070EC0F0049C8EBC01E716C5A013E92383FF0F0017EEEFFE0017C6F138049
6F48C7FC01E0ED07F0443B7FB846>82 D<EC01F8140FEC3F80ECFC00495A495A495AA213
0F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E
131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D<F10180F103C01907A2F10F80A2F11F00A2193EA261A261A24E5AA24E5AA24E5AA24E5A
A296C7FC60A2183EA260A260A24D5AA24D5AA24D5AA24D5AA24DC8FCA20130153E13F000
015EEA07F8000F5E487E00794B5AEAE1FE00C04B5AC67E6D4A5AA26E495A133F6E49C9FC
131F6E133E130F6E5B13076E1378010314F8A26E485A13016E485A13006E485A147FED8F
80143F039FCAFC15DFEC1FFEA26E5AA26E5AA26E5AA26E5A5D42547B8345>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmtt10 10 15
/Fj 15 120 df<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80
000006C77EC8127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12
FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC
27247CA32C>97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138
F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2
ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F839
00F03FC027337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0
485A49137E4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C
6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE
4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48
487F90C7FC007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6C
B612FC6CECBFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F
13F048B57E48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E
15E015075AB7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C
6CEB3FC001FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<
EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F
02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>104
D<1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A800
7FB512FCB612FEA36C14FC1F3479B32C>I<387FFFE0B57EA37EEA0003B3B3A5007FB612
80B712C0A36C158022337BB22C>108 D<397FF01FE039FFF87FFC9038F9FFFE01FB7F6C
B6FC00019038F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C
01E0140029247FA32C>110 D<EB07FCEB1FFF017F13C048B512F048803907FC07FC390F
F001FE48486C7E0180133F003F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15
C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13
C0011F90C7FCEB07FC23247CA32C>I<397FF01FE039FFF8FFF801FB13FE90B6FC6C1580
00019038F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE
6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01
F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA32C>I<D87FFEEB3FC0B53801FF
F0020713F8021F13FC6C5B39003F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391
C8FCAF007FB512E0B67EA36C5C26247EA32C>114 D<90387FF8700003B512F8120F5A5A
387FC00F387E00034813015AA36CEB00F0007F140013F0383FFFC06C13FE6CEBFF800003
14E0C66C13F8010113FCEB0007EC00FE0078147F00FC143F151F7EA26C143F6D133E6D13
FE9038F007FC90B5FC15F815E000F8148039701FFC0020247AA32C>I<131E133FA9007F
B6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB512
80160001035B6D13F89038003FE0232E7EAD2C>I<D87FFFEB7FFF6EB5FCB515806C1600
4A7ED807C0EB01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700
005D9038F9E3CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29
247FA32C>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmcsc10 10 23
/Fk 23 122 df<121C127FEAFF80A5EA7F00121C090977881B>46
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8EB7FF0B612F8A31D3877B72E>49
D<EB0FF8EB3FFF90B512C03903E01FF039078007FC390E0001FE486D7E5A0030EC7F8000
70EC3FC0126012FCB4EC1FE07FA56CC7FC121CC8FCED3FC0A3ED7F8016005D5D4A5A4A5A
4A5A5D4A5A4A5A4AC7FC147E14F8495A495A495A495A91C71260131E13384914E04914C0
485A485A48C7120148B6FC5A5A481580B7FCA323387BB72E>I<EB07F890383FFF8090B5
12E03903F00FF039078003FC48486C7E001E130081EA3FC06DEB7F80A56C5A6C5AC8EAFF
00A34A5A5D4A5A5D4A5A4A5A027FC7FCEB3FF814FF9038000FE06E7EEC03FC6E7E6E7E16
80157F16C0A2153F16E0A2121EEA7F80487EA4ED7FC05B007F1580007EC712FF00701500
6C495A001E495A6C6C485A3907F00FF00001B512C06C6C90C7FCEB0FF8233A7BB72E>I<
151C153CA2157C15FCA214011403A21407140F141D141914311471146114C11301EB0381
14011307130E130C131813381330136013E0EA01C01380EA03005A12065A121C5A123012
705AB712FEA3C73801FC00AB4A7E49B512FCA327397DB82E>I<00061406D80780131E90
38F801FC90B5FC5D5D15C05D4AC7FC38067FF090C9FCABEB03FC90381FFF8090387C07E0
9038E001F03907C000F8497F90C7127E0006147FC8EA3F80A216C0151FA216E0A4123E12
7F487EA490C713C048143F126016800070147F6C150015FE6C5C000F495A39078007F039
03F01FE06CB512806C6C48C7FCEB0FF0233A7BB72E>I<EC3FC0903801FFF801077F9038
0FE01E90383F800790387E001F49EB3F804848137F12035B485A000FEC3F0049131E001F
91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F
01E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15
006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7BB72E>
I<DB7FC01330912607FFF81370023F13FE913AFFC01F80F0903A03FE0003E1D907F8EB00
F3D91FE0147B4948143F4948141F49C8120F4848150748481503A24848150148481500A2
485A1870123F5B1830127FA349160012FFAB127F7F1830A2123FA27F001F177018606C7E
18E06C6C16C06C6C150118806C6C15036C6CED07006D6C5C6D6C141E6D6C5CD907F85CD9
03FEEB01E0903A00FFC00FC0023FB5C7FC020713FC9138007FE0343D7ABA41>67
D<B712F816FF17C00001903980003FF06C90C7EA07FCEE01FEEE007F717E717E717E717E
841703717EA284170084A21980187FA319C0AB1980A4F0FF00A3601701601703604D5A4D
5A171F4D5A4D5ADC01FEC7FCEE07FC486DEB3FF0B85A94C8FC16F83A397CB845>I<B612
E0A3000101C0C8FC6C90C9FCB3AD1706A5170E170CA3171CA3173C177CA217FC1603EE0F
F8486D137FB8FCA32F397CB839>76 D<003FB812FCA3D9C001EB800390C790C7FC007C17
3E0078171E0070170EA300601706A400E01707481703A4C81500B3B0020313C0010FB612
F0A338397CB841>84 D<1407A24A7EA34A7EA3EC37E0A2EC77F01463A2ECC1F8A201017F
1480A2903803007EA301067FA2010E80010C131FA2496D7EA2013FB57EA2903830000749
6D7EA3496D7EA200018149130012036D801207D81FE0903801FF80D8FFF8010F13F8A22D
2C7DAB33>97 D<B712E0A23907F8000F6C481303ED00F01670A21630A41618A215C01600
A31401A2140790B5FCA2EBF0071401A21400A21606A21500A2160CA4161CA2163C167C16
F8486C1307B7FCA2272B7CAA2E>101 D<B712C0A23907F8001F6C481303ED01E01500A2
1660A41630A215C01600A31401A2140790B5FCA2EBF0071401A21400A492C7FCAB487EB5
12E0A2242B7CAA2C>I<B539C07FFFE0A23B07F80003FC006C486D5AB190B6FCA29038F0
0001B2486C497EB539C07FFFE0A22B2B7CAA33>104 D<B512C0A23807F8006C5AB3B348
7EB512C0A2122B7CAA19>I<B512E0A2D807F8C8FC6C5AB3A61660A416C0A31501A21503
A21507ED1F80486C13FFB7FCA2232B7CAA2B>108 D<D8FFF0ED3FFC6D157F0007178000
031700017C15DFA26DEC019FA36DEC031FA26D6C1306A36D6C130CA26D6C1318A26D6C13
30A36D6C1360A2027C13C0A391383E0180A291381F0300A3EC0F86A2EC07CCA3EC03F8A2
486C6C5AA2D81FE0ED3F803CFFFC00E007FFFCA2362B7CAA3E>I<D8FFF0903807FFE07F
0007020013006C6C143C7F017F14187F806D7E130F806D7E6D7EA26D7E6D7E147E147FEC
3F80141F15C0EC0FE0EC07F0140315F8EC01FC140015FE157FED3F98151F16D8ED0FF815
07A215031501A2486C13001678D81FE01438EAFFFC16182B2B7CAA33>I<EC7FC0903803
FFF890380FC07E90393F001F80017CEB07C04848EB03F048486D7E4913004848147C000F
157E484880A248C8EA1F80A24816C0A2007E150FA200FE16E0AA007FED1FC0A36C16806D
143F001F1600A26C6C147E6C6C5CA26C6C495A6C6C495AD8007CEB07C0013FEB1F809026
0FC07EC7FC903803FFF89038007FC02B2D7BAB35>I<B67E15F03907F800FE6C48133FED
0FC06F7EA26F7E82A65E4B5AA24B5A033FC7FC15FE90B512F05D9038F001F8EC007E816F
7EA26F7EA582A4171816F015071738486C903803F830B5D8C00113709238007FE0C9EA1F
802D2C7CAA32>114 D<007FB712C0A23A7E003FC00F007890381F800300701501160012
6000E016E0A2481660A5C71500B3A8EC7FE0011FB57EA22B2B7DAA31>116
D<B56CEB1FFEA2D80FFCC7EA0FF00003ED07C01780000116006C6C1406017F140E160C6D
6C5B6D6C133816306D6C5B6D6C13E05E6D6C485A903801FC0393C7FC903800FE06EC7F0E
150CEC3F9CEC1FF85D140F6E5AAF4A7E49B57EA22F2B7EAA33>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmti10 10 30
/Fl 30 122 df<150C151C153815F0EC01E0EC03C0EC0780EC0F00141E5C147C5C5C495A
1303495A5C130F49C7FCA2133EA25BA25BA2485AA212035B12075BA2120F5BA2121FA290
C8FCA25AA2123EA2127EA2127CA412FC5AAD1278A57EA3121C121EA2120E7EA26C7E6C7E
A212001E5274BD22>40 D<140C140E80EC0380A2EC01C015E0A2140015F0A21578A4157C
153CAB157CA715FCA215F8A21401A215F0A21403A215E0A21407A215C0140F1580A2141F
1500A2143EA25CA25CA2495AA2495A5C1307495A91C7FC5B133E133C5B5B485A12035B48
C8FC120E5A12785A12C01E527FBD22>I<EA03C0EA07F0120F121F13F8A313F0EA07B0EA
003013701360A213E013C01201EA038013005A120E5A5A5A5A5A0D197A8819>44
D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F80127F12FFA31300127E123C0909
778819>I<EE01C01603A21607160FA2161F83163FA2167F16FF16EF150116CFED038FA2
ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC0700A2140EA25C
A25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B130E5BA25B1378
137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65 D<0107B612FCEFFF8018C0
903B000FF0001FF04BEB07F81703021F15FC17014B14FEA2023F1400A24B1301A2147F18
FC92C7120318F84A140718F04AEC0FE0EF1FC00101ED3F80EF7F004AEB01FEEE07F849B6
12E05F9139F80007F0EE01FC01076E7E177F4AEC3F80A2010F16C0171F5CA2131F173F5C
A2133FEF7F805C1800017F5D4C5A91C7485A5F49140FEE1FE0494A5A00014AB45AB748C7
FC16F816C037397BB83A>I<0107B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8
141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301
EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B512FCA337397BB838>80
D<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF01707020FEC03F8EF01FC5DA202
1F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F18E04AEC1FC0EF3F004A14FE
EE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC0F80834A6D7E8301071403A2
5C83010F14075F5CA2011F140FA25CA2133F161F4AECE007A2017F160F180E91C7FC4902
0F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF3F80383B7CB83D>82
D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F
5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677
A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE
9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A
127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03
E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E0
90381F0070017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC48
5AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F80
6CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507
A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF
017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA21407
5A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380F
C1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F
80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01
E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1F
F0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D
010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA41307
5CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA
0F80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F
80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F12074914
00A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF39038
0FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07
E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5C
A3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16
C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8
163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E3804890
3800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB
13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203
A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07
F8EA01E0143879B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FC
A35B017EEB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF8
3891383003800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1
FCEBC07E147F80001F809039801F81C0A21583003F013F138001001303A2150748150000
7E133EEC1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>107
D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA212
03A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131E
EAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>I<D801E013FE3A
07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0007813C0007081
14804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12034990383F
8380160316070007027F130049137EA2160E000F147C49141E161C5E001FEC3C7849EB1F
E00007C7EA0780292679A42F>110 D<147F903803FFC090380FC1F090381F00F8017E13
7C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FE
A2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8
380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF090393CF078
7C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D800
03143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A
5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B
1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE0
3F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA3
12035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F01507D803FC903903801F80D8071E9039
07C03FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E1680
00E0ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E0007010114
1C01E05B173C1738A217781770020314F05F0003010713016D486C485A000190391E7C07
802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>119
D<903907E007C090391FF81FF89039787C383C9038F03E703A01E01EE0FE3803C01F0180
13C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C75AA2147EA214FEA25C
A21301A24A1370A2010314F016E0001C5B007E1401010714C000FEEC0380010F1307010E
EB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA427>I<13F0D803FCEB
01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F07E148012
E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA314035D140700
03130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E
147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi7 7 21
/Fm 21 121 df<EB0FE0EB3FF8EBF83E2601E01F13603A03C00F80C038078007D80F0013
C0001EECC180123E003CECE300007C130315E65A15ECA215F8485C5DA40078130F021D13
C06C903879F180391E03E0F33A0FFF807F003903FC003C231B7C992B>11
D<15FE913807FF8091381F03C091383801E0146002C013F0EB0180EB030013065BA249EB
03E01338013014C0ED078049130F91381FFE004A5AA29038C01FDEEC000FA2ED0780485A
A448C7120FA448EC1F00A2151E153E48143CD80D805B6D5B390CE001E039187007C0D93F
FFC7FCEB0FFC90C9FC5AA45AA45A24347FA826>I<137E48B4EB0180000713C0489038E0
0300481406383E01F0393800700C4813380060EB181848131CEC0C305AC75B14065DA3EC
0780A292C7FCA31406A3140EA2140C141CA45CA31430A2142021267E9923>I<1238127C
12FE12FFA2127F123B1203A31206A3120C121812381270122008127A8614>59
D<EC0180140314071500A25C140E141E141CA2143C143814781470A214F05CA213015C13
035CA2130791C7FC5B130EA2131E131C133C1338A21378137013F05BA212015B12035BA2
120790C8FCA25A120E121E121CA2123C123812781270A212F05AA2193B7CAB22>61
D<4B7E1503150782150F151FA2153FA2156F15CF82EC0187140315071406140E140C0218
7FA2EC30031460A214C013011480D903007F91B5FC5B90380C0001A25B13380130805B01
E013005B12011203000F4A7ED8FFF890381FFFE0A22B2A7DA932>65
D<013FB512F816FF903A01FC001FC04AEB07E0EE03F001031401A24A14F8A2130717F04A
130317E0010F1407EE0FC04AEB1F80EE7E00011F495A91B512F0A291388001FC013FEB00
7E8291C7EA1F80160F4915C0A2137EA213FEEE1F805BEE3F000001153E16FE49EB01F84B
5A0003EC1FC0B7C7FC15F82D287DA732>I<4AB41308020FEBE01891397F80F038903A01
F8001870D903E0EB0CF0D90F80130749C71203013E15E05B491401485A484815C0485A12
0F5B001F168090C8FC4892C7FCA2127EA4127C12FCA21606007C5DA35E007E5D123E5E6C
5D6C6C495A00074AC7FCD803E0130E6C6C13383900FE01F090383FFFC0D907FCC8FC2D2A
7DA830>I<013FB512E016FC903901FC007F4AEB0F80EE07C0010315E016035C17F01307
EE07E05CA2010FEC0FC017804AEB1F00163E011F14F8ED07F091B51280A290393F800FE0
ED03F002007F15015BA2137EA201FE1303A2495CA20001160817184914E017380003EDF0
70B5D8C00113E0923800FFC0C9EA3F002D297DA732>82 D<EB1F80EB7FC0EBF0E73803C0
3FEA078048487EA2121E003E133E123C127CA2485BA4485B1530A3903801F060A2EA7803
010E13C0393C1CF980381FF07F3907C01E001C1B7C9924>97 D<EA01F0123FA2EA03E0A2
1207A25BA2120FA25BA2121F139FEB3FC0EBE0E0383FC0F0EB0078A2123E007E137CA212
7CA212FC14F85AA338F001F0A214E0130314C0EB078038700F00EA781E6C5AEA1FF0EA07
C016297CA71D>I<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E137C
123E003C1300127CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA03
F8171B7C991E>I<15F8141FA2EC01F0A21403A215E0A21407A215C0A2140FEB1F8F9038
7FCF80EBF0EF3803C03FEA0780390F001F00A2001E5B123E003C133E127C147E5A147CA2
14FC5AECF830A3903801F060A2EA7803010E13C0393C1CF980381FF07F3907C01E001D29
7CA723>I<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B
12C0A2EA01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A
11287DA617>105 D<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB0C3C1318
EB303E136013C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FC
12FC133E485AEA70F8EA7FE0EA1F80193380A61B>I<133EEA07FEA2EA007CA213FCA25B
A21201A25BA21203EC07809038E01FC0EC38600007EB61E014C3EBC187EBC307D80FC613
C09038CC038001B8C7FC13E0487E13FEEB3F80EB0FC0486C7E1303003E1460A2127EECC0
C0127CECC18012FC903801E30038F800FE0070137C1B297CA723>I<137CEA0FFCA2EA00
F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123E
A2127EA2EA7C18A3EAF830A21320EA786013C0EA3F80EA0F000E297EA715>I<3B07801F
C007E03B0FE07FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801ED860FEEB3F
005B49133E00C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C0F8003E003
E060A218C0933801E180271F0007C013E3933800FF00000E6D48137C341B7D993B>I<90
38F007C03901FC1FF039031E78780006EBE03C90381FC01C000CEB801E14005B0018141F
133E1200137E153E137CA213FC157C5B1578000114F0A2EC01E0EC03C03903FC07809038
FE1F00EBE7FCEBE1F0D807E0C7FCA25BA2120FA25B121FEAFFF8A22025809922>112
D<3807803E390FE0FF803818F3C13930F703C0EBFE073860FC0F13F8158039C1F0070091
C7FC1201A2485AA4485AA4485AA448C8FCA2120E1A1B7D991F>114
D<90387C03C03901FF0FF03907079C30390E03B078000CEBF0F8001813E1123015F03960
07C0E015001200A2495AA449C7FC15301238007C1460EAFC3E15C0EAF87E39F06F038039
70C70700383F83FE381F01F81D1B7D9926>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmsy7 7 8
/Fn 8 107 df<B712FEA327037A8F34>0 D<1338A50060130C00F8133E00FC137E00FE13
FE383FBBF83807FFC000011300EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00
F8133E0060130C00001300A517197B9A22>3 D<137F3801FFC0000713F0380FC1F8381F
007C003C131E0038130E0078130F00707F00F01480481303A56C13070070140000785B00
38130E003C131E001F137C380FC1F86CB45A000113C06C6CC7FC19197C9A22>14
D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A21300A25A123EA35AA312
7812F8A25A12100D1E7D9F13>48 D<017F157F2601FFE0903803FFC0000701F890380FF1
F0260F83FC90381F0038261E00FF013C7F001890263F8078130C4890261FC0E07F007090
260FE1C07F0060EB07E3913803F780486DB4C7EA01806E5A157E157F81824B7E0060DAF7
E0EB0300913801E3F0DBC3F85B6C90260381FC13066C90260F00FE5B001C011E90387F80
3C6C017C90381FE0F82607C7F86DB45A2601FFE0010313C06C6CC86CC7FC391B7C9942>
I<49B5FC130F133F01FFC7FCEA01F8EA03E0EA078048C8FC121E121C123C123812781270
A212F05AA2B7FCA300E0C8FCA27E1270A212781238123C121C121E7E6C7EEA03E0EA01F8
6CB4FC013FB5FC130F130120277AA12D>I<EC03FEEC1FFF91B5FC903803F03F90380780
1FEB0E00133C49131E49133E4848133C4848137C000714784913F8000F14E090C7128048
1400121E123E123C127CA3127812F8A77EA2153C007E147815F0007FEB01E0393F8003C0
9038C00780391FF81E00380FFFFC6C13F0C61380202A7EA824>67
D<12E0B3B3B3A5033B78AB14>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmmi8 8 2
/Fo 2 111 df<151FEC03FFA2EC003FA2153EA2157EA2157CA215FCA215F8A21401EB07
E190381FF9F0EB7C1DEBF80FEA01F03903E007E0EA07C0120FEA1F8015C0EA3F00140F5A
007E1480A2141F12FE481400A2EC3F021506143E5AEC7E0E007CEBFE0C14FC0101131C39
3E07BE18391F0E1E38390FFC0FF03903F003C0202F7DAD24>100
D<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00126013FEEAE0
FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F
1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>
110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr6 6 2
/Fp 2 51 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmr8 8 43
/Fq 43 122 df<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A
5A126009157A8714>44 D<B512C0A412047F9018>I<123C127E12FFA4127E123C08087A
8714>I<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248EB03
E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803
F0FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113
FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC0
5A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00
147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0
001FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC
1F80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014
F0EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C0
0070131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E
143EA2147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA0180
120313001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E
2D7EAC23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1F
C0EB7FF8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A41278
12FCA448EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE038
007F801C2D7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0
EA0F80A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB448
7E01001380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E001F14C0
6CEB0F803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<EB1FC0EBFFF0
3803E07C3807801E48487E001EEB0780A248EB03C0A4123E1407003F1480381FC00F01E0
1300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FFD807831380D81F0013
C0001E133F48EB1FE0007C13070078EB03F012F84813011400A46C14E000781301007C14
C0003C13036CEB0780390F800F003807E03C3801FFF038003FC01C2D7DAB23>56
D<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E14C0127C00FC14
E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F33800FFC39038
3F03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B001C5B380E03E0
3807FF80D801FEC7FC1C2D7DAB23>I<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FC
A2EC70FEEC607EA24A7EA349486C7EA2010380EC000FA201066D7EA3496D7EA2011FB57E
A29038180001496D7EA349147EA201E0147F4980A20001ED1F801203000716C0D80FF0EC
3FE0D8FFFC0103B5FCA2302F7EAE35>65 D<DA1FF013C09138FFFE01903903F00F839039
0F8001E3013FC71277017C143F4848141F4848140F48481407A248481403121F49140112
3F90C8FC481500A300FE1600AB127F17C0A27E7F001F15016D1580120F6C6C1403EE0700
6C6C14066C6C140ED8007C5C013F147890390F8001E0903903F00FC0902600FFFEC7FCEC
1FF02A2F7CAD33>67 D<B612F815FF3A03F8001FE00001EC03F0ED00F8167E82EE1F8016
0F17C0EE07E0A2EE03F0A217F81601A317FCAA17F8A3EE03F0A217E0160717C0160FEE1F
80EE3F00167E5EED03F00003EC1FE0B7128003F8C7FC2E2D7DAC36>I<B712FCA23903F8
00030001EC007C163E161E160EA21606A3160716031518A21600A31538157815F890B5FC
A2EBF800157815381518A592C7FCAB487EB512F8A2282D7EAC2E>70
D<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F
4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600A992381FFF
FEA2007F9138001FE0EE0FC0A27E7F121F7F120F6C7EA26C7E6C6C141FEA007C013F143F
D90F8013F3903903F007C10100B51200DA1FF813002F2F7CAD37>I<B539F03FFFFCA2D8
03FCC713006C48147EB290B612FEA201F8C7127EB3486C14FFB5D8F03F13FCA22E2D7DAC
35>I<D8FFF8903803FFFC7F00019138003FC06DEC0F006D1406EBBF80A2EB9FC0EB8FE0
138780EB83F8138180EB80FE147E147FEC3F80EC1FC0140F15E0EC07F0140315F8EC01FC
140015FE157FED3F86151F16C6ED0FE6150716F6ED03FE1501A21500167E163EA2486C14
1ED80FF0140EB5FC16062E2D7DAC35>78 D<EC3FF0903801FFFE903907E01F8090391F80
07E090393E0001F001FCEB00FC4848147E4848804848EC1F8049140F000F16C04848EC07
E0A248C8EA03F0A24816F8A2007E1501A200FE16FCAA007FED03F8A36C16F06D1407001F
16E0A26C6CEC0FC06D141F000716806C6CEC3F006C6C147E6C6C5C017E495A90391F8007
E0903907E01F80902601FFFEC7FC9038003FF02E2F7CAD37>I<B612C015FC3903F8007F
0001EC0FC06F7E6F7E6F7E82150082A55E15015E4B5A4B5A4B5A037FC7FC90B512FC15F0
9038F800FC153E6F7E150F826F7EA582A5170316F815031707486C903801FC0EB539F000
FE1CEE3FF8C9EA07E0302E7DAC34>82 D<90383F80303901FFF0703807C07C390F000EF0
001E13074813034813011400127000F01470A315307EA26C1400127E127FEA3FE013FE38
1FFFE06C13FC6C13FF00011480D8003F13E013039038003FF0EC07F81401140015FC157C
12C0153CA37EA215787E6C14706C14F06CEB01E039F78003C039E3F00F0038E07FFE38C0
0FF01E2F7CAD27>I<007FB712F8A29039000FC003007C150000701638A200601618A200
E0161CA248160CA5C71500B3A94A7E011FB512E0A22E2D7EAC33>I<B53C801FFFF001FF
F8A22707FC000190C7EA3FC0D803F06D48EC1F00047E140EA26C6C027F140CA26D171C00
00DBDF801318A26D1738017E9026018FC01330A2017F17706D90260307E01360A2028016
E0011F90260603F05BA202C01501010F90260C01F85BA202E01503010790261800FC90C7
FCA202F05D010349EB7E06A202F8150E010149EB3F0CA202FC151C010049EB1F98A202FE
15B8DA7F80EB0FF0A2023F5D92C71207A26E5D021E1403A2020E5D020C1401452E7FAC48
>87 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F
3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C
391F83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EA07C012FFA2120F1207AC14FE
9038C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16C0A9
ED1F80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FCC7FC
222F7EAD27>I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB
0F00007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E0070038
01F03E38007FF8EB1FC01A207E9E1F>I<15F8141FA214011400ACEB0FE0EB7FF83801F8
1E3803E0073807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017E
EB8003000F13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB
1F80EBFFF03803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FC
A3B6FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801
F03C38007FF8EB1FC01A207E9E1F>I<013F13F89038FFC3FE3903E1FF1E3807807C000F
140C391F003E00A2003E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC
90C8FCA3121E121F380FFFF814FF6C14C04814F0391E0007F848130048147C12F848143C
A46C147C007C14F86CEB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>
103 D<EA07C012FFA2120F1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7E
A25BA25BB2486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0
EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<EA07C012
FFA2120F1207B3B3A3EA0FE0EAFFFEA20F2E7EAD14>108 D<3807C0FE39FFC3FF809038
C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>
110 D<EB1FE0EB7FF83801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A2
48EB00F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F8039
01F03E0038007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01
F03907F800FC49137E49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D
137C5D9038FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B
7E9D27>I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5
FCA2181E7E9D1C>114 D<3801FE183807FFB8381E01F8EA3C00481378481338A21418A2
7E7EB41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C13
1EA27EA26C133CA26C137838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0A3
12011203A21207121FB512F0A23803E000AF1418A714383801F03014703800F860EB3FE0
EB0F80152A7FA81B>I<D807C013F800FF131FA2000F130100071300B21401A314033803
E007EC0EFC3A01F81CFFC038007FF890391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A
0FE0007E000007147C15380003143015706C6C1360A26C6C5BA390387C0180A26D48C7FC
A2EB3F07EB1F06A2EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>I<3BFF
FC3FFE07FFA23B0FE003F001F801C09038E000F00007010114E0812603E00314C0A29138
07F8012701F006781380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D48
6C5AA2168C90391F600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I<
3AFFFC01FFC0A23A0FE0007E000007147C1538000314306D137000011460A26C6C5BA2EB
FC01017C5BEB7E03013E90C7FCA2EB1F06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D
5AA2495AA2130391C8FC1278EAFC06A25B131CEA7838EA7070EA3FE0EA0F80222B7F9C25
>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmsy6 6 4
/Fr 4 123 df<136013701360A20040132000E0137038F861F0387E67E0381FFF803807
FE00EA00F0EA07FE381FFF80387E67E038F861F038E060700040132000001300A2137013
6014157B9620>3 D<01FEEC0FE02603FFC0EB3FF8000F01F0EBFE3E3B1F0FF801F0073C
3C01FC07C003803B3000FE0F00010070D93F1EEB00C00060EB1F9C00E0D90FF81460485C
14076E7E6E7E81020315E00060D9073F14C091390F1F80016C90261E0FE0138000389039
7C07F0073C1C01F003FE1F003B0F8FE001FFFE3B03FF80007FF8C648C7EA0FE033177C95
3D>49 D<136013F0A81360A4387C63E0B512F0A2387C63E038006000A313F0B3A21360A7
142F7CA31E>121 D<136013F0A61360A3B512F0A338006000A313F0A6136090C7FC1360
13F0A61360A3B512F0A338006000A313F0A61360142F7CA31E>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr7 7 11
/Fs 11 121 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA212
1C123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E0
136013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013
E0120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E01201
13C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<EB3F803801FFF03803E0F838
07803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F
80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA521>48
D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF000313
E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E
147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300030012065A001F
B5FC5A485BB5FCA219267DA521>I<007FB712C0B812E0A2CBFCABB812E0A26C16C02B11
7D9633>61 D<13FE3807FFC0380F03E0381C00F0003E1378003F137C143C143E121EC7FC
A3EB3FFEEA01FF3807F03EEA1FC0EA3F00127EA2481418A3147E127EECDF38393F838FF0
390FFE0FE03903F807C01D1C7E9A21>97 D<120EEA3F80A5EA0E00C7FCA7EA078012FFA2
121F120FB3121FEAFFF8A20D287EA713>105 D<260F81FC137F3BFF8FFF03FFC0903A9C
0F8703E03B1FB007CC01F0D80FE013D8903AC003F000F8A301805BAF486C486C487E3CFF
F83FFE0FFF80A2311A7E9937>109 D<380F81FC38FF8FFF90389C0F80391FB007C0EA0F
E09038C003E0A31380AF391FC007F039FFF83FFEA21F1A7E9925>I<39FFF81FFCA2390F
F00FE0D807E01380D803F013003801F80E00005BEB7C386D5AEB3FE06D5A130F13078049
7EEB1DF8EB38FCEB707EEBE03E48487E0003EB0F80000714C0001F14E039FFE01FFEA21F
197F9823>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmmi10 10 46
/Ft 46 127 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E130F499038
07C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0007F16C0
90C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E91381DF81800
3F14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003FC0EB0F80
2E267DA435>11 D<ED01FC923807FF8092381E07C092387801E003E013F0913901C000F8
4A5A4AC7FC020E14FC5C5C143002701301026014F814E05C010114034A14F0130391C7EA
07E017C049140F0106EC1F809238FFBF00D90E0113FC90390C0381F8EDFFFE0200131F01
1C010013800118140F17C0A213380130EC07E0A2160F13701360A301E0141F4915C0A300
01153F1780A2EE7F00120316FE5E6D495AD80760495AD80670495A6D495A6D495AD80E0E
49C7FC390C0780FC903801FFF09038007F80001C90C9FC1218A312381230A312701260A3
12E05AA22E4B7EBA2F>I<EB07F0D91FFC1430D97FFE147090B5146000036E13E0486E13
C0D9F01F1301270F8007E01380261F00011303001CD900F0130048EC7007160648EC300E
0060EC380CED181C00E01518C8121CED0C3816301670166016E05EA2150D5EA2150F93C7
FCA2150EA3150CA3151CA215181538A45DA45DA44A5AA35D2C377FA42B>I<1403EC3FF8
91387FFF80D901E313C014800103133F9138001F80ED070092C7FC80A280A28080130180
80130080147F81143F8149B47E130790380F8FF0EB3E0F496C7E13F83801F003D803E07F
1207380FC0011380121FEA3F0014005A127EA212FE5D481301A35DA24813035D6C13075D
127C4A5A6C91C7FC5C6C133E6C6C5A3807C0F03801FFE0D8003FC8FC223D7DBB25>I<EC
3FF0EB01FF010F13E090383FC00049C7FC13FCEA03F8485A5B120F485AA2485AA2387FFF
FE80A290C8FC5A5AA5127EA4123E123F7E6C6C13606D13E03903E003C03901F01F003800
7FFCEB0FE01C257DA322>I<121C127FEAFF80A5EA7F00121C0909798817>58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<EF0180EF07C0171F177F933801FF00EE07FCEE1FF0EE7FC04B48C7
FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC0
4848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0
EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238
007FC0EE1FF0EE07FCEE01FF9338007FC0171F1707EF0180323279AD41>I<150C151E15
3EA2153C157CA2157815F8A215F01401A215E01403A215C01407A21580140FA215005CA2
141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5BA213
1E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5AA212
1E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<124012F812FE6C7EEA3FE0EA
0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80
ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0A2EFFF8093
3803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC
3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC
12F81260323279AD41>I<1760177017F01601A21603A21607160FA24C7EA21633167316
6316C3A2ED0183A2ED0303150683150C160115181530A21560A215C014011580DA03007F
A202061300140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B1338
5B01F01680487E000716FFB56C013F13FF5EA2383C7DBB3E>65 D<0103B77E4916F018FC
903B0007F80003FE4BEB00FFF07F80020FED3FC0181F4B15E0A2141FA25DA2143F19C04B
143F1980027F157F190092C812FE4D5A4A4A5AEF0FF04AEC1FC005FFC7FC49B612FC5F02
FCC7B4FCEF3FC00103ED0FE0717E5C717E1307844A1401A2130F17035CA2131F4D5A5C4D
5A133F4D5A4A4A5A4D5A017F4BC7FC4C5A91C7EA07FC49EC3FF0B812C094C8FC16F83B39
7DB83F>I<9339FF8001C0030F13E0037F9038F80380913A01FF807E07913A07F8000F0F
DA1FE0EB079FDA3F80903803BF0002FFC76CB4FCD901FC80495A4948157E495A495A4948
153E017F163C49C9FC5B1201484816385B1207485A1830121F4993C7FCA2485AA3127F5B
A312FF90CCFCA41703A25F1706A26C160E170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A16
076C6C020EC8FC6C6C143C6C6C5C6CB4495A90393FE00FC0010FB5C9FC010313FC903800
7FC03A3D7CBA3B>I<0103B7FC4916E018F8903B0007F80007FE4BEB00FFF03F80020FED
1FC0180F4B15E0F007F0021F1503A24B15F81801143F19FC5DA2147FA292C8FCA25C1803
5CA2130119F84A1507A2130319F04A150FA2010717E0181F4A16C0A2010FEE3F80A24AED
7F00187E011F16FE4D5A4A5D4D5A013F4B5A4D5A4A4A5A057FC7FC017F15FEEE03FC91C7
EA0FF049EC7FC0B8C8FC16FC16C03E397DB845>I<0103B5D8F803B512F8495DA2902600
07F8C73807F8004B5DA2020F150F615DA2021F151F615DA2023F153F615DA2027F157F96
C7FC92C8FCA24A5D605CA249B7FC60A202FCC7120101031503605CA201071507605CA201
0F150F605CA2011F151F605CA2013F153F605CA2017F157F95C8FC91C8FC496C4A7EB690
B6FCA345397DB845>72 D<0107B512FCA216F890390007F8005DA2140FA25DA2141FA25D
A2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA326397DB824>I<0103B6FC5B5E90
260007FCC8FC5D5D140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301
A25CA21303A25CA2130718404A15C0A2010F150118804A1403A2011F16005F4A1406170E
013F151E171C4A143C177C017F5D160391C7120F49EC7FF0B8FCA25F32397DB839>76
D<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07
E002FCEC03F0495A4948EC01F8495A4948EC00FC495A49C912FE49167E13FE49167F1201
485AA2485AA2120F5B001F17FFA2485AA34848ED01FEA400FFEE03FC90C9FCA2EF07F8A2
EF0FF0A218E0171F18C0EF3F806C167F180017FE4C5A6C6C5D1603001F4B5A6D4A5A000F
ED1F806C6C4AC7FC6D147E0003EC01F8D801FC495AD8007EEB0FC090263F807FC8FC9038
07FFF801001380383D7CBA3F>79 D<0103B7FC4916E018F8903B0007F80007FC4BEB00FE
187F020FED3F80F01FC05DA2021F16E0A25DA2143FF03FC05DA2027FED7F80A292C81300
18FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91B612FC17E0D903FCCAFCA25CA213
07A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CBFC497EB6FCA33B397DB835>
I<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07
E002FCEC03F0495A4948EC01F8495A4948EC00FC495A013F16FE49C9FC13FE187F485A12
035B12075B120F4916FF121FA2485AA34848ED01FEA448C9EA03FCA3EF07F8A218F0170F
18E0171F18C0EF3F807EEF7F0017FEDA07C05B6C90391FF001F8903980383803001F496C
485A9139E00C0FE0260FC0C0EB1F80D807E1D90E3FC7FC0280137ED803F1EB07F8D801F9
5C3A007FC00FC0903A3FE07F0003903807FFFE0100018F5BDA000F1306170E171E705A17
7CEEC1F816FF5FA25F5F6F5B6F48C7FCED00F8384B7CBA42>I<0103B612F849EDFF8018
E0903B0007F8001FF84BEB03FCEF00FE020F157FA24BEC3F80A2021F16C0A25DA2143FF0
7F805DA2027FEDFF006092C7485A4D5A4A4A5A4D5A4AEC1F80057FC7FC0101EC07F891B6
12E094C8FC9139FC000FC00103EC03F0707E4A6D7E831307177E5C177F010F5D5F5CA201
1F1401A25CA2133F16034A4A1360A2017F17E019C091C71401496C01011480B615039339
00FE0700EF7E0ECAEA1FFCEF07F03B3B7DB83F>I<92391FE00380DBFFFC130002036D5A
91390FE01F8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C495AA2
011F153891C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D
806D80021F7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94C7FC
A3003C153EA25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39
E03FFFF8010F13E0D8C00190C9FC313D7CBA33>I<0003B812FEA25A903AF8003FC00101
C0913880007E4848163C90C7007F141C121E001C92C7FCA2485CA200305C007017180060
130112E0485CA21403C716005DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147F
A292C9FCA25CA25CA21301A25CA21303A25CEB0FFC003FB6FC5AA237397EB831>I<267F
FFFC91383FFFC0B55DA2000390C83807FC006C48ED03E06060000094C7FC5F17065FA25F
6D5DA26D5D17E05F4C5AA24CC8FC6E1306A2013F5C161C16185EA25E6E5BA2011F495A15
0393C9FC1506A25D6E5AA2010F5B157015605DA2ECE18002E3CAFC14F3EB07F614FE5C5C
A25C5CA26D5AA25C91CBFC3A3B7CB830>86 D<147E903803FF8090390FC1C38090391F00
EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F147E90
C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F133000
3E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>
97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF9038
E707C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA214015A12
7EA2140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E5C38
3C01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<EC3FC0903801FFF0903807E0
3C90380F800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F143848
481300A2127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C14E0
390F8007C03907C03F003801FFF838003FC020267DA424>I<163FED1FFFA3ED007F167E
A216FEA216FCA21501A216F8A21503A216F0A21507A2027E13E0903803FF8790380FC1CF
90381F00EF017EEB7FC049133F485A4848131F000715805B000F143F485A1600485A5D12
7F90C7127EA215FE5A485CA21401A248ECF80CA21403161CEDF0181407007C1538007E01
0F1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B
7DB92B>I<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A12
07485A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5A
A7007E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF83800
3FC020267DA427>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C9FCA35B
90387E03F8EC0FFF91383C0F809039FEF007C0D9FDC07FEBFF80EC0003485A5BA2491307
12035BA2150F00075D5BA2151F000F5D5B153F93C7FC121F4990387F0180157EEDFE0300
3F02FC130090C7FC5EEDF80648150E007E150C161C5E00FEEC787048EC3FE00038EC0F80
293B7CB930>104 D<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F00
0E1380121C121812381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B
12035BA20007131813E01438000F133013C01470EB806014E014C01381EB838038078700
EA03FEEA00F815397EB71D>I<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0
ECF0F0903801C0F849487E14005B130E130C131CEB1801133801305BA2EB0003A25DA214
07A25DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B
123F387F83F0A238FF87E0495A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>
I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0
ED783801FEEBE0F89039FC01C1FCEC0383EC07070001130ED9F81C13F891383803F09138
7001E0000349C7FCEBF1C0EBF38001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E
7E141F001F80D9800F1330A21670003F011F136001001380A216E04815C0007E1481020F
1380158300FE903807870048EB03FE0038EB00F8263B7CB92B>I<EB0FC0EA03FF5AA2EA
001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2
120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E03A2EAFE07130612FCA2130E130C13
1C1318EA7C38EA3C70EA1FE0EA0780123B7DB919>I<D803E0017F14FE3D07F801FFE003
FFC03D0E3C0781F00F03E03D1C3E1E00F83C01F026383F38D9FC707F00304914E04A9038
7DC000007049EB7F8000604991C7FCA200E090C700FE1301485A017E5CA2000002011403
01FE5F495CA203031407000160495C180F03075D1203494A011F13601980030F023F13E0
0007F000C0495C1901031F023E1380000F1803494A150061033F150E001FEF1E1C4991C7
EA0FF80007C7000EEC03E043267EA449>I<D803E0137F3A07F801FFE03A0E3C0781F03A
1C3E1E00F826383F387F00305B4A137C00705B00605BA200E090C712FC485A137EA20000
140101FE5C5BA2150300015D5B15075E120349010F133016C0031F13700007ED80605B17
E0EE00C0000F15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432
>I<90390F8003F090391FE00FFC903939F03C1F903A70F8700F80903AE0FDE007C09038
C0FF80030013E00001491303018015F05CEA038113015CA2D800031407A25CA20107140F
A24A14E0A2010F141F17C05CEE3F80131FEE7F004A137E16FE013F5C6E485A4B5A6E485A
90397F700F80DA383FC7FC90387E1FFCEC07E001FEC9FCA25BA21201A25BA21203A25B12
07B512C0A32C3583A42A>112 D<02FC13C0903803FF0190380F838390383F01C790397E
00EF8049137F485A4848133F000715005B485A001F5C157E485AA2007F14FE90C75AA348
1301485CA31403485CA314075D140F127C141F007E495A003E137F381F01EF380F839F39
03FF1F80EA00FC1300143F92C7FCA35C147EA314FE5C130190387FFFF0A322357DA425>
I<3903E001F83907F807FE390E3C1E07391C3E381F3A183F703F800038EBE07F0030EBC0
FF00705B00601500EC007E153CD8E07F90C7FCEAC07EA2120013FE5BA312015BA312035B
A312075BA3120F5BA3121F5B0007C9FC21267EA425>I<14FF010313C090380F80F09038
3E00380178131C153C4913FC0001130113E0A33903F000F06D13007F3801FFE014FC14FF
6C14806D13C0011F13E013039038003FF014071403001E1301127FA24814E0A348EB03C0
12F800E0EB07800070EB0F006C133E001E13F83807FFE0000190C7FC1E267CA427>I<13
F8D803FE1438D8070F147C000E6D13FC121C1218003814011230D8701F5C12601503EAE0
3F00C001005B5BD8007E1307A201FE5C5B150F1201495CA2151F120349EC80C0A2153F16
81EE0180A2ED7F0303FF130012014A5B3A00F8079F0E90397C0E0F1C90393FFC07F89039
07F001F02A267EA430>117 D<01F8EB03C0D803FEEB07E0D8070F130F000E018013F012
1C12180038140700301403D8701F130112601500D8E03F14E000C090C7FC5BEA007E16C0
13FE5B1501000115805B150316001203495B1506150E150C151C151815385D00015C6D48
5A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>I<903907E001F090391FF807FC90
39783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A000E4A1300
000C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA2
0101141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE0E7C01C0D87C1C
495A2778383E0FC7FC391FF00FFC3907C003F029267EA42F>120
D<13F8D803FE1470D8070F14F8000EEB8001121C121800381403003015F0EA701F126001
3F130700E0010013E012C05BD8007E130F16C013FE5B151F000115805BA2153F00031500
5BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB0FE1EB00035DA200
0E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C485A381E07C06CB4C8
FCEA01FC25367EA429>I<D901E01360D90FF813E0496C13C090383FFE0190397FFF0380
90B5EA07009038F81FFF3901E003FE9038C0001C495B5DC85A4A5A4A5A4AC7FC140E5C5C
14F0495AEB038049C8FC130E5B4913035B495B484813064848130E48C75AD80FFC137C39
1FFF81F8381E0FFFD838075B486C5B00605CD8E00190C7FC38C0007C23267DA427>I<15
04151E151FA2ED0F8016C0ED07E0007FB612F0B712F8A26C15F0C8EA1FC0ED3F00157E5D
5D5D1560251271BB2A>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmr10 10 74
/Fu 74 123 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<001C131C007F137F39FF80FF80A26D13C0A3007F137F001C
131C00001300A40001130101801380A20003130301001300485B00061306000E130E485B
485B485B006013601A197DB92A>34 D<121C127FEAFF80A213C0A3127F121C1200A41201
1380A2120313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB
0700130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2
127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB
01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378
A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A2
5B131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD
20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>
43 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909
798817>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C4848
7FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15
006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F823
3A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A3
1C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E
123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D
140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303484814
00485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C0
3901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401
A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F
80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF00
6C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<15
38A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB030313
071306130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12
E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C90
38F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F8039
07E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300
485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7
FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F80
0790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3
127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA2
49148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C
6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E
003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5DC71201
4A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133F
A5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F8
48486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01
FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F0
7F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC
0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807
E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13
C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA2
48EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF6C6C13DF000313013901F003
9F3900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A
5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB7
2A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A3
17>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A41203
1300A25A1206A2120E5A121812385A1260093479A317>I<007FB812F8B912FCA3CCFCAE
B912FCA36C17F836167B9F41>61 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC06
3FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2
D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3
496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787
D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A24848
1503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A212
3F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D9
03FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B6
48B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB6
48B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4C
C8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A
6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2
707E707F8484486D497FB6011FEBFF80A339397DB841>75 D<B612E0A3000101C0C8FC6C
90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D
397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7
F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C
1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3
ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED01
8045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCF
F8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED
7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1F
F6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA21706
37397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED9
3F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2
001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17
F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A
5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390
C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0
EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF00
91B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F80001903880
07FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FF
C8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180
A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7D
B83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F484813
3F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F8
6CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC
007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15
C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D
7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770
A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>
I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80
171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F80
7E91381FFFF8020713E09138007F80373B7DB83E>I<B5D8FC07B5D8F001B5FCA3000790
2780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F
017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C
011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA2
03805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215
F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80
503B7EB855>87 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<3901800180000313033907000700000E130E485B001813180038133800301330007013
7000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80
390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1F
E0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4
147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C
13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C02627
7DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039
F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216
FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8
C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E0
01FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14
067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB
07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F8
01EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127F
A27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE
0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807
E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2
127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E0
90381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0F
F0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B
7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C0
3A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC
38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F
80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F14
07D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA
03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE
496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA5
6C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0
EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF
13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3
120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E14381478
14FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680
ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487E
B512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903B
F1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3
495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3F
FCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB5
00C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48
487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15
F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890
387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E
9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA316
7FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E0
7E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE01
90387E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7
FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E07
8F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7F
C09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3
A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D8
03F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77
F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFE
A33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E13
0CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214
FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48
017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EF
C00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360
A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E
0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E13
1C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114
CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E48
6C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48
EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F
1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A2147014
60A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C
>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F80
0060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A
0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>
I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmmi6 6 5
/Fv 5 115 df<EB0FC0EB7FF03801F07C3903C01E03D807801306380F000F121E003E14
8C1407481498A215B04814E0A215C015801278EC0FC0EC1FC26CEB73C3391E03E1C6390F
FF81FC3901FC007820177E9528>11 D<EC03E0EC3FC0A21403A2EC0780A4EC0F00A4EB1F
1EEBFF9E3801E0DE3803807E3807007C48133C121E123E003C5B127CA3485BA215401560
903801E0C012781303393807E180391C1CF300380FF87F3807E03C1B247EA220>100
D<EA01F0EA1FE0A21201A2EA03C0A4EA0780A4EA0F00A4121EA45AA45AA213401360EAF0
C0A3EAF1801271EA3F00121E0C247DA214>108 D<000F017E13FC3A1F81FF83FF3B31C3
83C707803A61EE03CC039026EC01F813C0D8C1F813F013F001E013E00003903903C00780
13C0A2EE0F003907800780A2EE1E041706270F000F00130C163C1718A2001E011EEB1C70
EE1FE0000C010CEB07802F177D9536>I<380F01F0381FC7F83831CE1CEA61F8EBF03C00
C1137C13E014383803C000A4485AA448C7FCA4121EA2120C16177D951D>114
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmmi9 9 15
/Fw 15 123 df<147F903803FFE090380FC0F890383F007C017C017E1360497F484815E0
484890381F80C0120748481481EEC1804848130F003F15C390C7140016C74815C6007E15
CE16DC16D816F8485D5E5E127CA3151F6C143F037713C06C903801E7E03A0F800783E13B
07C07E03E3803B01FFF801FF003A007F80007C2B227EA031>11 D<1530157815F8A215F0
1401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8A25C
1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A25B12
01A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A1260
1D4B7CB726>61 D<010FB500C090B5FCA39026003FE0C7EA1FE04B1500183E4B143818F0
027FEC01C04D5A92C7000EC7FC5F4A5C17E04A495A4C5A0101020EC8FC5E4A5B16F00103
13011503ECF80F4B7E0107133FEDF3FCECF1C39138F381FE90380FF7019138FC00FF5C5C
49486D7EA24A6D7EA2013F6E7EA24A6D7EA2137F707E91C7FC707E5B707E5B00014B7EB5
00FC013F13F85EA240337DB241>75 D<010FB512F0A39026003FE0C7FC5DA25DA2147FA2
92C8FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25C170C011F151C17185C
1738013F153017705C17E0137F160191C7EA03C0160749EC0F80161F49147F0001913803
FF00B8FCA25E2E337DB234>I<ED07FC92387FFFC0913901F807F091390FE001F891391F
80007E027EC77E4AEC1F80EB03F04948EC0FC04948EC07E0495A013F16F049C8FC01FE15
034916F81201485AA2485AA2120F5B001F16075B123FA34848ED0FF0A3EF1FE0A290C9FC
48EE3FC0A21880177F6C17005F5F4C5A4C5A6C7E4C5A001F4B5A6D4A5A000F4B5A6D027E
C7FC00075D6C6C495A6C6CEB07E0D800FEEB1F8090263F80FEC8FC90380FFFF801011380
35377DB43A>79 D<010FB67E17F817FE903A003FC001FF9338003FC0EF1FE04B130FEF07
F0147FA292C713F8A25CEF0FF05CA20101ED1FE018C04AEC3F8018000103157E4C5A4AEB
07F0EE3FC049B500FEC7FC16F89138F0007E82010F6E7E707E5C83131FA25CA2013F141F
A25CA2017F143F5F91C7FC180649160E180C49161C00011718B500FC011F133893380FE0
70040713E0C93803FFC09338007F0037357DB23A>82 D<03FF13180207EBE038021FEBF8
7891397F00FCF802FCEB1FF0D901F0130F4948130749481303494814E0A249C71201A201
3E15C0A3137E1780A2017F91C7FC8080EB3FF014FF15F06D13FE6D6D7E6D806D80010080
020F7F1400150F6F7E150315011500A2120CA2001C5D1218A2150100385D003C14035E4B
5A007E4A5A007F141F6D49C7FCD87BE0137C39F9FC03F839F07FFFE0D8E01F138026C003
FEC8FC2D377CB42F>I<ED01F815FFA216F01507A316E0A2150FA216C0A2151FA21680A2
153FA2D901F81300EB07FE90381F077F90387C03FF496C5AEA01F000031300485A495B12
0F381F8001A2D83F005BA214035A007E5CA2140712FE485C1640020F136016E0EDC0C012
7CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C300390F0787C73907FE03FE3900
F800F825357EB328>100 D<EB07E0EA03FFA25CEA001FA35CA3133F91C8FCA35B137EA3
13FE49131FED7FC0EC01E0000190380383E09038F8070F140E141C0003013813C0EBF070
9138E00700D9F1C0C7FC3807F78001EEC8FC13FC7F380FFFE0EBC7F8EBC1FEEBC07E001F
7F1380ED8080ED81C0003FEC01801300A21503481500007EEB3E071506EC1F0E00FE5C48
EB07F80038EB03E023357DB328>107 D<EB1F80EA07FF5A1400C67EA3137EA213FEA25B
A21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA212
7E1304EAFE0E130C12FCA2131C131812F81338EA7C701360EA3FE0EA0F8011357DB317>
I<D801E013FE3A07F803FF803A0E3E0F07E0001C90383C03F039181F7001003813E02630
3FC07F12700060138014001503D8E07F5CEA407E1200150701FE5C5B150F5E120149131F
EE8080EE81C00003023F13804914011603037F13000007147E495CED3E0E5E000FEC1E38
49EB0FF0D80380EB03C02A227EA02E>110 D<3903E003E0390FF81FF8391C7C3C1C0018
EB703E39383EE0FE38303FC0EB7F800070EB00FCEA607E157000E01400EAC0FEEA40FC12
00A212015BA312035BA312075BA3120F5BA3121F5B0007C8FC1F227EA023>114
D<90391F801F8090397FE07FE09039E0F0E0703A01C0F9C0F83903807D833807007F000E
1403000C15F0001C137E0018EC01C002FEC7FC00385B1210C7FC13015CA31303A25C1640
010714E016C0001C5B007E1401010F148000FE1403011FEB0700011B130E39F839F01C39
7070F878393FE07FE0390F801F8025227EA02C>120 D<13F0D803FCEB01C0D8071EEB03
E0D80E1F1307121C003813800030140F013F14C000701300126049131FD8E07E14801240
EA00FE49133F000115005BA25D0003147E5BA215FE5D5BA214015DEBF00314070001130F
3900F83FF0EB3FFBEB0FC3EB00075DA20007130FD81F805B003F495AA24AC7FCEB007E00
3E137C00385B381803F0381E07C0D807FFC8FCEA01F823317EA026>I<90380780039038
1FE00790383FF00690387FF80E9038FFFC1C48EBFE789038E03FF03803800190C712E0EC
01C0C7EA0380EC0700140E143C14705C495A495A49C7FC130E133C0170130C49131C4848
13184848133848C71278D80EC013F0380FFE03391F3FFFE0D8381F13C0486C1380D86007
130038E003FE38C000F020227DA024>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmbx10 10 48
/Fx 48 121 df<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF
8049485A5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390
C7FCB3ABB5D8FC3F13FFA4303A7EB935>12 D<141C143C14F8EB01F0EB03E01307EB0FC0
EB1F8014005B137E13FE5B12015B1203A2485AA2120F5B121FA25B123FA4485AA512FFB1
127FA56C7EA4121F7FA2120F7F1207A26C7EA212017F12007F137E7F7F1480EB0FC0EB07
E01303EB01F0EB00F8143C141C165377BD25>40 D<12E07E127C7E7E7F6C7E6C7E12037F
6C7E7F12007F137E137FA2EB3F80A214C0131F14E0A2130F14F0A4EB07F8A514FCB114F8
A5EB0FF0A414E0131FA214C0133F1480A2EB7F00A2137E13FE5B12015B485A5B1207485A
485A90C7FC123E5A12F05A16537BBD25>I<B61280A819087F9620>45
D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>I<141E143E
14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630>49
D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313C05AD9
C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16C04A13
8016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A013EC7
12F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>I<EB03FF011F
13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001FC14F0121F7F
A56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC092C7FC15F090
380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC0487E487E487EA4
16FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806CB61200000114
FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA2151F153F157F15FFA25C5C5C5C
A2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B485A485A1207485A90C7FC12
1E5A127C5AB81280A4C70001EBC000AA0103B61280A429377DB630>I<001C15C0D81F80
130701F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA8EB07FE90383FFF
E090B512F89038FC07FC9038E003FFD98001138090C713C0120EC813E0157F16F0A216F8
A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0007C15C06C5B6C491380D9
C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25387BB630>I<EA0F80
EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F80C7FCABEA0F80EA3FE0EA7FF0A2EAFF
F8A5EA7FF0A2EA3FE0EA0F800D2579A41B>58 D<ED03E04B7EA24B7EA34B7EA24B7EA34B
7EA292B57EA34A8015F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A80
023E131FA2027E80027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A
147FA2011F8291C8123F4982013E151FA2017E82017C8101FE83B500F80107B61280A441
3A7DB948>65 D<B812C017FC17FF18C028007FF000037F04007F717E717E171F84A2717E
A74D5AA260173F4D5A4D5A4C13C0040F5B91B600FCC7FCA2EFFF8002F0C713F0EF3FF871
7E717E717E19807113C0A319E0A719C0A25F4D138019005FEF7FFE4C485AB912F018C095
C7FC17F03B397DB844>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F010390
39FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F
4890C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F00
1F1707A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A
010701C0EB0FE06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A
3B7BB945>I<B912F0A426007FF8C7FCEF1FF8170717031701A21700A21878A3043C137C
183CA41800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2
183EA2183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F>69
D<B912C0A43A007FF800039338007FE0171F170F1707A21703A21701A318F0EE7800A418
00A216F8A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434397DB83C
>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB
1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A18
0F123F5B1807127FA24993C8FC12FFAB043FB61280A2127F7FDC0003EBC000123FA27F12
1FA26C7EA26C7F6C7F6C7F7ED97FF85C6D7E6DB45C010701C05B6D01FCEBFF3F010090B5
EAFE0F021FECF8030203ECE0009126003FFEC9FC413B7BB94B>I<B612FCA439007FF800
B3B3ADB612FCA41E397DB824>73 D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35F
A25FA25F5F5E5EEE0FFE167FB8FCA431397DB839>76 D<B500FC0203B512F0A28080C66C
6D90390003F0006F6E5A81017B7F13798101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E
7F6F7E153F826F13806F13C06F13E06F13F06F13F88117FCEE7FFEEE3FFF7013817013C1
7013E18218F17013F97013FDEF7FFF8383A28383838383187FA2183F181F01FC160FB500
FC150718031801A244397DB84B>78 D<EDFFF8020FEBFF80027F14F0903A01FFC01FFC01
0790380007FFD91FFC010113C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C8
6C7EA248486F1380A248486F13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D
5DA3003F18E0A26D5D001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C
4A5AD93FFC49485A6DB401075B0107D9C01F90C7FC010190B512FC6D6C14F0020F148002
0001F8C8FC3D3B7BB948>I<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0
EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7
120017FC17E002F8C9FCB3A4B612FCA438397DB841>I<B712FCEEFFE017FC17FF28007F
F8000F13C004017F707F717E717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8
FC91B612FC17E0839139F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F
1901DD3FFE13E0B600FC011F130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB8
48>82 D<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F48
48130F48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387F
FFE014FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC
007F030F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01
F813039039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>
I<003FB91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200
781703A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>I<B6D8E01FB500
FC90383FFFFCA4000101F0C7D83FFCC8EA7E006C71153C171F6E197C017F701578836E70
14F8013F6F5E6E1801011F4B6D5CA26E18036D4B6D5CA26D6D496D495A173C6F170F6D03
7C6D91C7FCEF787F6F5F6D4B6C6C131E816D02016E5BEFE01F03F8177C027F01036E1378
4D7E03FCEE80F8023F49486C5C15FE021F010FEDC1E04D7E03FF16C36E49EDE3C0041E7F
049E15F76E01BC6D5C04FC15FF6E95C8FC4C80A26E5F4C143F6E5F4C141FA2037F5E4C14
0FA26F486E5AA2031F5E93C812036F5E5E3A7EB863>87 D<EB3FFE0003B512E0000F14F8
391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC
137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713
F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA42E>97
D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF00013804AEB7FC002
80EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F06E133F6EEB7FE0
6E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9C00390C7FC2F3A
7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485AEA0FF812
1F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E15036C6C
EB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA42A>I<EE
7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003EB001FD807FC
1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C6C5B6C6C
4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>I<903803FF8001
1F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003FEC0F
F0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D14F0
00071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C>I<EC
1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A2481381A24813016E
1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D>I<161FD907FE
EBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F003F15CF4990
387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE07FE48B512F8
6D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C15F86C816C81
5A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C495AD81FF0EB
07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<13FFB5FCA41207
7EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A14C05CA25CA291
C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2487EA56C5AA26C5AEA
01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13FFB5FCA412077EAF92
380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07E04A5A141FEC7F
E04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E82150F82B5D8F83F13
F8A42D3A7EB932>107 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>I<01FED97F
E0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00
903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5
D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91381F
03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430
257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D
7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA2
6C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>
I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800003496C13C00280EB7F
E091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEB
FFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F
357EA435>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5C
A29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114
D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15787E
7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE
140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F81400
38E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7
FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>
I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90
387FFFFC011F13F00103138030257DA435>I<B539F001FFF8A4000390C7EA3F00161E6E
133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5C
ECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA22D
257EA432>I<B500F1B538803FFFA43D07FE000FF80003E06C6C010715C082028015076C
6E6C148015076C01C0ED0F00826E485C017FED801E5D90273FF01E7F5B17C0DAF83E147C
011F90393C3FE078037C14F8903B0FFC781FF0F0A29139FEF00FF10107EDF9E002FF14FB
6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E147C023C143C40257EA4
45>I<B539F01FFFF0A4000390398003F8006C01C013E06C1407D97FE05B6D6C485A6E48
C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA24A7E903801
F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E80496D7E49130F00016E7EB59038
3FFFF8A42D257EA432>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmtt9 9 18
/Fy 18 119 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A728927>46
D<EB01FE903807FF80011F13C0017F13E090B512F048EB03F83803FC013907F000FC390F
E01F7C9038C07FFE381F80FF1301485A393E07F1FF007E13E0397C0FC07FEC803FA2EAFC
1F00F8EB001FA800FCEB803FD87C0F133EA2ECC07E397E07E0FC003E13F1393F03FFF86C
6C13F0018013E0390FC07FC09038E01F1E3907F0003FD803FC137F3901FF03FF6CEBFFFE
6D13FC011F13F0010713C001011300202E7DAD27>64 D<3803FFC0000F13F04813FC4813
FF811380EC1FC0381F000F000480C71207A2EB0FFF137F0003B5FC120F5A383FFC07EA7F
C0130012FE5AA46C130F007F131FEBC0FF6CB612806C15C07E000313F1C69038807F8022
207C9F27>97 D<EA7FE0487EA3127F1203A914FF01F313C090B512F08181EC81FE49C67E
49EB3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF0090
38FF83FEECFFFC5D5D01F313C02601E0FEC7FC232E7FAD27>I<EB0FFF017F13C048B512
E04814F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA2
007F14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF8
1D207B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF83F381FE0
0F383FC007EB8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB800F381F
E01F380FF03F6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27>I<EB0FF8EB
3FFE90B51280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC48C7FC127E
157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE390FFC07FC
6CB5FC000114F86C14F0013F13C0903807FE001F207D9F27>I<153F90391FC0FF80D97F
F313C048B612E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7EA66C6C48
5AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015F848
14FE4880EB8001007EC7EA3F80007C140F00FC15C0481407A46C140F007C1580007F143F
6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027>103
D<EA7FE0487EA3127F1203A9147F9038F1FFC001F713F090B5FC8114C1EC01FCEBFE005B
5BA25BB03A7FFF83FFE0B500C713F0A36C018313E0242E7FAD27>I<130F497E497EA46D
5A6DC7FC90C8FCA7383FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7B
AE27>I<143C147E14FFA4147E143C1400A73801FFFE4813FFA37EC7123FB3B0147E1238
007C13FE38FE01FC1303B512F814F06C13E06C13803807FE0018407CAE27>I<EA7FE07F
12FF127FA21201A991383FFFC04A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A02FFC7
FCEBF1FEEBF3FCEBF7F8EBFFFC8080143F496C7E496C7E01F87FEBF0076E7E6E7E816E7E
157E3A7FFFC1FFF002C313F8B512E36C13C316F0252E80AD27>I<387FE07F39FFF1FFC0
01F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A3
6C018313E024207F9F27>110 D<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391F
C00FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303
393F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F
27>I<397FFC03FC39FFFE0FFF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F
809138E002004AC7FC5CA291C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>114
D<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC
383FFFF06C13FC000713FF00011480D8000F13C09038003FE014070078EB03F000FC1301
A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF01C207B9F27>I<397F
E01FF8486C487EA3007F131F00031300B21401A21403EBFC0F6CB612E016F07EEB3FFE90
390FF87FE024207F9F27>117 D<3A7FFC0FFF80486C4813C0A36C486C13803A07C000F8
00EBE00100035CA2EBF00300015CA2EBF80700005CA390387C0F80A36D48C7FCA3EB3F3F
EB1F3EA214FE6D5AA36D5AA26D5A22207E9F27>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fz cmr9 9 71
/Fz 71 124 df<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F000FC0017E13
1F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB1FE0267FFFC1
B5FCA328357FB42B>12 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600
011306A40003130EEB000CA248131C00061318000E1338000C1330001C13704813E03870
01C00060138017177EB326>34 D<123C127EB4FCA21380A2127F123D1201A412031300A2
5A1206120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B133C
5B5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C12
3EA3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300
124A79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C
133EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813
F85BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A400
7FB812C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>I<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<EB
0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A200
3E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007
C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5
FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC
380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3
007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A
49C7FC133E133C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0
A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07
F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00
EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA4
15FC48130312780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613
FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB
038F140F1307130E130C131C13381330137013E013C0EA0180120313001206120E120C5A
123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0
380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380F
C03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0
140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E0
38003F801D347CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8
EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F
9038700F809038E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4
127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806C
B51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C71238
00601430157015E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A13
03A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC
3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2
003F14F86D13F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F8
7EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C13
03481301EC007E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907
F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F39
07E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FE
A5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF09038
1FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00
001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>I<007FB812C0B912E0A2
6C17C0CCFCAC007FB812C0B912E0A26C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A
7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507
A249486C7EA301066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA349
6E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65
D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617E016
1F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0F
E017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF00B7
5A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A
0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A
173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C
7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0
131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01
FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0F
E0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014A
B45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150FEE03E01601
A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E151E150EA2
1506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812E0A32E337D
B234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760150CA31700
A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B337D
B232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0
EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F
5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F121FA26C
7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C01
00B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190C738
07FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>
I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA39038003F
E0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F03803FFC0
C690C7FC20357DB227>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E
5E5E5E16FE00031407B7FCA329337DB230>76 D<D8FFFC923801FFF86D5DA20003EFFE00
D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814C0
A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C
5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB246
>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2
EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2
ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216031601
A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFFC0903901
FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA248
486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C17
C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C
4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07FC
C8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1FC0
17E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FCB3
A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F
707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE00
1FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FEEB
1FE0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE9038
1FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E
495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190
C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D15
1C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA2
6D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E102
0F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B5
39800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D
020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95
C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C010117
18A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8
EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B
141C020115184C357FB24F>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E
006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13
065E91387F801C91383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8
FC5D1400B14A7E91B512FCA337337FB23A>89 D<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C
4B79B715>91 D<0003130C48131C000E133848137000181360003813E0003013C0EA7001
00601380A2EAE00300C01300A400DE137800FF13FCEB83FEA2EA7F81A2383F00FC001E13
78171774B326>I<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>I<EB7F803803FFF0380F
80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07
EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1
E1FF2607FFC013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80EC
FFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16
F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7
FC25357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA
1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14
706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3
EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A
127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3F
FCD90FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007
E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418
A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA1
22>I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FC
ACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039
FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C
5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F
380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F
007C15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA
03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA2
5BA25BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA
0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EA03F012FFA3
12071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8
EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500
C313F0A324347EB329>107 D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB3
15>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F028
07F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFF
F0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03
FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F
803901F007C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300
FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80
D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED8
07FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D
131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0
A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF4848
6CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0
073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C
38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512
E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200
FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F
6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A5
1370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A238
00FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F00
0380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA0
2B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5B
A26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA2
6D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E
0000030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F16
8090263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6
ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8A32603FE00
13806C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E6
14FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C
7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A3
3A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070
011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A2
1430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025
307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F800070137F150000
6013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A12035B48481370485A
001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<B712F8A22502809426>
I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FA cmsy8 8 3
/FA 3 123 df<130C131EA50060EB01800078130739FC0C0FC0007FEB3F80393F8C7F00
3807CCF83801FFE038007F80011EC7FCEB7F803801FFE03807CCF8383F8C7F397F0C3F80
00FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C9E23>3
D<1338137CA81338A7007C137CB512FEA3387C387C00001300A5137CB3A41338AD173D7C
AE20>121 D<1338137CA71338A40020130838FF39FE13FFA2133938003800A5137CA713
3890C7FC1338137CA71338A538FF39FE13FFA213393820380800001300A4137CA7133817
3D7CAE20>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FB cmcsc10 12 25
/FB 25 119 df<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B768A20>46
D<1638167CA316FEA34B7EA24B7FA34B7F167FA2030E7F163FA24B6C7EA2033C7FED380F
A203787FED7007A203E07F1603A24A486C7EA20203814B7EA202078192C7127FA2020E81
173FA24A6E7EA2023C810238140FA2027FB67EA302E0C7EA07FE17030101824A80A20103
834A80A249C97F187FA2010E707EA2011E83181F133E85137E48B483000701C0ED7FFFB5
00FC021FB512FEA347477CC651>65 D<DB03FF140C033F01F0131C4AB500FC133C91390F
FE007FDA1FF090380FC07CDA7F80903803E0FC4948C812F0D903FC15794948153FD91FF0
151F4948150F494815074A150349C9FC48481601120349160012074848177CA24848173C
A2123FA249171C127FA319005B12FFAC127F7FA2191CA2123F7FA2001F183C19386C7EA2
6C6C1778000318706D17F0000118E06C6C16016D6C16C06E15036D6CED07806D6CED0F00
D907F8151E6D6C5D6DB45D6D6C6C495ADA1FF0EB07C0DA0FFEEB7F800201B500FEC7FCDA
003F13F0030313803E4879C54E>67 D<B812E017FE717EC601F0C713E06D48EC1FF8013F
ED03FC71B4FC716C7E727E727E727E727E727E180185727EA2F17F80A21AC0193F1AE0A3
F11FF0A41AF8AD1AF0A4F13FE0A31AC0197F1A8019FF1A004E5AA24E5A4E5A61180FF03F
C04E5A4EC7FCEF03FE017FED0FF8496CECFFF0B912804DC8FC17E045447BC353>I<9226
03FF801306033F01F0130E4AB500FE131E02079038003F80DA1FF0903807C03EDA7FC090
3801F07E4948C812F8D903FCED3CFE4948151F4948150F4948150749481503495A49C912
01481700485A49177E12074848173EA2001F181E5BA2123F49170E127FA396C7FC5B12FF
AC007F047FB512FC7FA2DD001F1300F007FE003F17037F121FA27F120FA26C7E12037F6C
7E7E6D7E6D7E6D6C15076D7E6D6C150FD903FE151E6D6CED3C7E9026007FC0ECF83EDA1F
F8903803F01EDA07FF90381FC00E020190B5EA0006DA003F01FC90C7FC030313C0464879
C555>71 D<B600F891B512FCA3C601F8C8001F13C06D4892380FFE006D48ED07F819E04E
5A96C7FC181E6060604D5AEF07C04D5A4DC8FC173E5F5F4C5AEE03C04C5A4CC9FC161E5E
167CED01FC4B7E4B7E4B7F5D033E7F4B7FEDF07F9139E1E03FF0DAE3C07F9138E7801F91
39EF000FFC02FE6D7E4A804A7F4A6D7F4A8182717E717E84171F717E841707717E717F85
83727E85183F727E85727E85496C4B1380496C4B13E0B600F80103B6FCA348447BC354>
75 D<B500F094381FFFFEA26E5FC6F2FE00017F61D93BFCEF77F8A2D939FE17E7A3D938
FFEE01C7A26E6CED0387A36E6CED0707A26E6C150EA26E6C151CA36E6C1538A26E6C1570
A36E6C15E0A26E6CEC01C0A36F6CEB0380A26F6CEB0700A26F6C130EA36F6C5BA26F6C5B
A36F6C5BA26F6C5BA36F6C485AA293387F8380A2DC3FC7C7FCA3EE1FEEA2EE0FFCA3017C
6E5AA248B46E484A7E000701C04D7EB500FE041FB512FE705AA257447BC363>77
D<49B46C13C0010FEBF001013FEBFC039038FF007FD801F8EB0F874848EB03E7D807C0EB
01FF48487F001F157F90C8123F003E151FA2007E150F127C160712FC1603A37E16017EA2
7F6C6C91C7FC7F7FEA3FFCEBFFC06C13FC6CEBFFC015FC6CECFF806C15E0C615F86D8001
1F80010380D9003F1480020314C0EC003F030313E01500EE7FF0161FA2EE0FF8160712E0
1603A21601A37EA217F07E16037E17E06C15076C16C06DEC0F806D141F6DEC3F00D8F8F8
147E017F5C3AF01FE007F00107B55AD8E00191C7FC39C0001FFC2D4879C53D>83
D<003FBAFCA3903BF8000FFE000701C06D48130090C7163F007EF01F80007C180FA20078
1807A300701803A548F001C0A5C893C7FCB3B3A44B7E92383FFF8049B712F0A342437BC2
4E>I<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A6C7EA34A
6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA24981011CC7
121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7ED81FF84A
7EB5027F13F8A335357CB43D>97 D<B77E16F016FC3A03FC0003FF6C4801001380EE3FC0
17E0161FEE0FF0A217F8A21607A2160FA217F0161F17E0EE3FC0EE7F80EEFF00ED03FE90
B612F0A29039F80007FE9238007F80EE1FC0EE0FF0EE07F817FC160317FE160117FFA617
FE1603A2EE07FCEE0FF8EE1FF0EE3FE0486C903801FFC0B8120016FC16E030337BB23A>
I<4AB4EB0180021FEBF00391B5EAFC0701039038007E0FD907F8EB0F9FD91FE0EB03DF49
48EB01FF01FFC8FC4848157F4848153FA24848151F4848150F121F491507123F5BA2007F
1603A3484892C7FCAB6C7EEF0380A2123FA27F001F16076D1600000F5E6C6C150E6C6C15
1E171C6C6C153C6C6C5DD93FC05C6D6CEB03E0D907F8495A902703FF807FC7FC0100EBFF
FC021F13F00201138031357BB33B>I<B7FC16F016FC3A03FE0003FF6C489038007F80EE
1FE0707E707E707E1601707E177FA21880173F18C0A2EF1FE0A418F0AA18E0A4EF3FC0A2
1880177F180017FE16015F4C5AEE0FF04C5AEE7FC0486CD903FFC7FCB712FC16F093C8FC
34337BB23E>I<B812F0A3D803FEC7123F6C48EC07F816011600A21778A21738A3171C15
07A31700A25DA25D157F90B6FCA39038FC007F151F81A2811707A3170E92C7FCA4171EA2
173CA2177C17FC16011607486C143FB812F8A330337BB238>I<B5D8F803B512E0A3D803
FEC7380FF8006C486E5AB390B7FCA301FCC71207B3A3486C4A7EB5D8F803B512E0A33333
7BB23D>104 D<B512F8A33803FE006C5AB3B3A7487EB512F8A315337BB21E>I<B512FEA3
000390C9FCEA01FCB3A9EE01C0A416031780A41607A2160F161FA2167FEEFF00486C1307
B8FCA32A337BB233>108 D<D8FFFC91383FFFE07FA2D801FF020713006EEB01FC6E6D5A
1770EBDFE0EBCFF013C780EBC3FC13C180EBC0FF80816E7E6E7EA26E7E6E7E1403816E7E
140081ED7F80ED3FC0A2ED1FE0ED0FF0150716F8ED03FC150116FEED00FF167F17F0163F
161FA2160F1607486C1403487ED81FFC1401B56C1300A2177033337BB23D>110
D<EC07FF023F13E0903901FE03FC903907F0007FD90FC0EB1F80D93F80EB0FE049C76C7E
01FE6E7E48486E7E48486E7E4848157FA24848ED3F80001F17C0A24848ED1FE0A3007F17
F049150FA300FF17F8AA007F17F06D151FA2003F17E0A26D153F001F17C0A26C6CED7F80
000717006D5D00035E6C6C4A5A6C6C4A5A017F4A5A6D6C495AD90FC0EB1F80D907F0017F
C7FC903901FE03FC9039003FFFE0020790C8FC35357BB33F>I<B7FC16F016FC3A03FE00
03FF6C489038007F80EE3FC0EE1FE0EE0FF0A2EE07F8A217FCA617F8A2EE0FF0A2EE1FE0
EE3FC0EEFF00ED03FE90B612F816C001FCC9FCB3A2487EB512F8A32E337BB238>I<B612
F8EDFF8016E03A03FE000FF86C48EB03FEED00FF707E707E83161FA283A55FA24C5A5F4C
C7FC16FEED03FCED1FF090B6128003FCC8FC9038FC003FED0FC06F7E6F7E6F7E82150082
A382A383A4EFC01CA2167FEFE03C486C023F1338B500F890381FF07893380FF8F0933803
FFE0CAEA7F8036347BB23C>114 D<90390FF0018090387FFE0348B512873907F00FEF39
0FC001FF48C7FC003E143F151F5A150F5A1507A36C1403A27E6C91C7FC6C7E7FEA3FF8EB
FF806C13FC6CEBFFC06C14F06C80C614FE011F7F01031480D9001F13C014019138003FE0
151F150FED07F0150312E01501A37EA216E06C1403A26CEC07C06CEC0F806C6CEB1F0001
E0133ED8FBFE13FC00F0B55AD8E01F13E0D8C00390C7FC24357BB32E>I<007FB812C0A3
903A8007FC003F277E0003F8130F007C16070078160300701601A200F017E0A2481600A6
C71600B3AA4A7E4A7E010FB512FEA333327CB13B>I<B500F890383FFFE0A3D803FEC700
0713006C48EC01FC705A1770B3AE000016F06D5DA2017E1401017F4A5A7F6D6C495A6E49
C7FC6D6C131ED903F0137C903901FE03F89039007FFFE0021F1380DA03FCC8FC33347BB2
3D>I<B500E0ECFFFEA3000790C8EA3FF0D803FCED1FC00001EE0F806D16001200170E6D
151E6D151CA26D6C5CA26E1478011F157080010F5DA26E130101075D6E130301035DA26D
6C49C7FCA26E5B0100140EA2027F5BA2ED803C023F133815C0021F5BA2EDE0F0020F5B15
F102075BA2913803FB80A215FF6E90C8FCA26E5AA3157CA2153837347DB23D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FC cmmi12 20.74 1
/FC 1 108 df<16FE0207B5FC49B6FC495CA4D900015BEC003FA35EA2157FA25EA315FF
5EA35C5EA35C5EA35C93CBFCA35C5DA3141F5DA3143F5DF10FF8F17FFE027F4BB5FC4B4A
148095390FF80FC095391FC003E002FF92387F001F4B02FCEB7FF04D4813FF943803E001
49ED07C04B49485AEF1F00173E494B15E04B5B4C4815C04C481580494A486D13004B4848
EB007C4CCAFC163E495C4A5B4B5A4B5A011F495A4A485A033FCBFC157E90383FFDFCECFF
F05D15FC49EBFFC016FC16FFDAF07F13C001FF010F13F0DAE0017F6F6C7E707E48ED0FFF
4A6D7F828448815C848248F1078091C8FCA24C150F484D14005BA262001F191E494A5B1A
3E1A3C123F496E157C1A781AF8007F61491701705D190300FF047F495A4970485A053F49
C7FC94381FF07E496FB45A496F5B6CC900015B003E9338007FC04C7A77F758>107
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FD cmr17 20.74 26
/FD 26 119 df<B812C0A72A077FA834>45 D<EA0780EA1FE0EA3FF0EA7FF8EAFFFCA6EA
7FF8EA3FF0EA1FE0EA0780C7FCB3B3AAEA0780EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA
3FF0EA1FE0EA07800E4A72C92B>58 D<F007804E7EA34E7EA34E7EA34E7EA34E7EA24D7F
A34D7F18DF18CF0507801887A2050F801803A2051F80EF1E01A2053E80EF3C00A24D8019
7FA24D80193F0401815F191F0403815F850407824D7FA2040F8294C77EA24C82041E80A2
043E82043C80A24C821A7FA24C821A3F0301835E1A1F0303835E860307844C81A2030F84
93C97EA24B84031E82A2033FB97EA34B84A20378CA127F4B841B3F0201855D1B1F020385
5D870207864B83A2020F8692CB7EA24A86021E84A2023E86023C84A24A861C7FA24A861C
3F010187A201031A1F891307010F86496C4F7F496C87D9FFFE4F7F00076D6C4DB512F8B6
00F8057FECFFFCA56E7A7CF977>65 D<BA12FCF1FFE01AFCF2FF801BE0D8003F01E0C800
0F13F801074903007F4BEE3FFF6D060F7F747F08017F747F757E757E757E8887751380A2
1DC0871DE087A31DF0A387A363A31DE0A2631DC0A2631D80511300A2515A515A515A515A
505B505B505B081F90C7FCF23FFCF2FFF0070713C0077F90C8FC92B812F8621AFF0380C8
000313E09638003FF8F20FFE973803FF807413E0746C7E757E757E757E757E7513801DC0
7513E0A27513F0F47FF8A21DFC1C3FA21DFE1C1FA21DFFAA1DFEA21C3FA21DFC1C7FA2F4
FFF8A25113F0631DE05113C051138063511300F3FFFE505B08075B49061F13E06F047F5B
013F6D0307B5C7FCBC5A1BF01BC050C8FC1AC0607678F571>I<DE7FFCED01C0050FB512
C094B600F81403040315FE041F6F6C1307047FD9F00013E04B4848C7D80FF0130F030701
F0EC03FC4B0180DA00FE131FDB3FFEC9123FDB7FF893381F803F4A4848EE07E04A01C093
3803F07F4A4916014A90CBEAF8FFDA1FFC187C4A48183F4A48844A5A4986494984494984
92CCFC494885131F4A85495A017F1B7F5C01FF1B3F5C5A4A1A1F5AA248491A0FA25A91CE
1207A25A5BA2003F1C03A25BA2127F9AC7FCA45B12FFB2127F7FA5123FF501C07FA2121F
A27F7E1D036E1B807EA26C7F1D076C1D00806C6480017F1B0E6E1A1E013F1B1C6D6C1A3C
6E1A38010F1B786D6C1A706F19F06D6D4E5A6D7F6D505A6E6C4E5A6E6C180FDA1FFE4EC7
FC6E6C183E6E6D5F6E6D5F6E01F04C5A6E6C6CEE07E0DB3FFE4C5A92260FFF80ED3F806F
01F003FEC8FC030101FEEC07FC9227007FFFF0EBFFF0041F90B612C0040393C9FC040015
FC050F14E09426007FFCCAFC627C78F873>I<943801FFF0053FEBFF804CB612F0040F90
38001FFEDC3FF0903801FF80DCFF809038003FE0DB03FEC8EA0FF8DB0FF8ED03FEDB1FE0
ED00FFDB7FC0EE7FC04B48707E4A48CAEA0FF0DA07FCEF07FC4A48717E4A48717E4A4871
7F4A48727E02FF864949727E92CC121F4948737E0107874948737E4A1903011F87494873
7FA24948737FA24948747E4889A24849747EA34890CE6C7EA24889491B0FA2001F89A348
48751380A5007F1EC0A24987A400FF1EE0B16C6C5113C0A6003F1E806D63A3001F1E00A2
6D636C65A36C6D505AA36C6D505AA26C6D505AA26C656E61017F646D6C4F5BA26D6C4F90
C7FCA26D6C4F5A6D6C4F5A6D636F183F6D6D4E5A6D636E6C4E5A6E6C4D5B6E6C4D90C8FC
6E6C4D5A6E6C4D5A6E6C4D5A02006DEE3FE0DB7FE0EEFFC06F6C4B5BDB0FFCDB07FEC9FC
DB03FEED0FF8922601FFC0EC7FF09226003FF0903801FF80DC0FFFD91FFECAFC040390B5
12F8DC003F1480050101F0CBFC6B7C78F87C>79 D<B912FCF0FFF019FEF1FFC01AF8D800
3F01F0C7000713FE0107499139003FFF804B03077F6D050113F0736C7E747EF20FFF747F
747F86747F88757EA2757EA2757EA288A28789A99AC8FCA263A264A2515A641B7F64515A
64505B5090C9FC505A505AF23FF8F27FE0963801FF80DF0FFECAFCF17FF895380FFFE092
B8CBFC19F019FC03C0C7380FFF80060113E09538003FF8F11FFEF107FF737F7313E0737F
747E1A3F87747E1A0F878688A3747FAB88AC1F101F38747FA47416787614701B7F496D1B
F0756C14E0013F01FC051F1401B8707E0907EC03C0756CEB0780759038800F009839007F
E03ECF381FFFFC0A075B9938007FC06D7978F575>82 D<001FBE12F8A502F8C7000F01F0
C7121F4801806E49020113FC01FCC86C49EC003F491B1F01E01B07491B03491B0190C918
00A2003E1D7CA2003C1D3CA3481D1EA500701D0EA8481D07A6CA1900B3B3B3B14D7F4D7F
057F13FE031FB812F8A568757BF473>84 D<913803FF80021F13F891B512FE903A03FC01
FF80903A07E0003FE0D91F80EB0FF8013EC76C7E496E7E01F06E7E48486E7F717E484815
3F4982D807A06F7E13FC487E6D6F7E80A2717EA46C90C8FC6C5A6C5ACAFCA6EE07FF0303
B5FC157F913903FFFE07021F138091387FF800903801FFC0010790C7FCEB1FFCEB3FF0EB
FFE0485B485B4890C8FC5B485A485AA2485A1A0E485AA312FF5B170FA4171FA26D153F00
7F163B177B6DDBF1FE131C003F16E16C6C14016C6C912603C0FF13386C6CEC0F806C6C6C
903A1F007F80706C6D017CECE1E028007FF803F8EB3FFF011FB500E06D1380010391C700
0713009026003FF8EC01FC474D79CB4F>97 D<14F8EA03FFB5FCA5C6FC133F131FA2130F
B3B04CB47E041F13F8047F13FE923A01FC01FF80923A07E0003FE0031FC7EA0FF0033EEC
07FC0378EC01FE4B6E7EDAF9E06F7EDAFBC06F7EDAFF808292C96C7E737E5C4A707E864A
160386851B80A37313C0A31BE0A31A7FA21BF0AE1BE0A21AFFA31BC0A2611B80A21B0061
626E1607626E160F626E4C5A02F75FDAE7804B5ADAE3C0157FDAC1E04B5ADAC0F04A48C7
FC03784A5A4A6CEC0FF8031F4A5A4A6C6CEB7FC0922703F803FFC8FC0300B512FC010E02
3F13E090C8D807FEC9FC4C797BF758>I<ED07FE92387FFFE00203B512FC91390FFC01FF
913A3FE0001FC0DA7F80EB03E0D901FEC812F84948157C494881494881494881013FEE07
80494815034948ED0BC048177F91C9EAFFE048485D00075EA2485AA2485AA27113C0003F
70138049EE7F0095C7FC127FA35BA212FFAE127F7FA4123F7FA2121F6D1738120F19786C
6C1770A26C6C17F019E06C6D15016C18C06D6C15036D6CED07806EED0F006D6C151E6D6C
153ED903FE5D6D6C15F06D01C0EB03E0DA3FF0EB0FC0DA0FFE01FFC7FC0203B512FCDA00
7F13E0030790C8FC3D4D7BCB46>I<191FF07FFF051FB5FCA5EF001F180784A284B3B0ED
07FE92387FFFC00203B512F091390FFC01FC91393FE0001FDAFF80EB07814990C7EA03E1
D903FCEC01F14948EC0079D91FF0153D4948151D4A151F49488101FF824890C9FC48835B
0007835B120F5B121FA2123F5BA2127FA35BA212FFAE127FA27FA3123FA36C7EA36C7EA2
00075F7F00035F6C7E606C6D5D6D6C153D013F16396D6C03797F6D6C15F16D6CDA03E17F
D903FEDA078113F0D900FFDA1F01EBFFF0DA7FC0137E91391FF803F80207B512E0020114
809127001FF800EC80004C797AF758>I<ED1FFC4AB512C0020714F091391FF00FFC9139
7F8001FFD901FEC7EA7FC049486E7E49486E7E49486E7E49486E7E49486E7E4948140101
FF824890C91380A24848EE7FC0A2485A000FEF3FE05BA2001F18F0181F485AA3007F18F8
A349160FA212FF90B9FCA301E0CBFCAB127F7FA3123FA36C7EA219386C7E197800071870
7F000318F06C6C17E018016C6DED03C06D6C1680013F16076D6CED0F006D6C151E6D6C5D
6D6C5D6DB44A5A6D6C6C495ADA3FE0EB1F80DA0FFE01FEC7FC0203B512F8DA007F13E0DB
07FEC8FC3D4D7BCB46>I<EE7FC0923803FFF8030F7F92383FC07F9239FF000F804A48EB
3FC04A48137F4A48EBFFE04A485AEC1FE0143F15C0147F158002FF6D13C0EF7F804990C7
EA0C0094C7FCA3495AB3A9B812C0A5260003FEC9FCB3B3B3A7805B011F13E0001FB612F8
A533797DF82F>I<F103F8F13FFEDB1FF891B5FC92B5903903FC078002079139E007E01F
913D1FF00FF81F803FC0913B3FC003FC3E0002FFC7B45A49486E5A49486E5A49486E48EB
1F8049486E6CEB060097C7FC49486E7E013F82A249486E7EA201FF82A24A80A24884AA6C
95C8FCA26E5CA2017F5EA26D6C4A5AA2011F5E6D6C4A5AA26D6C4A5A6D6C4A5A496C4A5A
6E4AC9FC903A0F3FC003FC903A1E1FF00FF80207B512E0D91C0091CAFC013CEB1FF892CC
FCA25BA3137CA4137EA27F8080EB1FF091B612FE6DEDFFF818FF6D17E06D17F8010017FE
010383010F84D93FE0C7000114E001FFC9120FD801FC04017F48489338003FF84848171F
4848717E48481707003F727E49170148CBFC737EA200FE85A76C616C616D1701003F616D
17036C6C4D5A6C6C4D5A6C6C4D5A6C6C4D5A6C6C4D5A26007F80DB01FEC7FCD93FE0ED07
FCD90FF8ED1FF0D903FFEDFFC0010001F8011F90C8FC021FB612F802011580DA000F01F0
C9FC4A707DCC4F>I<14F8EA03FFB5FCA5C6FC133F131FA2130FB3B0933803FF80041F13
F8047F13FE923A01FC03FF80923A03E0007FE0DB0F80EB1FF0031EC76C7E5D4B6E7E4B6E
7E5D14F9DAFBC06E7E5D14FF92C9FC865CA35CA45CB3B3A8496C4B7FD97FFF030713F0B7
D8800FB612F8A54D787AF758>I<131EEB7F80497E487F487FA66C5B6C5B6D5A011EC7FC
90C8FCB3A7EB01F0EA07FFB5FCA51201EA007F133FA2131FB3B3B3A3497EEBFFFEB612FC
A51E727AF12A>I<EB01F0EA07FFB5FCA51201EA007F133FA2131FB3B3B3B3B3AC497EEB
FFFEB612FEA51F787AF72A>108 D<D901F0902601FFC0ED0FFED807FF021F01FC92B512
E0B5027F01FF020314F8922601FC0101C090390FE00FFE922803E0003FE090391F0001FF
DB0F80D91FF8017C6D13C04BC7000F4A147FC6023C912707FC01E06E7E013F496E6C4848
6E7E011F0170DA01FF496E7E03F0160790260FF1E04CC8FCDAF3C06E019E6F7E4B169C02
F717BC92C913B802FFDC7FF86F7E4A5FA34A5FA44A5FB3B3A8496C4C6C4B7ED97FFF0303
01F8031F13C0B7D88007B600FC013FB612E0A57B4B7ACA86>I<D901F0903803FF80D807
FF021F13F8B5027F13FE923A01FC03FF80923A03E0007FE0DB0F80EB1FF0031EC76C7EC6
5C013F496E7E011F496E7E5DEB0FF1DAF3C06E7E5D14F792C9FC02FF835CA35CA45CB3B3
A8496C4B7FD97FFF030713F0B7D8800FB612F8A54D4B7ACA58>I<ED07FE92387FFFE002
03B512FC91390FFC03FF913A3FC0003FC04AC7EA0FE0D901FEEC07F8D903F8EC01FC4948
6E7E4948157F49486F7E49486F7E017F8349C96C7E4916070001844848707EA200078449
1601000F84A24848701380A2003F19C0A349177F007F19E0A412FF1AF0AD007F19E0A26D
17FFA2003F19C0A46C6C4C1380A2000F1900A26C6C4C5AA26C6C4C5A0001606D160F6C60
6D6C4B5A6D6C4B5AA26D6C4B5AD907F003FEC7FCD903FCEC03FC6D6C4A5A6D6C6CEB1FF0
DA3FE0EB7FC091270FFC03FFC8FC0203B512FCDA007F13E0DB07FEC9FC444D7BCB4F>I<
02F849B47ED803FF021F13F8B5027F13FE923A01FC01FF80923A07E0003FE0031FC76C7E
033EEC0FFCC60278EC03FE013F496E7E90261FF9E06E7FDAFBC0826DB4486F7E92C96C7E
737E5C4A707E864A160786851B80A2851BC0A2851BE0A5F27FF0AEF2FFE0A54F13C0A34F
1380A21B0061626E160F626E161F626E4C5A4F5A6F5EDAFBC015FFDAF9E04A5BDAF8F04A
48C7FC03784A5A6F4A5A031FEC3FF06F6CEBFFC0922603F80790C8FC0300B512FC043F13
E0DC07FEC9FC93CBFCB3A7497EEB7FFFB77EA54C6C7BCA58>I<D903E0EB1FE0D80FFFEC
FFFCB501037F923907E01F8092391F807FC092383E00FF4B4813E000011478D8007F13F0
90383FE1E015C0EB1FE39126E7800013C0EF7F8092C7EA3F0002EF91C7FC14EE14FE5CA4
5CA55CB3B3A480133F90B5FCB712C0A5334B7ACA3D>114 D<DA1FFFEB038049B512E001
0FECF807903A3FE001FE0F01FEC7EA1F9FD801F8EC07DFD807E0EC03FF484880498048C9
127F48163F003E161F127E170F127C12FC1707A46C1603A27E7F6C7E7F6D92C7FCEA3FFC
13FF6C13E06C13FF6C14F06CECFF806C15F86C15FE013F6E7E010F15E001038101008102
0F14FEDA007F7F1503DB003F1380040713C0040113E000E081177FEF3FF06C161F170FEF
07F8A217037E1701A27EA37E18F07E17036D16E0A26D15076DED0FC06D168000FE161F01
7CED3F00486C157E6DEC01F826F80FC0EB07F026F003F8EB7FC00100B6C7FC48013F13FC
02071380354D7CCB3E>I<1407A85CA65CA35CA35CA25CA25BA25B5B5B5B5B5B48B712FE
120FB8FCA3D8000190C9FCB3B3A2EF01C0B0EF03806D7FA3027FEC0700815F6E6C130E02
1F141E6F131C6E6C5B6E6C13F8913901FF01F09139007FFFC0031F5BDB03FCC7FC326B7E
E93D>I<B600F84AB512FCA5000191C9003F13C026007FFC040F13006D4817FC011F715A
62010F715A6E5F13074F5A6D7E97C7FC6E5E6D170EA26F151E6D171C81027F5EA26F1578
023F167081021F5EA26F1401020F5E8102074B5AA26F1407020393C8FC816E150EA27013
1E6E151C82037F5CA2701378033F147082031F5CA2EEF801030F5CA26F6C485AA2EEFE07
030391C9FCA2705A6F130E178E6F139CA217FC705AA2705AA3705AA2705AA3705AA24E4B
7EC953>118 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 903 814 a FD(Balanced)52 b(Asp)t(ect)h(Ratio)g(T)-13
b(rees:)113 1021 y(Com)l(bining)52 b(the)g(Adv)-9 b(an)l(tages)52
b(of)h FC(k)6 b FD(-d)51 b(T)-13 b(rees)51 b(and)h(Octrees)66
1262 y FB(Christian)38 b(A.)g(Duncan)1127 1226 y FA(\003)39
1378 y Fz(Cen)n(ter)26 b(for)g(Geometric)g(Computing)86
1494 y(The)g(Johns)g(Hopkins)f(Univ)n(ersit)n(y)322 1611
y Fy(duncan@jhu.edu)1383 1262 y FB(Michael)37 b(T.)h(Goodrich)2468
1226 y FA(y)1369 1378 y Fz(Cen)n(ter)26 b(for)g(Geometric)g(Computing)
1416 1494 y(The)g(Johns)g(Hopkins)f(Univ)n(ersit)n(y)1612
1611 y Fy(goodrich@jhu.edu)2779 1262 y FB(Stephen)37
b(K)m(obour)n(o)n(v)3732 1226 y FA(z)2699 1378 y Fz(Cen)n(ter)25
b(for)i(Geometric)f(Computing)2746 1494 y(The)g(Johns)g(Hopkins)f(Univ)
n(ersit)n(y)2883 1611 y Fy(kobourov@cs.jhu.edu)-116 1936
y Fx(Abstract)-116 2061 y Fz(Giv)n(en)40 b(a)g(set)h
Fw(S)j Fz(of)d Fw(n)g Fz(p)r(oin)n(ts)f(in)g(I)-15 b(R)1033
2029 y Fv(d)1069 2061 y Fz(,)44 b(w)n(e)c(sho)n(w,)45
b(for)c(\014xed)e Fw(d)p Fz(,)-116 2160 y(ho)n(w)24 b(to)h(construct)f
(in)g Fw(O)r Fz(\()p Fw(n)13 b Fz(log)i Fw(n)p Fz(\))25
b(time)e(a)i(data)f(structure)g(w)n(e)g(call)-116 2260
y(the)32 b(Balanced)i(Asp)r(ect)f(Ratio)g(\(BAR\))f(tree.)56
b(A)33 b(BAR)f(tree)h(is)g(a)-116 2359 y(binary)j(space)h(partition)g
(tree)f(on)h Fw(S)k Fz(that)36 b(has)h Fw(O)r Fz(\(log)15
b Fw(n)p Fz(\))37 b(depth)-116 2459 y(and)28 b(in)g(whic)n(h)g(ev)n
(ery)g(region)h(is)g(con)n(v)n(ex)f(and)g(\\fat")h(\(that)f(is,)i(has)
-116 2559 y(a)h(b)r(ounded)g(asp)r(ect)h(ratio\).)52
b(While)32 b(previous)f(hierarc)n(hical)i(data)-116 2658
y(structures,)38 b(suc)n(h)d(as)g Fw(k)r Fz(-d)g(trees,)j(quadtrees,)g
(o)r(ctrees,)h(fair-split)-116 2758 y(trees,)24 b(and)f(balanced)g(b)r
(o)n(x)g(decomp)r(ositions)h(can)f(guaran)n(tee)h(some)-116
2858 y(of)31 b(these)f(prop)r(erties,)i(w)n(e)f(kno)n(w)f(of)h(no)f
(previous)g(data)h(structure)-116 2957 y(that)i(com)n(bines)h(all)h(of)
f(these)g(prop)r(erties)h(sim)n(ultaneously)-6 b(.)58
b(The)-116 3057 y(BAR)23 b(tree)g(data)h(structure)f(has)h(n)n(umerous)
e(applications)j(ranging)-116 3156 y(from)32 b(solving)g(sev)n(eral)h
(geometric)f(searc)n(hing)h(problems)f(in)g(\014xed)-116
3256 y(dimensional)i(space)h(to)g(aiding)g(in)g(the)f(visualization)i
(of)f(graphs)-116 3356 y(and)25 b(three-dimensional)g(w)n(orlds.)-116
3555 y Fx(1)95 b(In)m(tro)s(duction)-116 3680 y Fu(Geometric)41
b(searc)n(hing)f(of)i(m)n(ulti-dimensional)f(spaces)g(is)h(a)-116
3779 y(fundamen)n(tal)48 b(op)r(eration)f(in)i(man)n(y)f(\014elds,)53
b(including)c(as-)-116 3879 y(tronom)n(y)-7 b(,)37 b(geographic)e
(information)h(systems)g(\(GIS\),)h(com-)-116 3978 y(puter)f(graphics,)
h(information)f(retriev)-5 b(al,)37 b(pattern)f(recogni-)-116
4078 y(tion,)c(natural)e(language)g(pro)r(cessing,)h(and)g(statistics.)
47 b(T)n(yp-)-116 4178 y(ical)19 b(searc)n(hes)e(include)j
(nearest-neigh)n(b)r(or)d(searc)n(hes,)i(farthest-)-116
4277 y(neigh)n(b)r(or)32 b(searc)n(hes,)h(and)h(range)e(queries)g
(\(whic)n(h)i(are)e(in)n(ter-)-116 4377 y(section)c(queries)h(for)f
(geometric)g(shap)r(es\).)41 b(In)29 b(this)g(pap)r(er)g(w)n(e)-116
4477 y(study)22 b(e\016cien)n(t)g(data)g(structures)f(for)h(p)r
(erforming)f(suc)n(h)h(quer-)-116 4576 y(ies)37 b(in)g(mo)r
(derate-dimensional)f(spaces,)i(that)g(is,)h(in)f(spaces)-116
4676 y(where)25 b(the)h(dimensionalit)n(y)-7 b(,)26 b
Ft(d)p Fu(,)g(of)g(the)g(space)f(can)h(b)r(e)g(view)n(ed)-116
4775 y(as)41 b(a)g(constan)n(t)g(compared)f(to)h(the)h(n)n(um)n(b)r
(er,)j Ft(n)p Fu(,)g(of)d(m)n(ulti-)-116 4875 y(dimensional)27
b(p)r(oin)n(ts)g(in)h(that)g(space)1062 4845 y Fs(1)1099
4875 y Fu(.)p -116 5128 250 4 v -25 5152 a Fr(\003)11
5175 y Fq(This)49 b(researc)n(h)h(partially)f(supp)r(orted)i(b)n(y)f
(AR)n(O)f(under)h(gran)n(t)-116 5258 y(D)n(AAH04-96-1-0013.)-22
5318 y Fr(y)11 5341 y Fq(This)20 b(researc)n(h)i(partially)f(supp)r
(orted)h(b)n(y)g(NSF)f(under)g(Gran)n(t)h(CCR-)-116 5424
y(9625289,)j(and)f(AR)n(O)f(under)h(gran)n(t)h(D)n(AAH04-96-1-0013.)-22
5483 y Fr(z)11 5507 y Fq(This)49 b(researc)n(h)h(partially)f(supp)r
(orted)i(b)n(y)f(AR)n(O)f(under)h(gran)n(t)-116 5590
y(D)n(AAH04-96-1-0013.)-24 5647 y Fp(1)11 5670 y Fq(W)-6
b(e)32 b(will)d(view)i Fo(d)g Fq(as)g(a)g(constan)n(t)i(relativ)n(e)e
(to)h Fo(n)f Fq(throughout)i(this)-116 5753 y(pap)r(er.)1968
1936 y Fx(1.1)94 b(Previous)47 b(W)-8 b(ork.)41 b Fu(Data)g(structures)
f(for)g(p)r(erform-)1968 2036 y(ing)23 b(m)n(ulti-dimensional)h
(geometric)e(searc)n(hing)g(in)j(mo)r(derate-)1968 2135
y(dimensional)g(spaces)g(is)h(a)g(w)n(ell-studied)g(problem)g(in)g
(compu-)1968 2235 y(tational)18 b(geometry)f(and)i(spatial)f
(databases.)33 b(Man)n(y)18 b(previous)1968 2335 y(data)32
b(structures)g(for)g(p)r(erforming)g(geometric)f(searc)n(hing)g(for)
1968 2434 y(a)d(m)n(ulti-dimensional)h(p)r(oin)n(t)h(set)f
Ft(S)34 b Fu(are)28 b(instances)h(of)g(a)g(gen-)1968
2534 y(eral)d(class)g(of)h(structures)f(kno)n(wn)g(as)g(binary)h(space)
f(partition)1968 2633 y(\(BSP\))21 b(trees)g([16)o(])h(\(see)f(also)f
([27)o(]\).)36 b(Eac)n(h)20 b(no)r(de)h(in)h(a)f(BSP)g(tree)1968
2733 y Ft(T)32 b Fu(represen)n(ts)20 b(b)r(oth)h(a)g(con)n(v)n(ex)f
(region)g(in)h(space)g(and)g(all)g(of)g(the)1968 2833
y(p)r(oin)n(ts)32 b(of)g Ft(S)38 b Fu(lying)32 b(inside)g(this)h
(region.)50 b(Eac)n(h)31 b(leaf)i(no)r(de)f(in)1968 2932
y Ft(T)37 b Fu(represen)n(ts)26 b(a)g(region)f(with)i(a)g(constan)n(t)f
(n)n(um)n(b)r(er)g(of)h(p)r(oin)n(ts)1968 3032 y(of)g
Ft(S)33 b Fu(inside)27 b(it.)37 b(Ev)n(ery)26 b(other)h(no)r(de)h(in)g
Ft(T)39 b Fu(has)27 b(an)g(asso)r(ciated)1968 3132 y(h)n(yp)r(erplane)k
(cut)i(partitioning)f(the)h(region)e(in)n(to)i(t)n(w)n(o)e(subre-)1968
3231 y(gions,)e(eac)n(h)g(corresp)r(onding)f(to)i(a)f(c)n(hild)h(no)r
(de.)44 b(The)30 b(ro)r(ot)f(of)1968 3331 y Ft(T)48 b
Fu(is)38 b(asso)r(ciated)e(with)i(a)f(b)r(ounding)g(h)n(yp)r(erb)r(o)n
(x)g(con)n(taining)1968 3430 y Ft(S)5 b Fu(.)67 b(One)37
b(of)h(the)g(main)g(adv)-5 b(an)n(tages)36 b(of)h(BSP)g(trees)h(is)f
(that)1968 3530 y(they)26 b(allo)n(w)f(for)g(simple)h(m)n
(ulti-dimensional)g(searc)n(hing,)e(with)1968 3630 y(a)g(t)n(ypical)h
(comparison)e(for)i(a)g(no)r(de)g Ft(v)j Fu(in)e Ft(T)36
b Fu(simply)25 b(in)n(v)n(olving)1968 3729 y(a)33 b(sidedness)g(test)h
(against)e(the)i(h)n(yp)r(erplane)f(cut)h(asso)r(ciated)1968
3829 y(with)e Ft(v)s Fu(.)50 b(BSP)32 b(trees)f(are)g(used)h(often)g
(to)g(solv)n(e)f(problems)g(in)1968 3929 y(computer)h(graphics)f([11)o
(,)i(23)o(,)f(24)o(,)h(28)o(],)h(suc)n(h)e(as)g(global)f(illu-)1968
4028 y(mination,)22 b(shado)n(w)f(generation,)g(ra)n(y)f(casting,)i
(and)g(visibilit)n(y)-7 b(.)1968 4128 y(They)32 b(are)g(also)g(used)h
(in)h(information)e(retriev)-5 b(al)32 b(for)g(\014nding)1968
4227 y(nearest)k(neigh)n(b)r(ors,)j(farthest)e(neigh)n(b)r(ors,)h(and)f
(p)r(erforming)1968 4327 y(range)26 b(queries.)2117 4427
y(The)54 b(p)r(erformance)f(b)r(ounds)h(of)g(a)f(BSP)g(tree)h
Ft(T)65 b Fu(for)1968 4526 y(answ)n(ering)38 b(suc)n(h)h(queries)g(for)
g(a)g(p)r(oin)n(t)h(set)g Ft(S)k Fu(are)39 b(directly)1968
4626 y(related)31 b(to)g(the)h(depth)g(of)g Ft(T)43 b
Fu(and)31 b(the)h(\\fatness")e([2,)i(14)o(,)f(20)o(])1968
4726 y(\(that)37 b(is,)i(the)e(b)r(oundedness)g(of)f(the)h(asp)r(ect)g
(ratios\))e(of)i(the)1968 4825 y(regions)f(asso)r(ciated)g(with)i
Ft(T)12 b Fu('s)36 b(v)n(ertices.)66 b(One)37 b(w)n(ell-kno)n(wn)1968
4925 y(class)g(of)h(BSP)g(trees,)i(kno)n(wn)d(as)h Ft(k)s
Fu(-d)g(trees)f([6,)h(7,)g(17)o(,)g(22)o(],)1968 5024
y(uses)g(axis-parallel)e(cutting)j(h)n(yp)r(erplanes)e(that)i(are)f
(placed)1968 5124 y(so)47 b(as)h(to)g(divide)g(the)h(set)f(of)g(p)r
(oin)n(ts)g(asso)r(ciated)f(with)i(a)1968 5224 y(no)r(de)43
b(more-or-less)d(in)j(half.)84 b(Suc)n(h)43 b(trees)g(ha)n(v)n(e)f
(excellen)n(t)1968 5323 y(depth)24 b(prop)r(erties,)f(in)h(that)g
(their)f(depth)h(is)g(alw)n(a)n(ys)d Ft(O)r Fu(\(log)15
b Ft(n)p Fu(\).)1968 5423 y(Unfortunately)-7 b(,)30 b(since)f(the)h(ob)
5 b(jects)29 b(in)g Ft(S)34 b Fu(are)29 b(p)r(oin)n(ts,)h(whic)n(h)1968
5523 y(are)48 b(not)h(themselv)n(es)f(fat)h(\(as)g(with)g(the)g(sets)g
(of)g(ob)5 b(jects)1968 5622 y(studied)51 b(in)g([1,)g(12)o(,)g(21)o
(]\),)58 b(the)51 b(regions)e(asso)r(ciated)h(with)1968
5722 y(v)n(ertices)31 b(in)i(a)f Ft(k)s Fu(-d)h(tree)f(can)g(ha)n(v)n
(e)g(arbitrarily)e(large)i(asp)r(ect)1907 5903 y Fz(1)p
eop
%%Page: 2 2
2 1 bop 116 299 a Fu(2)116 523 y(ratios.)88 b(This)45
b(un)n(b)r(ounded)g(asp)r(ect)g(ratio)f(prop)r(ert)n(y)g(of)h
Ft(k)s Fu(-)116 623 y(d)40 b(trees)f(partly)g(accoun)n(ts)f(for)h(wh)n
(y)g(there)h(are)e(few)i(simple)116 722 y(theoretical)f(results)h(b)r
(etter)g(than)g(the)g Ft(O)r Fu(\()p Ft(n)1583 692 y
Fs(1)p Fn(\000)p Fs(1)p Fm(=d)1775 722 y Fu(\))g(a)n(v)n(erage)116
822 y(running)27 b(time,)i(ev)n(en)e(for)g(appro)n(ximation)f(v)n
(ersions.)266 922 y(Another)61 b(w)n(ell-kno)n(wn)f(class)h(of)g(searc)
n(h)f(structures,)116 1021 y(kno)n(wn)31 b(as)g(quadtrees)f([15)o(,)i
(25)o(,)g(27)o(])f(and)h(o)r(ctrees)e([3,)h(10)o(,)h(18)o(,)116
1121 y(26)o(],)g(are)d(based)h(on)g(the)h(alternate)f(approac)n(h)f(of)
h(using)g(axis-)116 1220 y(parallel)36 b(h)n(yp)r(erplanes)g(to)g
(divide)h(region)f(v)n(olumes)g(equally)-7 b(.)116 1320
y(These)30 b(structures)g(pro)r(duce)g(space)f(partitioning)h(trees)g
(with)116 1420 y(regions)c(ha)n(ving)f(go)r(o)r(d)i(asp)r(ect)f
(ratios,)g(but)h(their)g(depths)h(can)116 1519 y(b)r(e)36
b(quite)g(large,)g(whic)n(h)g(again)e(results)h(in)h(p)r(o)r(or)f(w)n
(orst-case)116 1619 y(searc)n(h)26 b(times.)266 1719
y(These)43 b(p)r(o)r(or)g(w)n(orst-case)e(p)r(erformances)h(of)h
Ft(k)s Fu(-d)h(trees)116 1818 y(and)19 b(o)r(ctrees)e(ha)n(v)n(e)h
(motiv)-5 b(ated)18 b(some)g(researc)n(hers)e(to)i(abandon)116
1918 y(the)i(BSP)f(tree)g(framew)n(ork)f(altogether)g(in)i(searc)n(h)e
(of)h(alternate)116 2017 y(structures)j(with)i(go)r(o)r(d)e(depth)i
(and)f(asp)r(ect-ratio)e(b)r(ounds.)36 b(In)116 2117
y(particular,)25 b(the)g(balanced)f(b)r(o)n(x-decomp)r(osition)g
(\(BBD\))h(tree)116 2217 y(structure)38 b(of)g(Ary)n(a)f(et)i(al.)e
([5,)h(4],)j(whic)n(h)d(is)g(based)g(on)g(the)116 2316
y(fair-split)28 b(tree)f(of)h(Callahan)f(and)h(Kosara)5
b(ju)26 b([8,)i(9)o(],)h(pro)n(vides)116 2416 y(a)f(space)g
(partitioning)f(tree)h(that)h(has)f Ft(O)r Fu(\(log)15
b Ft(n)p Fu(\))28 b(depth)h(while)116 2516 y(also)35
b(ac)n(hieving)f(v)n(ertex-asso)r(ciated)f(regions)i(with)h(b)r(ounded)
116 2615 y(asp)r(ect)31 b(ratios.)45 b(Ary)n(a)30 b(et)h(al.)f(sho)n(w)
g(that)h(this)g(structure)g(can)116 2715 y(b)r(e)g(used,)f(for)g
(example,)g(to)g(p)r(erform)f(appro)n(ximate)f(nearest-)116
2814 y(neigh)n(b)r(or)f(searc)n(hing)f(and)h(range)g(searc)n(hing)f(in)
h Ft(O)r Fu(\(log)15 b Ft(n)k Fu(+)f Ft(k)s Fu(\))116
2914 y(time,)28 b(where)e Ft(k)k Fu(is)c(the)h(size)g(of)f(the)h
(output.)38 b(The)26 b(only)h(dra)n(w-)116 3014 y(bac)n(k)c(with)h
(this)f(approac)n(h)f(is)h(that)g(it)h(partitions)f(space)f(using)116
3113 y(non-h)n(yp)r(erplanar)j(cuts)i(with)h(\\holes,")d(whic)n(h)i
(sacri\014ces)f(the)116 3213 y(con)n(v)n(exit)n(y)32
b(prop)r(ert)n(y)h(for)g(v)n(ertex-asso)r(ciated)e(regions.)53
b(This)116 3313 y(sacri\014ce)31 b(mak)n(es)g(the)h(BBD)g(tree)f
(inappropriate)g(for)g(sev)n(eral)116 3412 y(applications)i(in)h
(computer)f(graphics)f(and)i(graph)e(dra)n(wing,)116
3512 y(where)h(con)n(v)n(exit)n(y)f(of)h(the)h(partitioned)f(regions)f
(is)h(desirable)116 3611 y(\(e.g.,)28 b(see)f([19)o(]\).)116
3811 y Fx(1.2)95 b(Our)49 b(Results.)41 b Fu(Building)h(on)h(earlier)e
(w)n(ork)g(of)i(the)116 3910 y(authors)27 b(for)h(a)g(t)n(w)n
(o-dimensional)e(balanced)i(space)g(partition)116 4010
y(data)52 b(structure)f([13)o(],)58 b(useful)53 b(in)f(the)g(con)n
(text)f(of)h(graph)116 4110 y(dra)n(wing,)22 b(w)n(e)f(in)n(tro)r(duce)
h(in)g(this)g(pap)r(er)f(a)h(m)n(ulti-dimensional)116
4209 y(space)36 b(partition)f(tree)h(data)g(structure,)i(whic)n(h)e(w)n
(e)g(call)g(the)116 4309 y Fl(b)l(alanc)l(e)l(d)45 b(asp)l(e)l(ct)g(r)l
(atio)f(\(BAR\))g(tr)l(e)l(e)p Fu(,)j(that)c(is)g(de\014ned)h(for)116
4408 y(an)n(y)h(set)g Ft(S)50 b Fu(of)c Ft(n)f Fu(p)r(oin)n(ts)g(in)h
(I)-16 b(R)1204 4372 y Fm(d)1242 4408 y Fu(.)91 b(The)45
b(BAR)h(tree)f(data)116 4508 y(structure)26 b(is)g(conceptually)g
(quite)g(simple,)h(for)f(it)g(follo)n(ws)g(the)116 4608
y(traditional)31 b(format)g(of)g(the)h(binary)f(space)g(partition)g
(\(BSP\))116 4707 y(tree.)51 b(Moreo)n(v)n(er,)30 b(BAR)j(trees)f(sim)n
(ultaneously)f(ac)n(hiev)n(e)g(the)116 4807 y(desired)26
b(prop)r(erties)f(of)h(ha)n(ving)f Ft(O)r Fu(\(log)15
b Ft(n)p Fu(\))26 b(depth)h(and)e(v)n(ertex-)116 4907
y(asso)r(ciated)39 b(regions)g(that)i(are)e(con)n(v)n(ex)g(and)h
(\\fat")g(\(ha)n(ving)116 5006 y(b)r(ounded)28 b(asp)r(ect)g(ratios\).)
266 5106 y(In)k(the)h(follo)n(wing)e(sections,)i(w)n(e)f(giv)n(e)g(a)g
(general)f(frame-)116 5205 y(w)n(ork)i(for)g(BAR)h(trees,)h(some)e
(geometric)g(searc)n(hing)f(applic-)116 5305 y(ations)e(that)h(are)f
(realized)g(b)n(y)h(BAR)g(trees,)g(and)f(\014nally)h(giv)n(e)116
5405 y(an)i(e\016cien)n(t)g(metho)r(d)g(for)g(constructing)f(a)g(BAR)h
(tree.)53 b(Our)116 5504 y(metho)r(d)34 b(for)e(constructing)g(a)g(BAR)
h(tree)g(for)f(a)h(p)r(oin)n(t)g(set)f Ft(S)116 5604
y Fu(uses)38 b(h)n(yp)r(erplane)g(cuts)g(that)h(are)e(either)h
(parallel)f(to)h(a)g(co-)116 5704 y(ordinate)31 b(axis)g(or)g(form)g
(45)1011 5673 y Fn(\016)1080 5704 y Fu(angles)f(with)j(co)r(ordinate)d
(axes,)2200 523 y(the)g(latter)e(of)h(whic)n(h)g(w)n(e)g(call)g
(\\corner)e(cuts.")40 b(This)29 b(metho)r(d)2200 623
y(can)19 b(b)r(e)i(view)n(ed)e(as)g(an)h(extension)f(of)h(the)g
(traditional)f Ft(k)s Fu(-d)g(tree,)2200 722 y(for)27
b(our)g(BAR)h(tree)f(is)h(iden)n(tical)f(to)h(the)g Ft(k)s
Fu(-d)f(tree)g(de\014ned)h(on)2200 822 y Ft(S)38 b Fu(so)32
b(long)g(as)g(the)h Ft(k)s Fu(-d)g(tree)f(main)n(tains)h(a)f(balanced)g
(asp)r(ect)2200 922 y(ratio;)26 b(w)n(e)g(only)g(use)g(corner)f(cuts)i
(when)f(an)h(axis-parallel)d(cut)2200 1021 y(w)n(ould)j(pro)r(duce)g(a)
h(region)e(that)i(is)f(to)r(o)h(\\skinn)n(y)-7 b(.")2200
1220 y Fx(2)95 b(The)32 b(General)g(BAR)g(T)-8 b(ree)32
b(F)-8 b(ramew)m(ork)2200 1345 y Fu(In)46 b(this)g(section,)k(w)n(e)45
b(dev)n(elop)g(a)g(general)g(framew)n(ork)f(for)2200
1445 y(constructing)39 b(BAR)h(trees.)72 b(W)-7 b(e)40
b(b)r(egin)g(b)n(y)f(de\014ning)h(what)2200 1544 y(w)n(e)27
b(mean)h(b)n(y)f(b)r(ounded)h(asp)r(ect)f(ratio.)2200
1727 y Fk(Definition)32 b(2.1.)40 b Fu(A)32 b(con)n(v)n(ex)e(region)g
Ft(R)i Fu(in)g(I)-16 b(R)3750 1691 y Fm(d)3820 1727 y
Fu(has)31 b(asp)r(ect)2200 1826 y(ratio)24 b Fj(asp)o
Fu(\()p Ft(R)q Fu(\))f(=)g Ft(O)2829 1838 y Fm(R)2884
1826 y Ft(=I)2962 1838 y Fm(R)3042 1826 y Fu(with)j(resp)r(ect)f(to)g
(some)g(underlying)2200 1926 y(metric,)32 b(where)e Ft(O)2792
1938 y Fm(R)2877 1926 y Fu(is)h(the)g(radius)f(of)g(the)h(smallest)g
(circum-)2200 2026 y(scrib)r(ed)h(h)n(yp)r(ersphere)f(in)i(I)-16
b(R)3135 1989 y Fm(d)3206 2026 y Fu(and)32 b Ft(I)3408
2038 y Fm(R)3496 2026 y Fu(is)g(the)h(radius)e(of)i(the)2200
2125 y(largest)d(inscrib)r(ed)i Ft(d)p Fu(-h)n(yp)r(ersphere.)47
b Ft(R)32 b Fu(has)f Fl(b)l(alanc)l(e)l(d)k(asp)l(e)l(ct)2200
2225 y(r)l(atio)28 b Fu(with)f(maxim)n(um)f(asp)r(ect)h(ratio)f
Ft(\013)d Fi(\025)g Fu(1,)j(if)i Fj(asp)n Fu(\()p Ft(R)q
Fu(\))c Fi(\024)e Ft(\013)p Fu(.)2200 2324 y(W)-7 b(e)23
b(sa)n(y)-7 b(,)23 b(a)g(region)e Ft(R)j Fu(is)f(an)g
Ft(\013)p Fl(-b)l(alanc)l(e)l(d)j(r)l(e)l(gion)e Fu(if)f(it)g(has)g
(max-)2200 2424 y(im)n(um)37 b(asp)r(ect)f(ratio)f Ft(\013)p
Fu(.)63 b(A)37 b(collection)f(of)g(regions,)h Fi(R)p
Fu(,)i(has)2200 2524 y(balanced)e(asp)r(ect)h(ratio)f(with)i(balancing)
e(factor)g Ft(\013)h Fu(if)h(eac)n(h)2200 2623 y(region)26
b Ft(R)e Fi(2)g(R)k Fu(is)f(an)g Ft(\013)p Fu(-balanced)g(region.)2350
2806 y(T)n(ypically)-7 b(,)24 b(w)n(e)h(use)g(one)g(of)g(the)h
(standard)e Ft(L)3775 2818 y Fm(p)3838 2806 y Fu(metrics)h(to)2200
2905 y(de\014ne)e(asp)r(ect)f(ratios,)g(as)f(these)i(are)e(all)h
(within)h(a)f(p)r(olynomial)2200 3005 y(factor)37 b(of)h
Ft(d)g Fu(from)f(eac)n(h)g(other.)67 b(In)38 b(k)n(eeping)f(with)h
(curren)n(t)2200 3105 y(custom)k([2,)h(14)o(,)f(20)o(],)47
b(w)n(e)42 b(use)g(the)h(terms)f Fl(fat)h Fu(and)g Fl(skinny)2200
3204 y Fu(to)i(refer)g(to)g(regions)f(whic)n(h)h(ha)n(v)n(e)f(resp)r
(ectiv)n(ely)h(balanced)2200 3304 y(and)d(un)n(balanced)f(asp)r(ect)h
(ratios.)80 b(This)42 b(de\014nition)g(states)2200 3404
y(that)31 b(a)g(region)f Ft(R)h Fu(has)g(a)f(minim)n(um)i(width)g(asso)
r(ciated)d(with)2200 3503 y(its)55 b(diameter.)117 b(As)55
b(in)g(Ary)n(a)f(et)g(al.)h([5)o(],)62 b(w)n(e)54 b(use)h(this)2200
3603 y(prop)r(ert)n(y)25 b(to)i(sho)n(w)e(w)n(orst-case)f(b)r(ounds)i
(on)g(some)g(geometric)2200 3703 y(appro)n(ximation)g(problems.)2200
3885 y Fk(Definition)32 b(2.2.)40 b Fu(A)109 b Fl(c)l(anonic)l(al)c
(cut)e(set)p Fu(,)128 b Fi(C)161 b Fu(=)2200 3985 y Fi(f)m
Ft(~)-39 b(v)2282 3997 y Fs(1)2319 3985 y Ft(;)11 b(~)-39
b(v)2396 3997 y Fs(2)2433 3985 y Ft(;)14 b(:)g(:)g(:)g(;)d(~)-39
b(v)2658 3997 y Fm(\015)2701 3985 y Fi(g)p Fu(,)64 b(is)57
b(a)g(collection)f(of)h Ft(\015)5 b Fu(,)65 b(not)57
b(necessar-)2200 4093 y(ily)37 b(indep)r(enden)n(t,)i(v)n(ectors)c
(that)i(span)f(I)-16 b(R)3590 4057 y Fm(d)3665 4093 y
Fu(\(th)n(us,)39 b Ft(\015)k Fi(\025)37 b Ft(d)p Fu(\).)2200
4193 y(A)j Fl(c)l(anonic)l(al)h(cut)e Fu(is)g(an)n(y)g(h)n(yp)r
(erplane,)j Ft(H)7 b Fu(,)42 b(in)d(I)-16 b(R)3880 4157
y Fm(d)3959 4193 y Fu(with)39 b(a)2200 4293 y(normal)25
b(in)g Fi(C)5 b Fu(.)36 b(A)26 b Fl(c)l(anonic)l(al)j(r)l(e)l(gion)d
Fu(is)g(a)f(con)n(v)n(ex)f(p)r(olyhedron)2200 4392 y(in)k(I)-16
b(R)2372 4356 y Fm(d)2439 4392 y Fu(with)28 b(ev)n(ery)e(facet)i(ha)n
(ving)e(a)h(normal)g(in)h Fi(C)5 b Fu(.)2200 4575 y Fk(Definition)32
b(2.3.)40 b Fu(An)n(y)46 b(t)n(w)n(o)e(canonical)g(cuts)i
Ft(H)52 b Fu(and)45 b Ft(H)4178 4545 y Fn(0)2200 4674
y Fu(that)35 b(are)g(normal)f(to)h(the)g(same)g(v)n(ector)f(in)h
Fi(C)5 b Fu(,)37 b(i.e.)59 b(parallel)2200 4774 y(to)42
b(eac)n(h)g(other,)j(are)c Fl(opp)l(osing)k(c)l(anonic)l(al)f(cuts)p
Fu(.)80 b(F)-7 b(or)42 b(an)n(y)2200 4874 y(b)r(ounded)36
b(region)e Ft(R)q Fu(,)j(de\014ne)f(the)g Fl(c)l(anonic)l(al)i(b)l
(ounding)g(cuts)2200 4973 y(with)33 b(r)l(esp)l(e)l(ct)f(to)g(a)g(dir)l
(e)l(ction)e Ft(~)-39 b(v)3217 4985 y Fm(i)3273 4973
y Fi(2)27 b(C)35 b Fu(to)30 b(b)r(e)h(the)f(t)n(w)n(o)g(unique)2200
5073 y(opp)r(osing)22 b(canonical)g(cuts)h(normal)f(to)d
Ft(~)-39 b(v)3488 5085 y Fm(i)3516 5073 y Fu(,)24 b(and)f(tangen)n(t)f
(to)h Ft(R)q Fu(.)2200 5172 y(In)n(tuitiv)n(ely)-7 b(,)21
b Ft(R)f Fu(is)e(\\sandwic)n(hed")g(b)r(et)n(w)n(een)g(the)i(t)n(w)n(o)
e(opp)r(osing)2200 5272 y(cuts.)2350 5455 y(The)40 b(canonical)f(set)h
(used)h(to)f(de\014ne)g(a)g(partition)g(tree)2200 5554
y(can)f(v)-5 b(ary)38 b(from)h(metho)r(d)g(to)g(metho)r(d.)72
b(F)-7 b(or)38 b(example,)k(the)2200 5654 y(standard)32
b Ft(k)s Fu(-)p Ft(d)g Fu(tree)g(algorithm)f(uses)h(a)g(canonical)f
(set)i(of)f(all)2200 5753 y(axis-parallel)c(directions.)44
b(F)-7 b(or)29 b(notation,)i(w)n(e)e(often)i(refer)e(to)p
eop
%%Page: 3 3
3 2 bop 3927 299 a Fu(3)-116 523 y(a)26 b(canonical)g(cut)i(b)n(y)e
(its)i(normal)e(v)n(ector,)c Ft(~)-38 b(v)1282 535 y
Fm(i)1333 523 y Fi(2)23 b(C)5 b Fu(.)36 b(In)28 b(the)f
Ft(k)s Fu(-d)-116 623 y(tree)33 b(mo)r(del,)i(w)n(e)e(w)n(ould)g
(represen)n(t)f(a)h(cut)g(along)f(the)i Ft(y)s Fu(-axis)-116
722 y(b)n(y)26 b(\(0)p Ft(;)14 b Fu(1)p Ft(;)g Fu(0)p
Ft(;)g(:)g(:)g(:)e(;)i Fu(0\).)36 b(W)-7 b(e)27 b(refer)f(to)g(suc)n(h)
g(an)h(opp)r(osing)e(pair)h(b)n(y)-116 822 y(its)i(direction,)d
Ft(~)-39 b(v)410 834 y Fm(i)462 822 y Fi(2)25 b(C)5 b
Fu(,)28 b(in)g(p)r(ositiv)n(e)g(or)f(negativ)n(e)g(form)h(of)g(the)-116
922 y(normal)36 b(v)n(ector.)65 b(Also,)39 b(let)f Fi(j)p
Ft(R)q Fi(j)f Fu(represen)n(t)f(the)i(n)n(um)n(b)r(er)f(of)-116
1021 y(p)r(oin)n(ts)30 b(from)g(a)h(giv)n(en)e(data)h(set)h
Ft(S)k Fu(con)n(tained)30 b(in)h(the)g(region)-116 1121
y Ft(R)q Fu(,)c(i.e.)37 b(its)28 b(size)f(in)h(terms)f(of)h(p)r(oin)n
(ts)f(rather)g(than)h(v)n(olume.)-116 1307 y Fk(Definition)k(2.4.)40
b Fu(An)23 b Ft(\013)p Fu(-balanced)e(canonical)g(region,)h
Ft(R)q Fu(,)h(is)-116 1407 y Fl(one-cuttable)30 b Fu(with)g(reduction)g
(factor)f Ft(\014)t Fu(,)i(where)e(1)p Ft(=)p Fu(2)c
Fi(\024)i Ft(\014)k(<)-116 1506 y Fu(1,)f(if)h(there)f(is)g(a)g(cut)h
Ft(s)616 1518 y Fs(1)681 1506 y Fi(2)d(C)5 b Fu(,)30
b(called)g(a)g Fl(one-cut)p Fu(,)h(dividing)f Ft(R)-116
1606 y Fu(in)n(to)d(t)n(w)n(o)g(subregions)f Ft(R)679
1618 y Fs(1)744 1606 y Fu(and)h Ft(R)968 1618 y Fs(2)1033
1606 y Fu(suc)n(h)h(that)-56 1775 y(1.)41 b Ft(R)113
1787 y Fs(1)178 1775 y Fu(and)27 b Ft(R)402 1787 y Fs(2)467
1775 y Fu(are)g Ft(\013)p Fu(-balanced)g(canonical)f(regions,)-56
1910 y(2.)41 b Fi(j)p Ft(R)136 1922 y Fs(1)173 1910 y
Fi(j)23 b(\024)g Ft(\014)t Fi(j)p Ft(R)q Fi(j)28 b Fu(and)f
Fi(j)p Ft(R)743 1922 y Fs(2)781 1910 y Fi(j)c(\024)f
Ft(\014)t Fi(j)p Ft(R)q Fi(j)p Fu(.)-116 2096 y Fk(Definition)32
b(2.5.)40 b Fu(An)i Ft(\013)p Fu(-balanced)e(canonical)g(region,)k
Ft(R)q Fu(,)-116 2196 y(is)27 b Ft(k)s Fl(-cuttable)h
Fu(with)g(reduction)f(factor)g Ft(\014)t Fu(,)h(for)f
Ft(k)f(>)d Fu(1,)28 b(if)g(there)-116 2295 y(is)40 b(a)g(cut)g
Ft(s)256 2307 y Fm(k)341 2295 y Fi(2)k(C)5 b Fu(,)43
b(called)d(a)g Ft(k)s Fl(-cut)p Fu(,)i(dividing)f Ft(R)g
Fu(in)n(to)e(t)n(w)n(o)-116 2395 y(subregions)26 b Ft(R)354
2407 y Fs(1)419 2395 y Fu(and)h Ft(R)643 2407 y Fs(2)708
2395 y Fu(suc)n(h)g(that)-56 2564 y(1.)41 b Ft(R)113
2576 y Fs(1)178 2564 y Fu(and)27 b Ft(R)402 2576 y Fs(2)467
2564 y Fu(are)g Ft(\013)p Fu(-balanced)g(canonical)f(regions,)-56
2699 y(2.)41 b Fi(j)p Ft(R)136 2711 y Fs(2)173 2699 y
Fi(j)23 b(\024)g Ft(\014)t Fi(j)p Ft(R)q Fi(j)p Fu(,)-56
2834 y(3.)41 b(Either)32 b Fi(j)p Ft(R)396 2846 y Fs(1)433
2834 y Fi(j)g(\024)f Ft(\014)t Fi(j)p Ft(R)q Fi(j)i Fu(or)f
Ft(R)948 2846 y Fs(1)1018 2834 y Fu(is)h(\()p Ft(k)25
b Fi(\000)d Fu(1\)-cuttable)32 b(with)50 2934 y(reduction)27
b(factor)g Ft(\014)t Fu(.)33 3102 y(In)111 b(other)e(w)n(ords,)130
b(the)111 b(sequence)e(of)h(cuts,)-116 3202 y Ft(s)-77
3214 y Fm(k)-36 3202 y Ft(;)14 b(s)40 3214 y Fm(k)q Fn(\000)p
Fs(1)165 3202 y Ft(;)g(:)g(:)g(:)g(;)g(s)389 3214 y Fs(1)426
3202 y Fu(,)74 b(results)64 b(in)h Ft(k)46 b Fu(+)d(1)65
b(balanced)f(canon-)-116 3302 y(ical)26 b(regions)f(eac)n(h)h(con)n
(taining)g(no)h(more)f(than)h Ft(\014)t(n)g Fu(p)r(oin)n(ts.)36
b(If)-116 3401 y Ft(\014)c Fu(is)27 b(understo)r(o)r(d,)h(w)n(e)f
(simply)g(sa)n(y)g Ft(R)h Fu(is)g Ft(k)s Fu(-cuttable.)-116
3587 y Fk(Theorem)k(2.1.)40 b Fu(F)-7 b(or)26 b(a)h(canonical)e(set,)i
Fi(C)5 b Fu(,)27 b(if)g(ev)n(ery)f(p)r(ossible)-116 3687
y Ft(\013)p Fu(-balanced)18 b(canonical)g(region)g(is)h
Ft(k)s Fu(-cuttable)g(with)h(reduction)-116 3787 y(factor)29
b Ft(\014)t Fu(,)i(then)g(a)e(BAR)i(tree)e(with)i(maxim)n(um)f(asp)r
(ect)g(ratio)-116 3886 y Ft(\013)e Fu(can)g(b)r(e)g(constructed)f(with)
i(depth)f Ft(O)r Fu(\()p Ft(k)18 b Fu(log)1369 3907 y
Fs(1)p Fm(=\014)1495 3886 y Ft(n)p Fu(\),)28 b(for)f(an)n(y)-116
3986 y(set)g Ft(S)33 b Fu(of)27 b Ft(n)h Fu(p)r(oin)n(ts.)-116
4172 y Fl(Pr)l(o)l(of.)43 b Fu(Start)19 b(with)h(an)f(initial)h(b)r
(ounding)f Ft(\013)p Fu(-balanced)g(canon-)-116 4272
y(ical)38 b(region)f(on)h Ft(S)5 b Fu(.)69 b(Since)39
b(this)f(region)g(is)g Ft(k)s Fu(-cuttable,)j(use)-116
4372 y(a)f(sequence)g(of)g Ft(k)k Fu(cuts)c(to)h(divide)f(the)h(region)
e(in)n(to)i Ft(k)29 b Fu(+)e(1)-116 4471 y Ft(\013)p
Fu(-balanced)k(canonical)g(subregions)g(eac)n(h)g(con)n(taining)g(few)n
(er)-116 4571 y(than)h Ft(\014)t(n)g Fu(of)g(the)h(p)r(oin)n(ts.)50
b(Rep)r(eat)32 b(this)h(pro)r(cess)e(on)g(eac)n(h)h(of)-116
4670 y(the)c(resulting)f(subregions)g(un)n(til)h(a)f(subregion)g(has)g
(less)h(than)-116 4770 y(some)19 b(constan)n(t)h(n)n(um)n(b)r(er)g(of)g
(p)r(oin)n(ts.)35 b(The)20 b(pro)r(cess,)h(do)n(wn)e(an)n(y)-116
4870 y(path)34 b(of)g(subregions,)h(can)f(b)r(e)g(rep)r(eated)g(for)g
(no)g(more)g(than)-116 4969 y Ft(O)r Fu(\(log)89 4990
y Fs(1)p Fm(=\014)215 4969 y Ft(n)p Fu(\))43 b(times,)k(resulting)42
b(in)h(the)g(stated)g(tree)f(depth)-116 5069 y(b)r(ound.)p
172 5069 50 50 v 33 5255 a(The)35 b(main)f(c)n(hallenge)f(in)h
(creating)g(a)g(sp)r(eci\014c)g(instance)-116 5355 y(of)26
b(a)h(BAR)f(tree)h(is)f(in)h(de\014ning)g(a)f(canonical)f(set)i
Fi(C)k Fu(suc)n(h)26 b(that)-116 5455 y(ev)n(ery)c(p)r(ossible)h
Ft(\013)p Fu(-balanced)h(canonical)e(region)g(is)i Ft(k)s
Fu(-cuttable)-116 5554 y(with)32 b(reduction)g(factor)f
Ft(\014)36 b Fu(for)31 b(reasonable)f(c)n(hoices)h(of)h
Ft(\013)p Fu(,)h Ft(\014)t Fu(,)-116 5654 y(and)k Ft(k)s
Fu(.)66 b(But,)41 b(b)r(efore)c(w)n(e)g(do)g(this,)j(let)e(us)g(motiv)
-5 b(ate)37 b(it)h(b)n(y)-116 5753 y(describing)27 b(a)g(few)h
(applications)e(for)h(BAR)h(trees.)1968 523 y Fx(3)95
b(BAR)31 b(T)-8 b(ree)32 b(Applications)1968 648 y Fu(Supp)r(ose)h(w)n
(e)g(are)f(giv)n(en)g(a)h(p)r(oin)n(t)g(set)g Ft(S)38
b Fu(of)33 b Ft(n)g Fu(p)r(oin)n(ts)g(in)h(I)-16 b(R)3930
611 y Fm(d)1968 747 y Fu(using)46 b(an)n(y)f(one)h(of)h(the)g(Mink)n(o)
n(wski)e Ft(L)3315 759 y Fm(p)3399 747 y Fu(metrics.)93
b(After)1968 847 y(constructing)21 b(a)i(BAR)g(tree)f
Ft(T)34 b Fu(on)22 b Ft(S)5 b Fu(,)23 b(w)n(e)g(are)e(able)i(to)f(p)r
(erform)1968 946 y(some)e(useful)i(queries.)34 b(F)-7
b(or)21 b(an)n(y)g(query)g(p)r(oin)n(t)g Ft(q)26 b Fi(2)e
Fu(I)-16 b(R)3657 910 y Fm(d)3696 946 y Fu(,)22 b(w)n(e)g(are)1968
1046 y(able)30 b(to)h(e\016cien)n(tly)g(rep)r(ort)g(b)r(oth)g(the)h
(appro)n(ximate-nearest)1968 1146 y(and)25 b(appro)n(ximate-farthest)f
(neigh)n(b)r(ors)h(of)h Ft(q)j Fu(in)d Ft(S)5 b Fu(.)36
b(If)27 b(w)n(e)f(are)1968 1245 y(also)33 b(giv)n(en)h(a)g(radius)f
Ft(r)r Fu(,)k(w)n(e)e(are)e(able)h(to)h(e\016cien)n(tly)f(return)1968
1345 y(all)c(p)r(oin)n(ts)g(within)i(a)e(distance)g Ft(r)k
Fu(from)c Ft(q)j Fu(plus)e(p)r(ossibly)f(an)n(y)1968
1445 y(p)r(oin)n(ts)j(that)g(are)g(appro)n(ximately)e(near)h
Ft(r)r Fu(,)k(whic)n(h)d(is)g(a)g(form)1968 1544 y(of)27
b(appro)n(ximate)e(range)h(searc)n(hing.)35 b(W)-7 b(e)28
b(will)f(more)f(formally)1968 1644 y(describ)r(e)h(some)g(of)g(these)h
(applications)f(shortly)-7 b(.)2117 1743 y(Ary)n(a)32
b(et)i(al.)e([4,)h(5])g(prop)r(ose)f(a)h(tec)n(hnique)g(to)g(solv)n(e)f
(the)1968 1843 y(appro)n(ximate)42 b(nearest-neigh)n(b)r(or)f(and)i
(range)g(query)g(prob-)1968 1943 y(lems)53 b(b)n(y)f(constructing)g(a)h
(balanced)f(b)r(o)n(x-decomp)r(osition)1968 2042 y(tree.)36
b(Similar)25 b(to)h(our)f(BAR)i(trees,)f(these)g(trees)f(main)n(tain)h
(an)1968 2142 y Ft(\013)p Fu(-balanced)36 b(asp)r(ect)h(ratio)e(but)j
(only)e(b)n(y)h(in)n(tro)r(ducing)f(non-)1968 2242 y(con)n(v)n(ex)31
b(hole)i(cuts.)53 b(Their)32 b(argumen)n(ts)g(and)g(tec)n(hniques)h
(for)1968 2341 y(solving)23 b(these)h(query)f(problems,)h(ho)n(w)n(ev)n
(er,)f(are)g(easily)h(trans-)1968 2441 y(ferable)j(to)g(our)g(data)g
(structure.)1968 2646 y Fk(Definition)32 b(3.1.)40 b
Fu(F)-7 b(or)31 b(a)g(set)g Ft(S)36 b Fu(of)c(p)r(oin)n(ts)f(in)h(I)-16
b(R)3598 2610 y Fm(d)3637 2646 y Fu(,)32 b(a)f(query)1968
2746 y(p)r(oin)n(t)j Ft(q)k Fi(2)d Fu(I)-16 b(R)2431
2710 y Fm(d)2470 2746 y Fu(,)36 b(and)e Ft(\017)h(>)f
Fu(0,)i(a)e(p)r(oin)n(t)g Ft(p)h Fi(2)g Ft(S)k Fu(is)34
b(a)g(\(1)23 b(+)g Ft(\017)p Fu(\))p Fl(-)1968 2846 y(ne)l(ar)l(est)33
b(neighb)l(or)i(of)f Ft(q)h Fu(if)d Ft(\016)s Fu(\()p
Ft(p;)14 b(q)s Fu(\))30 b Fi(\024)g Fu(\(1)21 b(+)g Ft(\017)p
Fu(\))p Ft(\016)s Fu(\()p Ft(p)3553 2815 y Fn(\003)3591
2846 y Ft(;)14 b(q)s Fu(\),)33 b(where)1968 2945 y Ft(p)2010
2915 y Fn(\003)2075 2945 y Fu(is)28 b(the)g(true)f(nearest)g(neigh)n(b)
r(or)f(to)i Ft(q)s Fu(.)2117 3151 y(In)i(other)f(w)n(ords,)g(suc)n(h)g
(a)h Ft(p)f Fu(is)h(within)g(a)g(constan)n(t)e(error)1968
3250 y(factor)f(of)h(the)h(true)f(nearest)f(neigh)n(b)r(or.)38
b(This)28 b(de\014nition)h(can)1968 3350 y(also)19 b(b)r(e)j(extended)f
(to)g(rep)r(ort)f(a)g(sequence)h(of)f Ft(s)h Fu(\(1)5
b(+)g Ft(\017)p Fu(\)-nearest)1968 3450 y(neigh)n(b)r(ors.)33
b(Rather)20 b(than)h(adapt)f(all)h(theorems)f(presen)n(ted)g(b)n(y)1968
3549 y(Ary)n(a)27 b(et)i(al.)39 b(in)29 b(this)g(extended)g(abstract,)f
(w)n(e)g(instead)g(pro)n(v)n(e)1968 3649 y(another)22
b(useful)i(query)f(op)r(eration,)g(applicable)g(to)h(b)r(oth)g(their)
1968 3748 y(and)33 b(our)g(metho)r(ds,)j(and)e(establish)g(an)f(imp)r
(ortan)n(t)h(pac)n(king)1968 3848 y(feature)27 b(for)g(BAR)h(trees.)
1968 4054 y Fk(Definition)k(3.2.)40 b Fu(F)-7 b(or)31
b(a)g(set)g Ft(S)36 b Fu(of)c(p)r(oin)n(ts)f(in)h(I)-16
b(R)3598 4017 y Fm(d)3637 4054 y Fu(,)32 b(a)f(query)1968
4153 y(p)r(oin)n(t)j Ft(q)k Fi(2)d Fu(I)-16 b(R)2431
4117 y Fm(d)2470 4153 y Fu(,)36 b(and)e Ft(\017)h(>)f
Fu(0,)i(a)e(p)r(oin)n(t)g Ft(p)h Fi(2)g Ft(S)k Fu(is)34
b(a)g(\(1)23 b Fi(\000)g Ft(\017)p Fu(\))p Fl(-)1968
4253 y(farthest)35 b(neighb)l(or)h(of)g Ft(q)h Fu(if)c
Ft(\016)s Fu(\()p Ft(p;)14 b(q)s Fu(\))33 b Fi(\025)f
Ft(\016)s Fu(\()p Ft(p)3337 4223 y Fn(\003)3375 4253
y Ft(;)14 b(q)s Fu(\))23 b Fi(\000)f Ft(\017D)r Fu(,)34
b(where)1968 4352 y Ft(p)2010 4322 y Fn(\003)2079 4352
y Fu(is)d(the)h(true)f(farthest)g(neigh)n(b)r(or)f(and)i
Ft(D)h Fu(is)e(the)h(diameter)1968 4452 y(of)27 b(the)h(p)r(oin)n(t)g
(set.)2117 4658 y(W)-7 b(e)32 b(are)f(using)h(an)f(absolute)g(error)f
(b)r(ound)j(rather)d(than)1968 4757 y(the)42 b(standard)f(relativ)n(e)g
(error,)j Ft(\016)s Fu(\()p Ft(p;)14 b(q)s Fu(\))48 b
Fi(\025)e Fu(\(1)28 b Fi(\000)g Ft(\017)p Fu(\))p Ft(\016)s
Fu(\()p Ft(p)3798 4727 y Fn(\003)3836 4757 y Ft(;)14
b(q)s Fu(\),)1968 4857 y(b)r(ecause)40 b(the)h(b)r(ound)f(is)h(tigh)n
(ter)f(in)g(ev)n(ery)g(case.)74 b(Imagine)1968 4956 y(a)28
b(p)r(oin)n(t)g(set)h(that)g(is)f(tigh)n(tly)g(con)n(tained)g(in)h(the)
g(unit)g(sphere,)1968 5056 y(and)38 b(a)g(query)f(p)r(oin)n(t)i(that)g
(is)f(extremely)-7 b(,)40 b(100)p Ft(=\017)d Fu(units,)k(far)1968
5156 y(from)c(this)g(sphere.)66 b(No)n(w,)40 b(an)n(y)c(p)r(oin)n(t)i
(returned)f(w)n(ould)g(b)r(e)1968 5255 y(a)e(\(1)24 b
Fi(\000)g Ft(\017)p Fu(\)-farthest)35 b(neigh)n(b)r(or)g(of)h
Ft(S)41 b Fu(using)35 b(a)h(relativ)n(e)e(error)1968
5355 y(b)r(ound.)65 b(In)37 b(our)g(de\014nition,)j(a)c(query)h(p)r
(oin)n(t)g(is)g(the)g(b)r(etter)1968 5455 y(of)23 b(the)g(absolute)g
(and)f(relativ)n(e)g(distances,)i(within)g(a)e(constan)n(t)1968
5554 y(factor)f(of)h Ft(\017)p Fu(.)34 b(Since)22 b Ft(D)i
Fu(is)e(the)g(diameter)g(of)g(the)g(set,)h(an)n(y)e(query)1968
5654 y(p)r(oin)n(t)26 b(m)n(ust)h(b)r(e)g(at)f(least)g(half)h(the)f
(diameter)g(a)n(w)n(a)n(y)f(from)h(one)1968 5753 y(of)e(the)h(p)r(oin)n
(ts)f(in)h(the)g(set,)g Ft(\016)s Fu(\()p Ft(p)2943 5723
y Fn(\003)2981 5753 y Ft(;)14 b(q)s Fu(\))23 b Fi(\025)g
Ft(D)r(=)p Fu(2.)35 b(Letting)24 b Ft(\017)3736 5723
y Fn(0)3783 5753 y Fu(=)e(2)p Ft(\017)p Fu(,)p eop
%%Page: 4 4
4 3 bop 116 299 a Fu(4)116 523 y(w)n(e)27 b(see)h(that)251
688 y Ft(\016)s Fu(\()p Ft(p;)14 b(q)s Fu(\))83 b Fi(\025)g
Ft(\016)s Fu(\()p Ft(p)819 658 y Fn(\003)857 688 y Ft(;)14
b(q)s Fu(\))19 b Fi(\000)f Ft(\017D)24 b Fi(\025)f Ft(\016)s
Fu(\()p Ft(p)1397 658 y Fn(\003)1435 688 y Ft(;)14 b(q)s
Fu(\))19 b Fi(\000)f Ft(\017)p Fu(2)p Ft(\016)s Fu(\()p
Ft(p)1836 658 y Fn(\003)1873 688 y Ft(;)c(q)s Fu(\))557
788 y(=)83 b(\(1)18 b Fi(\000)g Fu(2)p Ft(\017)p Fu(\))p
Ft(\016)s Fu(\()p Ft(p)1102 758 y Fn(\003)1140 788 y
Ft(;)c(q)s Fu(\))23 b(=)g(\(1)18 b Fi(\000)g Ft(\017)1569
758 y Fn(0)1592 788 y Fu(\))p Ft(\016)s Fu(\()p Ft(p)1738
758 y Fn(\003)1776 788 y Ft(;)c(q)s Fu(\))p Ft(:)116
971 y Fu(Hence,)28 b(using)g(an)f(absolute)g(error)f(b)r(ound)j(in)f
(the)g(appro)n(xim-)116 1071 y(ate)h(farthest-neigh)n(b)r(or)f(query)g
(alw)n(a)n(ys)f(giv)n(es)h(a)h(p)r(oin)n(t)g(whose)116
1171 y(distance)c(is)f(at)h(least)f(as)g(far)g(as)g(the)h(distance)f
(obtained)g(using)116 1270 y(a)k(relativ)n(e)e(error)g(b)r(ound.)38
b(In)28 b(fact,)g(one)f(can)h(extend)g(this)g(no-)116
1370 y(tion)d(and)g(our)g(argumen)n(ts)f(to)h(comp)r(ensate)g(for)f
(this)i(problem)116 1469 y(in)g(nearest-neigh)n(b)r(or)d(queries)h(as)h
(w)n(ell,)h(i.e.,)g(when)f(the)h(query)116 1569 y(p)r(oin)n(t)i(is)f
(relativ)n(ely)g(far)g(a)n(w)n(a)n(y)e(from)j(the)g(en)n(tire)f(data)g
(set.)266 1669 y(W)-7 b(e)35 b(no)n(w,)h(brie\015y)-7
b(,)37 b(discuss)d(the)h(farthest)g(neigh)n(b)r(or)f(ap-)116
1768 y(pro)n(ximation)k(algorithm)f(using)i(a)f(BAR)h(tree.)70
b(Giv)n(en)39 b(our)116 1868 y(query)33 b(p)r(oin)n(t)g
Ft(q)s Fu(,)i(w)n(e)e(b)r(egin)h(b)n(y)f(\014nding)g(a)g(leaf)g(no)r
(de)h(that)f(is)116 1968 y(the)k(farthest)g(a)n(w)n(a)n(y)d(from)j
Ft(q)s Fu(.)64 b(Here,)39 b(a)d(region's)f(maxim)n(um)116
2067 y(distance)g(from)g(a)g(p)r(oin)n(t)h(is)f(considered,)i(implying)
e(that,)j(in)116 2167 y(theory)-7 b(,)29 b(the)g(no)r(de)g(con)n
(taining)e(the)j(p)r(oin)n(t)f Ft(q)i Fu(migh)n(t)e(still)g(also)116
2267 y(b)r(e)j(the)g(no)r(de)f(that)h(is)f(the)h(farthest)f(from)h
Ft(q)s Fu(.)48 b(W)-7 b(e)32 b(next)g(en)n(u-)116 2366
y(merate,)24 b(via)e(a)h(priorit)n(y)e(queue,)j(all)f(leaf)g(no)r(des)g
(in)g(decreasing)116 2466 y(order)e(of)h(distance,)h(i.e.)36
b(farthest)22 b(leaf)g(no)r(des)g(\014rst.)35 b(F)-7
b(or)21 b(ev)n(ery)116 2565 y(leaf)j(no)r(de,)g(w)n(e)f(compute)h(the)g
(distance)f(b)r(et)n(w)n(een)g(that)h(no)r(de's)116 2665
y(data)i(p)r(oin)n(t)h(and)f Ft(q)k Fu(and)c(main)n(tain)g(the)h
(curren)n(t)e(farthest)i(vis-)116 2765 y(ited)19 b(p)r(oin)n(t.)34
b(When)19 b(the)g(distance)f(b)r(et)n(w)n(een)g Ft(q)k
Fu(and)c(the)h(curren)n(t)116 2864 y(farthest)24 b(no)r(de)g(is)g(less)
f(than)h Ft(\016)s Fu(\()p Ft(p;)14 b(q)s Fu(\))d(+)g
Ft(\017D)r Fu(,)25 b(w)n(e)f(can)f(terminate)116 2964
y(the)28 b(searc)n(h,)e(as)h Ft(\016)s Fu(\()p Ft(p)750
2934 y Fn(\003)789 2964 y Ft(;)14 b(q)s Fu(\))23 b Ft(<)f(\016)s
Fu(\()p Ft(p;)14 b(q)s Fu(\))19 b(+)f Ft(\017D)r Fu(.)266
3064 y(A)31 b(priorit)n(y)f(queue)h(can)g(b)r(e)h(main)n(tained)f(in)h
(suc)n(h)f(a)f(w)n(a)n(y)116 3163 y(that)i(the)f(running)g(time)h(is)f
Ft(O)r Fu(\(log)15 b Ft(n)p Fu(\))32 b(times)f(the)h(n)n(um)n(b)r(er)f
(of)116 3263 y(leaf)25 b(no)r(des)g(visited.)36 b(The)25
b(k)n(ey)f(to)h(the)g(algorithm's)e(success)h(is)116
3362 y(that)j(the)h(n)n(um)n(b)r(er)e(of)h(leaf)g(no)r(des)g(visited)g
(can)f(b)r(e)i(limited)f(b)n(y)116 3462 y(using)34 b(a)g(pac)n(king)f
(argumen)n(t.)55 b(Let)35 b(us,)h(therefore,)e(describ)r(e)116
3562 y(b)r(oth)52 b(the)h(priorit)n(y)d(queue)i(tec)n(hnique)g(and)f
(the)h(pac)n(king)116 3661 y(argumen)n(t)46 b(needed)h(to)f(limit)i
(the)f(n)n(um)n(b)r(er)f(of)h(leaf)f(no)r(des)116 3761
y(visited.)116 3960 y Fx(3.1)95 b(Searc)m(hing)51 b(F)-8
b(arthest)50 b(No)s(des.)42 b Fu(Let)i(us)f(describ)r(e,)116
4060 y(in)32 b(more)f(detail,)i(the)f(searc)n(hing)e(tec)n(hnique)i
(whic)n(h)f(uses)h(the)116 4159 y(priorit)n(y)k(queue.)64
b(T)-7 b(o)37 b(a)n(v)n(oid)e(confusion)h(b)r(et)n(w)n(een)h(p)r(oin)n
(ts)g(in)116 4259 y(space)23 b(and)g(in)h(the)g(data)f(set,)h(w)n(e)g
(call)f(a)g(p)r(oin)n(t)h Ft(p)p Fu(,)g(a)f Fl(data)k(p)l(oint)116
4359 y Fu(if)38 b Ft(p)g Fi(2)h Ft(S)5 b Fu(,)40 b(and)d(a)f(p)r(oin)n
(t)h Ft(r)r Fu(,)k(a)36 b Fl(r)l(e)l(al)j(p)l(oint)e
Fu(if)h Ft(r)j Fi(2)f Fu(I)-16 b(R)1869 4322 y Fm(d)1908
4359 y Fu(.)65 b(F)-7 b(or)116 4458 y(an)n(y)36 b(no)r(de)g
Ft(u)g Fu(and)g(its)h(asso)r(ciated)e(region)g Ft(R)q
Fu(,)j(let)f Ft(\016)s Fu(\()p Ft(u;)14 b(q)s Fu(\))37
b(=)116 4558 y Ft(\016)s Fu(\()p Ft(R)q(;)14 b(q)s Fu(\))40
b(=)g(max)661 4570 y Fm(r)r Fn(2)p Fm(R)806 4558 y Ft(\016)s
Fu(\()p Ft(r)n(;)14 b(q)s Fu(\),)41 b(i.e.)68 b(the)38
b(distance)f(b)r(et)n(w)n(een)h Ft(q)116 4658 y Fu(and)25
b(a)g(no)r(de)g Ft(u)g Fu(is)g(the)g(distance)g(b)r(et)n(w)n(een)g
Ft(q)j Fu(and)d(the)g(farthest)116 4757 y(real)i(p)r(oin)n(t)h(from)f
Ft(q)k Fu(in)d(the)f(region)g Ft(R)q Fu(.)266 4857 y(Initially)-7
b(,)44 b(a)c(priorit)n(y)f(queue)i Ft(Q)f Fu(starts)g(with)h(the)g(ro)r
(ot)116 4956 y(no)r(de)j(of)g Ft(T)12 b Fu(.)85 b(Let)43
b Ft(p)h Fu(b)r(e)g(the)h(curren)n(t)e(farthest)g(neigh)n(b)r(or,)116
5056 y(initially)36 b(set)g(to)f Ft(q)s Fu(.)62 b(A)n(t)36
b(ev)n(ery)e(stage,)j(extract)e(from)g Ft(Q)h Fu(the)116
5156 y(no)r(de,)53 b Ft(u)p Fu(,)g(that)c(is)f(the)g(farthest)g(from)g
Ft(q)s Fu(.)98 b(If)48 b Ft(\016)s Fu(\()p Ft(u;)14 b(q)s
Fu(\))57 b Ft(<)116 5255 y(\016)s Fu(\()p Ft(p;)14 b(q)s
Fu(\))27 b(+)f Ft(\017D)r Fu(,)43 b(w)n(e)c(return)h
Ft(p)f Fu(as)g(the)i(\(1)26 b(+)g Ft(\017)p Fu(\)-appro)n(ximate)116
5355 y(farthest)k(neigh)n(b)r(or.)41 b(If)30 b Ft(u)f
Fu(is)h(a)f(leaf)g(no)r(de,)i(let)e Ft(p)1670 5325 y
Fn(0)1720 5355 y Fi(2)d Ft(S)35 b Fu(b)r(e)30 b(the)116
5455 y(no)r(de's)24 b(asso)r(ciated)e(data)h(p)r(oin)n(t,)i(if)f(an)n
(y)-7 b(.)34 b(If)24 b Ft(\016)s Fu(\()p Ft(p)1627 5424
y Fn(0)1651 5455 y Ft(;)14 b(q)s Fu(\))23 b Ft(>)g(\016)s
Fu(\()p Ft(p;)14 b(q)s Fu(\),)116 5554 y(let)28 b Ft(p)c
Fi( )f Ft(p)450 5524 y Fn(0)474 5554 y Fu(.)37 b(Remo)n(v)n(e)27
b Ft(u)h Fu(from)f(consideration,)g(and)h(con)n(tin)n(ue)116
5654 y(with)c(the)g(next)g(no)r(de)g(in)g Ft(Q)p Fu(.)35
b(If)24 b Ft(u)f Fu(is)h(not)g(a)f(leaf,)h(let)g Ft(u)1814
5666 y Fs(1)1875 5654 y Fu(and)f Ft(u)2080 5666 y Fs(2)116
5753 y Fu(b)r(e)h Ft(u)p Fu('s)e(c)n(hildren.)35 b(Since)24
b Ft(u)e Fu(=)h Ft(u)1117 5765 y Fs(1)1168 5691 y Fh(S)1251
5753 y Ft(u)1299 5765 y Fs(2)1335 5753 y Fu(,)i(one)d(of)h(the)h(t)n(w)
n(o)e(no)r(des)2200 523 y(m)n(ust)36 b(con)n(tain)f(the)i(real)d(p)r
(oin)n(t)j(that)f(w)n(as)f(farthest)g(from)h Ft(q)s Fu(.)2200
623 y(Wlog,)30 b(let)h(this)f(b)r(e)h Ft(u)2896 635 y
Fs(1)2963 623 y Fu(and)f(insert)f Ft(u)3408 635 y Fs(2)3475
623 y Fu(in)n(to)h(the)h(queue.)44 b(Use)2200 722 y Ft(u)2248
734 y Fs(1)2313 722 y Fu(as)26 b(next)i(\\extracted")e(no)r(de)i(from)f
Ft(Q)g Fu(and)h(con)n(tin)n(ue.)2200 897 y Fk(Lemma)j(3.1.)41
b Fu(Giv)n(en)83 b(a)g(BAR)h(tree)f Ft(T)94 b Fu(with)84
b(depth)2200 996 y Ft(O)r Fu(\()p Ft(k)18 b Fu(log)2465
1017 y Fs(1)p Fm(=\014)2591 996 y Ft(n)p Fu(\))42 b(and)g
Ft(\015)48 b Fu(canonical)41 b(v)n(ectors,)j(for)e(an)n(y)g(query)2200
1096 y(p)r(oin)n(t)34 b Ft(q)s Fu(,)i(a)d(\(1)23 b Fi(\000)f
Ft(\017)p Fu(\)-farthest)33 b(neigh)n(b)r(or)g(to)h Ft(q)j
Fu(can)c(b)r(e)i(found)2200 1196 y(in)h Ft(O)r Fu(\()p
Ft(k)s(l)r(\015)18 b Fu(log)2644 1216 y Fs(1)p Fm(=\014)2769
1196 y Ft(n)p Fu(\))36 b(time,)i(where)d Ft(l)i Fu(is)e(the)h(n)n(um)n
(b)r(er)g(of)f(leaf)2200 1295 y(no)r(des)27 b(visited)h(in)g(our)f
(algorithm.)2200 1469 y Fl(Pr)l(o)l(of.)43 b Fu(First)24
b(w)n(e)f(can)g(see)g(the)h(correctness)e(of)h(our)g(algorithm)2200
1569 y(b)n(y)42 b(lo)r(oking)e(at)i(the)g(leaf)g(no)r(de)f
Ft(u)3338 1539 y Fn(\003)3418 1569 y Fu(con)n(taining)g
Ft(p)3878 1539 y Fn(\003)3916 1569 y Fu(.)79 b(If)42
b Ft(u)4163 1539 y Fn(\003)2200 1669 y Fu(has)32 b(b)r(een)h(visited,)h
(our)e(algorithm)f(w)n(ould)h(set)h Ft(p)e Fi( )h Ft(p)3997
1639 y Fn(\003)4067 1669 y Fu(and)2200 1768 y(return)27
b(the)h(correct)f(solution)g(up)r(on)h(termination.)37
b(If)28 b Ft(u)4015 1738 y Fn(\003)4081 1768 y Fu(has)2200
1868 y(not)44 b(y)n(et)g(b)r(een)g(visited,)49 b(implying)44
b Ft(p)50 b Fi(6)p Fu(=)g Ft(p)3650 1838 y Fn(\003)3688
1868 y Fu(,)e(w)n(e)c(see)g(that)2200 1968 y Ft(\016)s
Fu(\()p Ft(p)2314 1937 y Fn(\003)2352 1968 y Ft(;)14
b(q)s Fu(\))24 b Fi(\024)e Ft(\016)s Fu(\()p Ft(u)2692
1937 y Fn(\003)2730 1968 y Ft(;)14 b(q)s Fu(\))24 b Fi(\024)e
Ft(\016)s Fu(\()p Ft(u;)14 b(q)s Fu(\))23 b Fi(\024)g
Ft(\016)s Fu(\()p Ft(p;)14 b(q)s Fu(\))19 b(+)f Ft(\017D)r(:)2350
2067 y Fu(No)n(w,)31 b(let)g Ft(u)f Fu(b)r(e)h(an)n(y)f(no)r(de)h(that)
g(is)f(extracted)g(from)h(the)2200 2167 y(queue.)36 b(Since)24
b(our)g(algorithm)f(do)r(es)i(not)f(do)g(another)g(extract)2200
2267 y(op)r(eration)31 b(un)n(til)i(it)g(reac)n(hes)e(a)h(leaf)h(no)r
(de)f(whic)n(h)g(has)g(depth)2200 2366 y Ft(O)r Fu(\()p
Ft(k)18 b Fu(log)2465 2386 y Fs(1)p Fm(=\014)2591 2366
y Ft(n)p Fu(\),)43 b(w)n(e)d(p)r(erform)g Ft(O)r Fu(\()p
Ft(k)18 b Fu(log)3466 2386 y Fs(1)p Fm(=\014)3592 2366
y Ft(n)p Fu(\))40 b(queue)h(inserts)2200 2466 y(p)r(er)i(leaf)g(no)r
(de)h(visited)f(and)g(one)g(extract)g(p)r(er)g(leaf)g(no)r(de.)2200
2565 y(If)38 b(w)n(e)f(use)g(a)g(Fib)r(onacci)h(heap,)h(although)e(in)h
(practice)f(this)2200 2665 y(w)n(ould)27 b(not)h(b)r(e)g(necessary)-7
b(,)26 b(insertions)h(tak)n(e)g Ft(O)r Fu(\(1\))h(amortized)2200
2765 y(time)47 b(and)f(extractions)f(tak)n(e)g Ft(O)r
Fu(\(log)15 b Ft(n)p Fu(\),)51 b(since)46 b(the)h(queue)2200
2864 y(has)34 b(size)f Ft(O)r Fu(\()p Ft(k)s(n)p Fu(\).)58
b(A)n(t)34 b(eac)n(h)g(split,)i(deciding)e(whic)n(h)g(no)r(de)g(is)2200
2964 y(farther)29 b(tak)n(es)g Ft(O)r Fu(\()p Ft(\015)5
b Fu(\))31 b(time)g(as)e(the)i(no)r(de)f(regions)e(ha)n(v)n(e)h
Ft(O)r Fu(\()p Ft(\015)5 b Fu(\))2200 3064 y(complexit)n(y)-7
b(.)33 b(Th)n(us,)21 b(if)e Ft(l)h Fu(is)e(the)h(n)n(um)n(b)r(er)f(of)h
(leaf)f(no)r(des)h(visited,)2200 3163 y(the)28 b(algorithm)f
(terminates)g(in)h Ft(O)r Fu(\()p Ft(k)s(l)r(\015)18
b Fu(log)3568 3183 y Fs(1)p Fm(=\014)3694 3163 y Ft(n)p
Fu(\))28 b(steps.)p 4045 3163 50 50 v 2200 3362 a Fx(3.2)95
b(P)m(ac)m(king)45 b(Constrain)m(t.)37 b Fu(Th)n(us,)j(as)d(in)h(the)g
(nearest-)2200 3462 y(neigh)n(b)r(or)51 b(algorithm)g(of)g(Ary)n(a)g
(et)h(al.,)58 b(if)52 b(w)n(e)g(can)f(limit)2200 3562
y(the)43 b(n)n(um)n(b)r(er)g(of)f(leaf)h(no)r(des)f(that)h(w)n(e)g
(need)f(to)h(visit,)k(the)2200 3661 y(running)27 b(time)g(w)n(ould)f(b)
r(e)h(kno)n(wn.)36 b(This)27 b(is)g(where)f(a)g(pac)n(king)2200
3761 y(constrain)n(t)h(comes)f(in.)2200 3935 y Fk(Lemma)31
b(3.2.)41 b Fu(\()p Fx(P)m(ac)m(king)53 b(Lemma)p Fu(\))44
b(Giv)n(en)g(a)h(BAR)g(tree)2200 4035 y(with)26 b(maxim)n(um)f(asp)r
(ect)g(ratio)f Ft(\013)i Fu(for)e(a)h(set)g Ft(S)30 b
Fu(of)25 b(data)g(p)r(oin)n(ts)2200 4134 y(in)43 b(I)-16
b(R)2387 4098 y Fm(d)2468 4134 y Fu(and)43 b(t)n(w)n(o)e(size)i
(parameters)d Ft(r)n(;)14 b(r)3544 4104 y Fn(0)3616 4134
y Ft(>)48 b Fu(0,)e(using)c(an)n(y)2200 4234 y(Mink)n(o)n(wski)e
(metric,)46 b Ft(L)2984 4246 y Fm(p)3022 4234 y Fu(,)f(there)c(are)g
Ft(O)r Fu(\(\()p Ft(\013)3651 4163 y Fi(p)p 3722 4163
44 4 v 3722 4234 a Ft(d)p Fu(\))3797 4204 y Fm(d)3836
4234 y Fu(\()p Ft(r)r(=r)3988 4204 y Fn(0)4013 4234 y
Fu(\))4045 4204 y Fm(d)p Fn(\000)p Fs(1)4169 4234 y Fu(\))2200
4334 y(leaf)c(no)r(des)f(whic)n(h)h(pierce)f(an)n(y)f(ann)n(ulus)i
(with)g(radii)f Ft(r)27 b Fu(+)d Ft(r)4177 4304 y Fn(0)2200
4433 y Fu(and)k Ft(r)r Fu(.)2200 4608 y Fl(Pr)l(o)l(of.)43
b Fu(Let)32 b Ft(l)h Fu(b)r(e)e(a)g(leaf)h(no)r(de)f(in)h(the)f(tree)g
(with)h(asso)r(ciated)2200 4707 y(region)46 b Ft(R)h
Fu(that)g(pierces)f(the)h(ann)n(ulus,)k Ft(A)p Fu(.)95
b(This)46 b(means)2200 4807 y(that)34 b(the)g(outer)f(radius)g
Ft(O)3077 4819 y Fm(R)3165 4807 y Fi(\025)f Ft(r)3301
4777 y Fn(0)3325 4807 y Fu(.)55 b(Since)34 b(the)g(region)e(is)i
Ft(\013)p Fu(-)2200 4907 y(balanced,)25 b(recall)f(that)h(the)g(inner)g
(radius)f(of)g Ft(R)q Fu(,)h Ft(I)3799 4919 y Fm(R)3877
4907 y Fi(\025)e Ft(O)4028 4919 y Fm(R)4083 4907 y Ft(=\013)p
Fu(.)2200 5006 y(W)-7 b(e)40 b(then)h(kno)n(w)e(that)h(the)h(v)n(olume)
e(of)h Ft(R)q Fu(,)j(in)d(an)n(y)f(metric,)2200 5106
y(is)i(greater)e(than)j(the)f(v)n(olume)g(of)g(the)g
Ft(L)3577 5118 y Fs(1)3655 5106 y Fu(h)n(yp)r(ersphere,)i(a)2200
5205 y(diamond)27 b(in)h(the)g(plane,)2270 5380 y Ft(V)2318
5392 y Fm(R)2395 5380 y Fi(\025)23 b Fu(\(2)p Ft(I)2593
5392 y Fm(R)2648 5380 y Ft(=)2690 5305 y Fi(p)p 2759
5305 V 75 x Ft(d)p Fu(\))2834 5346 y Fm(d)2896 5380 y
Fi(\025)f Fu(\(2)p Ft(O)3120 5392 y Fm(R)3175 5380 y
Ft(=)p Fu(\()p Ft(\013)3302 5305 y Fi(p)p 3371 5305 V
75 x Ft(d)q Fu(\)\))3479 5346 y Fm(d)3541 5380 y Fi(\025)h
Fu(\(2)p Ft(r)3742 5346 y Fn(0)3766 5380 y Ft(=)p Fu(\()p
Ft(\013)3893 5305 y Fi(p)p 3962 5305 V 75 x Ft(d)p Fu(\)\))4069
5346 y Fm(d)4108 5380 y Ft(;)2200 5554 y Fu(and)43 b(b)r(ecause)f(the)h
(ob)5 b(jects)43 b(are)e(con)n(v)n(ex,)46 b(the)d(in)n(tersection)2200
5654 y Ft(B)c Fu(=)c Ft(A)2478 5592 y Fh(T)2561 5654
y Ft(R)h Fu(has)e(v)n(olume)g Ft(V)3156 5666 y Fm(B)3249
5654 y Fi(\025)h Fu(\(2)p Ft(r)3462 5624 y Fn(0)3486
5654 y Ft(=)p Fu(\()p Ft(\013)3613 5583 y Fi(p)p 3682
5583 V 71 x Ft(d)p Fu(\)\))3789 5624 y Fm(d)3829 5654
y Fu(.)58 b(No)n(w,)37 b(in)2200 5753 y(an)n(y)i(metric,)44
b(the)c(v)n(olume)g(of)g(an)n(y)f(ann)n(ulus,)k Ft(A)p
Fu(,)h(of)c(radius)p eop
%%Page: 5 5
5 4 bop 3927 299 a Fu(5)-116 523 y Ft(r)23 b Fu(+)d Ft(r)68
493 y Fn(0)92 523 y Ft(;)14 b(r)34 b Fu(is)c(less)h(than)f(or)g(equal)g
(to)h(the)g(di\013erence)g(b)r(et)n(w)n(een)-116 623
y(the)49 b(v)n(olume)g(of)g(the)h(outer)e(and)h(inner)g(b)r(o)n(xes)f
(of)i(length)-116 722 y(2\()p Ft(r)29 b Fu(+)d Ft(r)154
692 y Fn(0)178 722 y Fu(\))40 b(and)g(2)p Ft(r)i Fu(resp)r(ectiv)n(ely)
-7 b(,)42 b(the)f Ft(L)1242 734 y Fn(1)1351 722 y Fu(metric.)74
b(Th)n(us,)-116 822 y Ft(V)-68 834 y Fm(A)36 822 y Fi(\024)50
b Fu(\(2)p Ft(r)32 b Fu(+)d(2)p Ft(r)469 792 y Fn(0)492
822 y Fu(\))524 792 y Fm(d)592 822 y Fi(\000)g Fu(\(2)p
Ft(r)r Fu(\))831 792 y Fm(d)921 822 y Fu(=)50 b(\(2)p
Ft(r)r Fu(\))1181 792 y Fm(d)1220 822 y Fu(\(\(1)29 b(+)g
Ft(r)1488 792 y Fn(0)1512 822 y Ft(=r)r Fu(\))1625 792
y Fm(d)1694 822 y Fi(\000)g Fu(1\).)-116 922 y(Since)46
b(the)g(leaf)f(no)r(des)g(do)h(not)f(o)n(v)n(erlap,)j(the)e(n)n(um)n(b)
r(er)g(of)-116 1021 y(leafs)j(no)r(des,)54 b Ft(L)p Fu(,)h(is)49
b(larger)f(than)h(the)h(ratio)e(of)i(the)f(t)n(w)n(o)-116
1121 y(v)n(olumes,)24 b Ft(L)e Fi(\024)h Ft(V)438 1133
y Fm(A)493 1121 y Ft(=V)583 1133 y Fm(B)663 1121 y Fi(\024)f
Fu(\()p Ft(\013)835 1050 y Fi(p)p 905 1050 44 4 v 905
1121 a Ft(d)p Fu(\))980 1091 y Fm(d)1019 1121 y Fu(\(\()p
Ft(r)r(=r)1203 1091 y Fn(0)1240 1121 y Fu(+)12 b(1\))1391
1091 y Fm(d)1441 1121 y Fi(\000)g Fu(\()p Ft(r)r(=r)1670
1091 y Fn(0)1694 1121 y Fu(\))1726 1091 y Fm(d)1765 1121
y Fu(\))23 b(=)-116 1220 y Ft(O)r Fu(\(\()p Ft(\013)66
1150 y Fi(p)p 137 1150 V 137 1220 a Ft(d)p Fu(\))212
1190 y Fm(d)251 1220 y Fu(\()p Ft(r)r(=r)403 1190 y Fn(0)427
1220 y Fu(\))459 1190 y Fm(d)p Fn(\000)p Fs(1)583 1220
y Fu(\).)p 676 1220 50 50 v 33 1395 a(Our)44 b(only)g(other)g(concern,)
k(then,)h(is)44 b(that)h(some)f(leaf)-116 1494 y(no)r(des)29
b(migh)n(t)h(not)g(con)n(tain)f(an)n(y)g(p)r(oin)n(ts,)h(as)g(w)n(e)f
(nev)n(er)g(made)-116 1594 y(this)c(stipulation)g(in)g(our)f(general)f
(framew)n(ork,)g(although)h(this)-116 1694 y(scenario)29
b(is)i(highly)g(unlik)n(ely)-7 b(.)46 b(This)31 b(problem)g(is)g(a)n(v)
n(erted)e(b)n(y)-116 1793 y(noticing)g(that)h(since)f(the)h(regions)e
(are)h(all)g Ft(k)s Fu(-cuttable,)h(there)-116 1893 y(are)21
b(at)i(most)f Ft(k)11 b Fi(\000)e Fu(1)22 b(regions)f(in)i(sequence)f
(that)h(can)f(b)r(e)h(empt)n(y)-7 b(,)-116 1993 y(as)30
b(after)g Ft(k)j Fu(cuts)e(t)n(w)n(o)f(regions)f(m)n(ust)i(b)r(oth)g
(ha)n(v)n(e)e(less)h(than)h(a)-116 2092 y Ft(\014)41
b Fu(fraction)36 b(of)h(the)h(p)r(oin)n(ts.)64 b(W)-7
b(e)38 b(then)f(defer)g(the)g(costs)f(for)-116 2192 y(an)28
b(empt)n(y)h(leaf)f(no)r(de)h(to)f(one)h(of)f(the)h(non-empt)n(y)f
(leaf)h(no)r(des)-116 2291 y(in)j(its)g(sibling's)f(region.)49
b(As)32 b(there)f(is)h(an)g(actual)f(split)h(after)-116
2391 y(ev)n(ery)d Ft(k)24 b Fi(\000)c Fu(1)31 b(cuts,)h(w)n(e)e(can)h
(ensure)f(that)i(no)e(leaf)h(no)r(de)g(gets)-116 2491
y(more)20 b(than)h Ft(k)j Fu(of)d(the)g(deferred)g(c)n(harges,)f(so)g
(the)i(running)e(time)-116 2590 y(increases)26 b(b)n(y)h(at)h(most)f(a)
g(factor)g(of)h Ft(k)s Fu(.)-116 2765 y Fk(Theorem)k(3.1.)40
b Fu(Supp)r(ose)59 b(w)n(e)g(are)f(giv)n(en)g(a)h(BAR)g(tree)-116
2864 y Ft(T)67 b Fu(with)57 b(depth)g Ft(O)r Fu(\()p
Ft(k)18 b Fu(log)747 2885 y Fs(1)p Fm(=\014)873 2864
y Ft(n)p Fu(\),)63 b(a)56 b(balancing)g(factor)f Ft(\013)p
Fu(,)-116 2964 y(and)42 b Ft(\015)47 b Fu(canonical)42
b(v)n(ectors,)i(on)f(a)f(p)r(oin)n(t)g(set)h Ft(S)k Fu(with)c(dia-)-116
3064 y(meter)48 b Ft(D)j Fu(and)d Ft(n)h Fu(data)f(p)r(oin)n(ts.)100
b(F)-7 b(or)48 b(an)n(y)g(query)f(p)r(oin)n(t)-116 3163
y Ft(q)s Fu(,)j(a)44 b(\(1)30 b Fi(\000)g Ft(\017)p Fu(\)-farthest)45
b(neigh)n(b)r(or)f(to)h Ft(q)j Fu(can)d(b)r(e)h(found)f(in)-116
3263 y Ft(O)r Fu(\()p Ft(k)27 3233 y Fs(2)65 3263 y Ft(\015)5
b Fu(\()p Ft(\013)198 3192 y Fi(p)p 267 3192 44 4 v 71
x Ft(d)p Fu(\))342 3233 y Fm(d)381 3263 y Fu(\(1)p Ft(=\017)p
Fu(\))563 3233 y Fm(d)p Fn(\000)p Fs(1)700 3263 y Fu(log)14
b Ft(n)p Fu(\))28 b(time.)-116 3437 y Fl(Pr)l(o)l(of.)43
b Fu(F)-7 b(or)56 b(an)n(y)f(leaf)i(no)r(de)f(visited,)64
b(but)57 b(the)g(last,)63 b Ft(u)p Fu(,)-116 3537 y Ft(\016)s
Fu(\()p Ft(u;)14 b(q)s Fu(\))23 b Ft(>)g(\016)s Fu(\()p
Ft(p;)14 b(q)s Fu(\))f(+)g Ft(\017D)r Fu(,)25 b(as)f(this)h(w)n(as)f
(the)h(halting)g(condition.)-116 3636 y(Also,)c(ev)n(ery)d(leaf)i(no)r
(de)g(visited,)h Ft(u)p Fu(,)g(whic)n(h)f(con)n(tained)f(a)g(p)r(oin)n
(t,)-116 3736 y Ft(p)-74 3706 y Fn(0)-51 3736 y Fu(,)29
b(had)g(to)g(ha)n(v)n(e)f Ft(\016)s Fu(\()p Ft(p)574
3706 y Fn(0)597 3736 y Ft(;)14 b(q)s Fu(\))26 b Fi(\024)f
Ft(\016)s Fu(\()p Ft(p;)14 b(q)s Fu(\))29 b(b)n(y)g(the)g(fact)h(that)f
Ft(p)g Fu(w)n(as)-116 3836 y(the)j(farthest)g(p)r(oin)n(t)g(found.)50
b(Th)n(us,)32 b(similar)f(to)h(the)g(metho)r(d)-116 3935
y(of)f(Ary)n(a)f(et)h(al.)g([5)o(],)i(w)n(e)d(kno)n(w)g(that)i(ev)n
(ery)e(no)r(de)h(con)n(taining)-116 4035 y(a)24 b(p)r(oin)n(t)h
(visited)g(b)n(y)f(the)h(algorithm)f(m)n(ust)h(completely)f(pierce)-116
4134 y(the)30 b(ann)n(ulus)f(of)h(radii)f Ft(\016)s Fu(\()p
Ft(p;)14 b(q)s Fu(\))31 b(and)e Ft(\016)s Fu(\()p Ft(p;)14
b(q)s Fu(\))21 b(+)e Ft(\017D)r Fu(,)30 b(i.e.)44 b(lie)30
b(on)-116 4234 y(b)r(oth)36 b(sides)g(of)g(this)h(ann)n(ulus.)62
b(Since)36 b(the)h(diameter)e(of)h(the)-116 4334 y(p)r(oin)n(t)30
b(set)g(is)f Ft(S)5 b Fu(,)30 b(ev)n(ery)f(leaf)h(no)r(de)f(con)n
(taining)g(a)h(p)r(oin)n(t)g(m)n(ust)-116 4433 y(also)j(lie)i(at)f
(least)g(partly)g(inside)h(a)f(ball)g(of)g(radius)g Ft(D)r
Fu(.)58 b(An)n(y)-116 4533 y(leaf)34 b(no)r(de)g(piercing)f(the)h
(original)f(ann)n(ulus,)i(therefore,)g(also)-116 4633
y(pierces)d(an)h(ann)n(ulus)g(with)h(radii)f Ft(D)i Fu(and)f
Ft(D)r Fu(\(1)22 b(+)g Ft(\017)p Fu(\).)54 b(In)33 b(ap-)-116
4732 y(plying)f(the)h(P)n(ac)n(king)d(Lemma)i(\(3.2\),)i(Lemma)e(3.1,)h
(and)f(our)-116 4832 y(comp)r(ensation)k(for)g(empt)n(y)g(leaf)h(no)r
(des,)h(w)n(e)f(get)f(a)g(running)-116 4932 y(time)k(of)f
Ft(O)r Fu(\()p Ft(k)s(\015)19 b Fu(log)504 4952 y Fs(1)p
Fm(=\014)629 4932 y Ft(n)27 b Fi(\003)f Fu(\()p Ft(\013)859
4861 y Fi(p)p 928 4861 V 71 x Ft(d)q Fu(\))1004 4901
y Fm(d)1043 4932 y Fu(\()p Ft(D)r(=)p Fu(\()p Ft(\017D)r
Fu(\)\))1389 4901 y Fm(d)p Fn(\000)p Fs(1)1539 4932 y
Fi(\003)g Ft(k)s Fu(\),)43 b(and)-116 5031 y(the)28 b(stated)f(b)r
(ound)h(follo)n(ws.)p 837 5031 50 50 v -116 5230 a Fx(4)95
b(Corner-Cut)32 b(BAR)f(T)-8 b(rees)-116 5355 y Fu(W)h(e)24
b(no)n(w)f(sho)n(w)g(a)h(sp)r(eci\014c)g(instance)f(of)h(a)g(BAR)g
(tree.)35 b(Ideally)-7 b(,)-116 5455 y(in)26 b(constructing)f(a)g(BAR)h
(tree)f(w)n(e)h(w)n(ould)f(prefer)g(to)h(use)f(only)-116
5554 y(axis-parallel)34 b(cuts,)40 b(but)d(this)g(is)g(not)g(p)r
(ossible.)64 b(If,)40 b(for)c(ex-)-116 5654 y(ample,)26
b(the)h(v)-5 b(ast)25 b(ma)5 b(jorit)n(y)25 b(of)h(the)h(p)r(oin)n(ts)f
(are)f(concen)n(trated)-116 5753 y(at)43 b(a)h(particular)e(corner)h
(of)g(a)h(h)n(yp)r(erb)r(o)n(x)f(region,)j(cutting)2151
1385 y @beginspecial 34 @llx 446 @lly 518 @urx 726 @ury
1133 @rhi @setspecial
%%BeginDocument: fig/F2.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Cricket Draw III
%%Title: F2
%%BoundingBox: 34 446 518 726 
%%DocumentData: Clean7Bit
%%CreationDate: 7/5/98 11:42 PM
%%DocumentFonts: Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%ColorUsage: Color
%%EndComments
200 dict begin
%%BeginProlog
/FindFlatness %% Proc -- %%
{
{
dup 
{flattenpath exec} stopped
{
pop currentflat 100 ge {exit} if 
currentflat 1.25 mul setflat
}
{exit} ifelse
} bind loop
pop
newpath
} def
/QDShow %% string qdwidth -- %%
{
1 index length 1 le
{
pop show
}
{
1 index stringwidth pop sub 1 index length 1 sub div 0 3 -1 roll ashow
} ifelse
} def
/PathText %% string offset -- %%
{
/cd_FM true def
/cd_offset exch def
/cd_string exch def
/cd_offset cd_offset cd_string 0 1 getinterval stringwidth pop 2 div add def
/cd_pathdist 0 def 
/cd_setdist cd_offset def
/cd_charcount 0 def
gsave
flattenpath 
{mtp}{ltp}{ctp}{cpp}pathforall 
grestore
} bind def
/mtp 
{
/cd_newy exch def
/cd_newx exch def
/cd_firstx cd_newx def
/cd_firsty cd_newy def
/cd_ovr 
cd_FM 
{cd_offset /cd_FM false def}
{0} ifelse 
def 
cd_newx cd_newy transform 
/cd_cpy exch def
/cd_cpx exch def
}bind def
/ltp 
{
/cd_oldx cd_newx def
/cd_oldy cd_newy def
/cd_newy exch def
/cd_newx exch def
/cd_dx cd_newx cd_oldx sub def
/cd_dy cd_newy cd_oldy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt def 
cd_dist 0 ne
{
/cd_dsx cd_dx cd_dist div cd_ovr mul def 
/cd_dsy cd_dy cd_dist div cd_ovr mul def 
cd_oldx cd_dsx add cd_oldy cd_dsy add transform
/cd_cpy exch def
/cd_cpx exch def
/cd_pathdist cd_pathdist cd_dist add def
{
cd_setdist cd_pathdist le
{
cd_charcount cd_string length lt
{setchar}
{exit} ifelse
}
{
/cd_ovr cd_setdist cd_pathdist sub def
exit
} ifelse
}loop
} if
} bind def
/cpp 
{
cd_firstx cd_firsty ltp 
cd_firstx cd_firsty mtp
} bind def 
/setchar 
{
/cd_char cd_string cd_charcount 1 getinterval def
/cd_charcount cd_charcount 1 add def
/cd_charwidth cd_char stringwidth pop 2 div def 
gsave
cd_cpx cd_cpy itransform translate
cd_dy cd_dx atan rotate 
cd_charwidth neg 0 moveto 
cd_char 
cd_setdist 0 lt 
{stringwidth pop 0 rmoveto}
{show} ifelse
cd_charcount cd_string length lt
{
cd_string cd_charcount 1 getinterval stringwidth pop 2 div 0 rmoveto
} if
currentpoint transform 
/cd_cpy exch def 
/cd_cpx exch def 
grestore
/cd_setdist cd_setdist cd_charwidth add def
/cd_pathoffset cd_pathoffset cd_charwidth 2 mul add store
cd_charcount cd_string length lt
{
/cd_setdist cd_setdist cd_string cd_charcount 1 getinterval stringwidth pop 2 div add def
} if
} bind def
/OffsetCalc
{
/cd_textlength exch def
/cd_just exch def
/cd_dist 0 def
gsave
flattenpath
{
/cd_newy exch def 
/cd_newx exch def
/cd_firsty cd_newy def
/cd_firstx cd_newx def
}
{
/cd_oldy exch def
/cd_oldx exch def
/cd_dx cd_oldx cd_newx sub def 
/cd_dy cd_oldy cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
/cd_newx cd_oldx def
/cd_newy cd_oldy def
}
{
}
{
/cd_dx cd_firstx cd_newx sub def
/cd_dy cd_firsty cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
}
pathforall
cd_just 0 eq
{
/cd_pathoffset 0 store
} if
cd_just 1 eq
{
/cd_pathoffset cd_dist cd_textlength sub 2 div store
}if
cd_just 2 eq
{
/cd_pathoffset cd_dist cd_textlength sub store
}if
grestore
} bind def
/MakeUnderlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
20 dict begin
exch /BaseFont exch findfont def
/uniqueid 
BaseFont dup /UniqueID known 
{/UniqueID get 1 add}
{pop 1} ifelse
def
/FontType 3 def
/Upos 
BaseFont /FontInfo 2 copy known
{
get /UnderlinePosition 2 copy known
{get}
{pop pop -100 }ifelse
}
{ pop pop -100 }ifelse 
def
/Uwid 
BaseFont /FontInfo 2 copy known
{
get /UnderlineThickness 2 copy known
{get}
{pop pop 50} ifelse
}
{pop pop 50} ifelse
def
/FontMatrix BaseFont /FontMatrix get def
/FontBBox BaseFont /FontBBox get
dup 1 get Upos gt
{
dup 1 Upos put
}if
def
/Encoding BaseFont /Encoding get def
/theChar 1 string def
/BuildChar
{
exch
begin
theChar 0 3 -1 roll put
BaseFont 1000 scalefont setfont
theChar stringwidth FontBBox setcachedevice
0 0 moveto
theChar show
0 Upos rmoveto 0 Upos lineto
Uwid setlinewidth stroke
end
} def
currentdict 
end
definefont pop
} ifelse
} def
/MakeOutlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
/pathwidth 1000 24 div def 
/newfontname exch def 
/basefontname exch def 
/uniqueid 
basefontname findfont dup /UniqueID known 
{
/UniqueID get 1 add
}
{
pop 1
}ifelse
def
/BaseFont basefontname findfont def 
/numentries BaseFont maxlength 1 add def 
BaseFont /UniqueID known not
{
/numentries numentries 1 add def
} if
/NewFont numentries dict def 
BaseFont
{ 
exch dup /FID ne
{exch NewFont 3 1 roll put}
{pop pop} ifelse
}forall
NewFont /FontName newfontname put
NewFont /PaintType 2 put
NewFont /StrokeWidth pathwidth put
NewFont /UniqueID uniqueid put
newfontname NewFont definefont pop
}ifelse
}def
/macvec dup where not 
{ 256 array def
macvec 0 StandardEncoding
0 128 getinterval putinterval
macvec 16#27 /quotesingle put
macvec 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Aacute /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Agrave
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
macvec 128 128 getinterval astore pop
}
{pop pop} ifelse
/CreateFontDict 
{
dup length dict
/cd_NewFontDict exch def
{
1 index
/FID ne
{
cd_NewFontDict 3 1 roll put
}
{
pop pop
} ifelse
} forall
cd_NewFontDict
} def
/CoordinateFont 
{
dup 
/cd_FontString exch def 
length 7 add string
/cd_CoFontString exch def
cd_CoFontString 0 (|______) putinterval cd_CoFontString 7 cd_FontString putinterval
/cd_FontName cd_CoFontString cvn def 
FontDirectory cd_FontName known not
{
cd_FontString cvn findfont CreateFontDict
/cd_NewFontDict exch def
cd_NewFontDict dup 
/FontName cd_FontName put 
/Encoding macvec put
cd_FontName cd_NewFontDict definefont pop
} if
} def
/cd_defaultscreen [ currentscreen ] def
/SetDefaultScreen
{
cd_defaultscreen aload pop setscreen
} def
/Default
{
cd_defaultscreen 2 get exec
} def
/WhiteDot 
{
dup mul exch dup mul add 1 sub
} bind def
/BlackDot 
{
dup mul exch dup mul add 1 exch sub
} bind def
/HLines 
{
exch pop abs 1 exch sub
} bind def
/VLines 
{
pop abs 2 mul 1 exch sub
} bind def
/Poster
{
{
dup 0.5 lt 
{
dup 0.3 gt 
{pop 0.4} 
{0.1 gt 
{0.2} 
{0.0} ifelse
} ifelse
}
{
dup 0.7 lt 
{pop 0.6} 
{
0.9 lt 
{0.8} 
{1.0} ifelse
} ifelse
} ifelse
} settransfer
} def 
/Ellipse 
{
dup mul .625 mul exch dup mul add 1 exch sub
} bind def
/Square 
{
abs exch abs 2 copy gt{exch} if pop
} bind def
/Diamond 
{
abs exch abs add 1 exch sub
} bind def
/BlackCircle 
{
dup mul exch dup mul add 0.6 exch sub abs -0.5 mul
} bind def
/WhiteCircle 
{
dup mul exch dup mul add 0.6 exch sub abs 0.5 mul
} bind def
/Triangle 
{
2 exch sub exch abs 2 mul sub 3 div
} bind def
/Grid 
{
2 copy abs exch abs gt {exch} if pop 2 mul 1 exch sub 3.5 div
} bind def
/Ripples 
{
/wy exch def 180 mul cos 2 div wy dup dup dup mul mul sub mul wy add 180 mul cos
} bind def
/Star 
{
abs exch abs 2 copy gt {exch} if 1 sub dup 0 eq {0.01 add} if atan 360 div
} bind def
/max
{
2 copy lt{exch}if pop
} def
/min
{
2 copy gt{exch}if pop
} def
/concatprocs %% Proc1 Proc2 -- Proc1Proc2 %%
{
/Proc1 exch cvlit def
/Proc2 exch cvlit def
/NewProc Proc1 length Proc2 length add array def
NewProc 0 Proc1 putinterval
NewProc Proc1 length Proc2 putinterval
NewProc cvx
} def
/ndf %% key value -- %%
{
1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse
} def
/setcmykcolor %% Cyan Magenta Yellow Black -- %%
{
1 exch sub 3 {dup 5 -1 roll sub 0 max exch} repeat pop setrgbcolor
} ndf
/findcmykcustomcolor %% Cyan Magenta Yellow Black SpotName -- Object %%
{
[ 6 1 roll ] 
} ndf
/setcustomcolor %% object tint -- %%
{
/cd_tint exch def
0 4 getinterval
{ cd_tint mul } forall
setcmykcolor
} ndf
/cmyktorgb %% Cyan Magenta Yellow Black -- Red Green Blue %%
{
3 {dup 5 -1 roll add dup 1 gt {pop 1} if 1 exch sub exch} repeat pop
} def
/rgbtocmyk %% Red Green Blue -- Cyan Magenta Yellow Black %%
{
3 {3 -1 roll 1 exch sub} repeat
3 copy min min 
3 {4 -1 roll 1 index sub exch} repeat
} def
/cmyktohls %% Cyan Magenta Yellow Black -- Hue Lightness Saturation %%
{
cmyktorgb
3 copy min min 4 1 roll
3 copy max max 5 -1 roll
2 copy add 2 div 6 1 roll
2 copy eq 
{
5 {pop} repeat
0 exch 0
}
{
5 index
0.5 le
{
2 copy 2 copy
sub 3 1 roll
add div
}
{
2 copy 2 copy
sub 2 exch sub 3 1 roll
sub exch div 
} ifelse
6 1 roll
2 copy sub
5 index 3 index eq
{
3 1 roll pop pop
4 -3 roll sub exch pop exch div
}
{
4 index 3 index eq
{
3 1 roll pop pop
4 -3 roll exch pop exch sub 2 add exch div
}
{
3 1 roll pop pop
4 -3 roll pop sub 4 add exch div
} ifelse
} ifelse
60 mul dup 0 lt {360 add} if
3 1 roll
} ifelse
} def
/value
{
dup 360 gt {360 sub} if
dup 0 lt {360 add} if
dup
60 lt 
{
60 div 3 1 roll 2 copy sub 4 -1 roll mul add exch pop
}
{
dup 180 lt
{
pop pop
}
{
dup 240 lt
{
240 exch sub 60 div
3 copy pop sub mul add exch pop
}
{
pop exch pop
} ifelse
} ifelse
} ifelse
} def
/hlstocmyk %% Hue Lightness Saturation -- Cyan Magenta Yellow Black %%
{
dup 0 eq
{
pop exch pop dup dup
}
{
1 index 0.5 le
{
2 copy 1 add mul
}
{
2 copy 2 copy add 3 1 roll mul sub
} ifelse
2 index 1 index sub 2 mul
5 -3 roll pop pop
3 copy 120 add value 4 1 roll
3 copy value 4 1 roll
120 sub value 
} ifelse
rgbtocmyk
} def
/D3PathProc %% PathArray -- %%
{
{
dup length
dup 6 eq
{ pop aload pop curveto }
{ 
dup 2 eq
{ pop aload pop lineto }
{
3 eq
{ aload pop pop moveto }
{ pop closepath } ifelse
} ifelse
} ifelse
} forall
} def
/fntnIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
fntnBColor length 6 eq
{
fntnMix 0 eq
{
2 index sub 3 -2 roll exch sub div
}
{
3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get
} ifelse
fntnEColor 5 get fntnBColor 5 get sub mul fntnBColor 5 get add
fntnBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq fntnMix 0 eq and
{ pop pop pop fntnBColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
dup 2 index eq fntnMix 0 eq and
{ pop pop pop fntnEColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
fntnMix 0 eq
{ 2 index sub 3 -2 roll exch sub div }
{ 3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get } ifelse
dup fntnBColor 0 get fntnEColor 0 get 1 index sub 3 -1 roll mul add exch
dup fntnBColor 1 get fntnEColor 1 get 1 index sub 3 -1 roll mul add exch
fntnModel 0 eq
{
dup fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add exch
fntnBColor 3 get fntnEColor 3 get 1 index sub 3 -1 roll mul add
}
{
fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/fntnlinear %% DirectionData -- %%
{
aload pop
/stop [ 4 -2 roll] def
pop pop 4 2 roll
/start [ 4 -2 roll] def
start 1 get sub exch 
start 0 get sub
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
newpath
start aload pop
moveto
stop aload pop
lineto
stroke
1 index 1 index
translate
} for
pop pop
} def
/fntnecho %% DirectionData -- %%
{
aload
5 {pop} repeat
2 index sub exch 4 -1 roll sub
3 -1 roll pop
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
D3ObjectProc closepath
/stroke load FindFlatness
1 index 1 index
translate
} for
pop pop
} def
/fntnradial %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
translate
gsave
fntnBRadius fntnERadius fntnBRadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor 
newpath 0 0 3 -1 roll 0 360 arc
/stroke load FindFlatness
} for
} def
/fntnshape %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
D3ObjectProc pathbbox
2 index add 2 div exch
4 -2 roll pop add 2 div exch
/objCX 2 index def /objCY 1 index def
2 index sub exch 
4 -2 roll pop sub fntnSteps div neg exch
fntnSteps div neg
gsave
fntnBRadius fntnERadius fntnERadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor
gsave
objCX objCY 
translate
fntnERadius dup 3 -1 roll sub exch div dup
scale
objCX neg objCY neg 
translate
D3ObjectProc
/eofill load FindFlatness
grestore
1 index 1 index
translate
} for
2 {pop} repeat
} def
/fntn %% OffsetData Grain Steps Startcolor Endcolor Buffer Mix Model Style -- %%
{ 
/fntnStyle exch def
/fntnModel exch def
/fntnMix exch def
/fntnBuf exch def
fntnModel 0 eq
{
/fntnEColor exch def
/fntnBColor exch def
}
{
/fntnEColor [ 3 -1 roll aload pop cmyktohls ] def
/fntnBColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
/fntnSteps exch def
/fntnGrain exch def
fntnGrain setlinewidth
fntnStyle 0 eq {fntnlinear}
{ fntnStyle 1 eq {fntnecho} 
{ fntnStyle 2 eq {fntnradial} 
{fntnStyle 3 eq {fntnshape} 
{ pop } ifelse
} ifelse
} ifelse
} ifelse
} def 
/shdwIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
shdwBColor length 6 eq
{
2 index sub 3 -2 roll exch sub div
shdwEColor 5 get shdwBColor 5 get sub mul shdwBColor 5 get add
shdwBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq
{ pop pop pop shdwBColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
dup 2 index eq 
{ pop pop pop shdwEColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
2 index sub 3 -2 roll exch sub div
dup shdwBColor 0 get shdwEColor 0 get 1 index sub 3 -1 roll mul add exch
dup shdwBColor 1 get shdwEColor 1 get 1 index sub 3 -1 roll mul add exch
shdwModel 0 eq
{
dup shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add exch
shdwBColor 3 get shdwEColor 3 get 1 index sub 3 -1 roll mul add
}
{
shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/shdwdrop %% -- %%
{
shdwDColor length 6 eq
{
shdwDColor aload pop
/cd_tint exch def
findcmykcustomcolor cd_tint setcustomcolor
D3ObjectProc shdwOp
}
{
shdwDColor aload 
length 0 gt
{
shdwModel 0 ne { hlstocmyk } if
setcmykcolor
D3ObjectProc shdwOp
} if
} ifelse
} def
/shdwfull %% -- %%
{
shdwLength shdwAngle cos mul shdwSteps div neg
shdwLength shdwAngle sin mul shdwSteps div neg
0 shdwGrain dup shdwSteps 1 sub mul 
{
dup 0 eq 
{pop shdwdrop}
{
0 shdwGrain shdwSteps mul 3 -1 roll shdwIncColor
D3ObjectProc shdwOp
} ifelse
1 index 1 index
translate
} for
pop pop
} def
/shdw %% StartRGB EndRGB DropRGB Steps Grain Length Angle Mix Model Style -- %%
{
/shdwStyle exch def
/shdwModel exch def
/shdwMix exch def
/shdwAngle exch def
/shdwLength exch def
/shdwGrain exch def
/shdwSteps exch def
shdwModel 0 eq
{
/shdwDColor exch def
/shdwBColor exch def
/shdwEColor exch def
}
{
/shdwDColor [ 3 -1 roll aload length 0 gt {cmyktohls} if ] def
/shdwBColor [ 3 -1 roll aload pop cmyktohls ] def
/shdwEColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
shdwSteps 0 ne shdwLength 0 ne and
{
gsave
shdwLength shdwAngle cos mul 
shdwLength shdwAngle sin mul
translate
shdwStyle 0 eq
{ shdwdrop }
{ shdwfull } ifelse
grestore
} if
} def
/colorimage %% width height bitspersample matrix proc xxx numplanes --
{
3 ne {exit} if
{exit} if
pop
{
currentfile cd_ImageStr readhexstring pop /cd_string exch def
0 1 cd_string length 3 div 1 sub
{
dup 3 mul
dup cd_string exch get 6 mul exch
dup 1 add cd_string exch get 3 mul exch 
2 add cd_string exch get
add add 10 div round cvi
cd_string 3 1 roll put
} for
cd_string dup length 3 idiv 0 exch getinterval
}
image
} ndf
/ReadToAsterick %% --
{
/cd_String 1 string def
0
{
currentfile cd_String readstring not {pop exit} if
0 get dup 42 eq 
{ 
pop 1 eq 
{ 
(BitMap Error: To much data) ==
} if 
exit
} 
{
32 gt 
{pop 1} if 
} ifelse
} loop
} def
/D3ImageProc %% Width Height -- %%
{
/cd_ImageStr 2 index 7 add 8 idiv string def
true
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
imagemask
ReadToAsterick
} def
/D3ColorImageProc %% Width Height BitsPerSample -- %%
{
/cd_ImageStr 3 index 8 3 index idiv dup 1 sub 3 -1 roll add exch idiv 3 mul string def
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
false 3
colorimage
ReadToAsterick
} def
%%EndProlog
%% -------- Begin Program --------- %%
systemdict /setpacking known
{
true setpacking
} if
2 setlinecap
0 setlinejoin

(Times-Roman) CoordinateFont
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [292 677 0 ] put
D3PathArray 1 [437 677 ] put
D3PathArray 2 [437 495 ] put
D3PathArray 3 [292 495 ] put
D3PathArray 4 [292 677 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [300.5 725 0 ] put
D3PathArray 1 [373 670.5 ] put
D3PathArray 2 [302 575 ] put
D3PathArray 3 [252 663 ] put
D3PathArray 4 [300.5 725 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [336.5 698 0 ] put
D3PathArray 1 [371 712.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [437 677 0 ] put
D3PathArray 1 [516.5 712.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [437 495 0 ] put
D3PathArray 1 [516.5 531 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [335.5 676.5 0 ] put
D3PathArray 1 [292.5 633 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
2 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [124 716 0 ] put
D3PathArray 1 [35.5 627.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 1 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [372 712 0 ] put
D3PathArray 1 [372 530.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [372 531 0 ] put
D3PathArray 1 [515.5 531 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [516.5 712.5 0 ] put
D3PathArray 1 [516.5 530.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [371 712.5 0 ] put
D3PathArray 1 [516.5 712.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [335.5 677 0 ] put
D3PathArray 1 [363 677 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [292 633 0 ] put
D3PathArray 1 [292 595 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [372 531 0 ] put
D3PathArray 1 [292 495.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [316 688.5 0 ] put
D3PathArray 1 [336.5 698 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [317.5 688.5 0 ] put
D3PathArray 1 [335.5 677 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
2 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [316 688.5 0 ] put
D3PathArray 1 [292 633 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
2 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 7 array def
D3PathArray 0 [61 652.75 0 ] put
D3PathArray 1 [61.25 512.25 ] put
D3PathArray 2 [206 512.25 ] put
D3PathArray 3 [206 694 ] put
D3PathArray 4 [101.75 694 ] put
D3PathArray 5 [61 652.75 ] put
D3PathArray 6 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [106.25 693.75 0 ] put
D3PathArray 1 [61.501 693.75 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [61.5 652 0 ] put
D3PathArray 1 [61.5 693.25 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 121.5 466.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(a\)) 13 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 369.5 466.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(b\)) 14 QDShow
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 1968 1642 a(Figure)29 b(1:)40 b Fg(The)28
b(notion)e(of)j(co)n(rner)f(cuts.)40 b(\(a\))27 b(A)g(co)n(rner)i(cut)d
(in)h(the)1968 1734 y(plane.)33 b(\(b\))25 b(A)h(co)n(rner)g(cut)f(in)g
(3-)p Fw(d)p Fg(.)1968 1996 y Fu(along)f(an)n(y)h(face)h(forces)f(the)h
(next)h(cut)f(to)g(either)f(b)r(e)i(to)r(o)e(close)1968
2096 y(to)k(the)g(opp)r(osing)f(face)h(or)g(not)g(divide)g(a)g
(signi\014can)n(t)f(p)r(ortion)1968 2195 y(of)j(the)i(p)r(oin)n(ts)e
(in)h(the)h(region,)e(resulting)h(in)g(an)f(un)n(balanced)1968
2295 y(depth.)37 b(Our)27 b(solution)f(is)h(to)g(in)n(tro)r(duce)g(a)g
(simple)g(corner)f(cut)1968 2395 y(that)32 b(yields)g(enough)g(freedom)
f(of)h(direction)g(to)g(construct)g(a)1968 2494 y(BAR)27
b(tree.)1968 2671 y Fk(Definition)32 b(4.1.)40 b Fu(A)d
Fl(c)l(orner)i(cut)d Fu(in)i(I)-16 b(R)3322 2634 y Fm(d)3398
2671 y Fu(is)37 b(a)f(h)n(yp)r(erplane)1968 2770 y(whose)21
b(normal)h(v)n(ector)f(is)h(of)h(the)g(form)f(\()p Ft(I)3293
2782 y Fs(0)3331 2770 y Ft(;)14 b(I)3404 2782 y Fs(1)3442
2770 y Ft(;)g(:)g(:)g(:)f(;)h(I)3662 2782 y Fm(d)3701
2770 y Fu(\))23 b(where)1968 2870 y Ft(I)2004 2882 y
Fm(i)2055 2870 y Fi(2)g(f)p Fu(1)p Ft(;)14 b Fi(\000)p
Fu(1)p Fi(g)p Fu(.)2117 3046 y(Notice)24 b(that)g(there)f(are)g(2)2935
3016 y Fm(d)2997 3046 y Fu(p)r(ossible)h(corner)e(cuts)i(corres-)1968
3146 y(p)r(onding)h(to)g(all)g(com)n(binations)f(of)h
Fi(\006)p Fu(1.)35 b(In)25 b(the)h(plane,)f(suc)n(h)g(a)1968
3245 y(cut)k(forms)f(a)g(45)2496 3215 y Fn(\016)2562
3245 y Fu(angle)g(with)h(b)r(oth)g(the)h(x-)e(and)g(y-axes)g(\(see)1968
3345 y(Figure)37 b(1\).)70 b(The)38 b(adv)-5 b(an)n(tage)37
b(to)i(using)f(these)g(corner)f(cuts)1968 3445 y(will)29
b(so)r(on)g(b)r(ecome)g(apparen)n(t.)42 b(Let)30 b(us)f(therefore)g
(sho)n(w)f(ho)n(w)1968 3544 y(to)37 b(use)g(suc)n(h)h(cuts)f(to)h
(de\014ne)g(a)f(canonical)f(cut)i(set)g(that)g(is)1968
3644 y(su\016cien)n(t)27 b(for)g(constructing)g(an)g(e\016cien)n(t)h
(BAR)g(tree.)2117 3744 y Fx(Canonical)46 b(Cut)h(Set:)39
b Fu(De\014ne)i(a)f(sp)r(eci\014c)g Fl(c)l(anonic)l(al)1968
3843 y(set)p Fu(,)59 b Fi(C)5 b Fu(,)59 b(to)53 b(b)r(e)h(the)g(set)f
(of)g(all)g(cuts)g(whic)n(h)g(are)g(either)1968 3943
y(axis-parallel)42 b(or)h(corner)g(cuts,)49 b(in)c(other)f(w)n(ords,)j
(all)d(cuts)1968 4042 y(whose)58 b(normal)g(is)g(of)h(the)g(form)g(\(0)
p Ft(;)14 b Fu(0)p Ft(;)g(:)g(:)g(:)f(;)h Fu(1)p Ft(;)g(:)g(:)g(:)f(;)h
Fu(0\))58 b(or)1968 4142 y(\()p Ft(I)2036 4154 y Fs(0)2074
4142 y Ft(;)14 b(I)2147 4154 y Fs(1)2184 4142 y Ft(;)g(:)g(:)g(:)g(;)g
(I)2405 4154 y Fm(d)2444 4142 y Fu(\))38 b(where)f Ft(I)2800
4154 y Fm(i)2868 4142 y Fi(2)k(f)p Fu(1)p Ft(;)14 b Fi(\000)p
Fu(1)p Fi(g)p Fu(.)65 b(Let)38 b Fi(C)3530 4112 y Fn(0)3590
4142 y Fu(b)r(e)g(the)h(set)1968 4242 y(of)c(axis-parallel)f(cuts)h
(and)h Fi(C)2945 4212 y Fn(00)3023 4242 y Fu(b)r(e)g(the)g(set)f(of)h
(corner)e(cuts.)1968 4341 y(So,)27 b Ft(C)i Fu(=)23 b
Ft(C)2347 4311 y Fn(0)2384 4279 y Fh(S)2467 4341 y Ft(C)2532
4311 y Fn(00)2575 4341 y Fu(.)2117 4441 y(F)-7 b(or)19
b(a)h(region)f Ft(R)q Fu(,)i(canonical)e(with)i(resp)r(ect)e(to)h
Fi(C)5 b Fu(,)22 b(consider)1968 4541 y(a)f(direction)g(v)n(ector)c
Ft(~)-39 b(v)2654 4553 y Fm(i)2705 4541 y Fi(2)24 b(C)5
b Fu(.)34 b(Let)22 b Fj(width)3251 4553 y Fm(i)3279 4541
y Fu(\()p Ft(R)q Fu(\))g(b)r(e)g(the)g(distance)1968
4640 y(b)r(et)n(w)n(een)e(the)g(t)n(w)n(o)f(b)r(ounding)i(canonical)d
(cuts)j(of)f Ft(R)h Fu(normal)e(to)1964 4740 y Ft(~)-38
b(v)2008 4752 y Fm(i)2036 4740 y Fu(.)35 b(F)-7 b(or)22
b(simplicit)n(y)-7 b(,)24 b(let)f(us)f(normalize)g(the)h(distance)g(b)r
(et)n(w)n(een)1968 4839 y(t)n(w)n(o)42 b(opp)r(osing)h(planes)g(b)n(y)g
(using)g(the)h Ft(L)3355 4851 y Fn(1)3469 4839 y Fu(metric.)84
b(In)44 b(a)1968 4939 y(region)32 b Ft(R)q Fu(,)k(this)e(means)g(that)h
(for)e(t)n(w)n(o)h(b)r(ounding)g(canonical)1968 5039
y(corner)24 b(cuts)h Ft(p)g Fu(and)h Ft(q)i Fu(with)e(normal)c
Ft(~)-39 b(v)3192 5051 y Fm(i)3245 5039 y Fu(whose)25
b(equations)g(are)1968 5138 y(of)38 b(the)h(form)f Ft(p)j
Fu(:)d Ft(~)-38 b(v)2622 5150 y Fm(i)2648 5138 y Ft(~)d(x)42
b Fu(=)f Ft(a)e Fu(and)f Ft(q)44 b Fu(:)38 b Ft(~)-38
b(v)3285 5150 y Fm(i)3311 5138 y Ft(~)d(x)42 b Fu(=)f
Ft(b)p Fu(,)g(the)e(width)1968 5247 y Fj(width)2186 5259
y Fm(i)2213 5247 y Fu(\()p Ft(R)q Fu(\))24 b(=)2462 5206
y Fn(j)p Fm(a)p Fn(\000)p Fm(b)p Fn(j)p 2462 5228 157
4 v 2523 5275 a Fm(d)2656 5247 y Fu(\(see)k(Figure)f(2.a\).)2117
5346 y(Notice,)51 b(since)45 b(the)h(normal)f(v)n(ector)g(to)g(a)h
(corner)e(cut)1968 5446 y(forms)25 b(a)h(45)2347 5416
y Fn(\016)2411 5446 y Fu(angle)f(with)i(eac)n(h)e(axis,)h(the)h
(regular)d(Euclidean)1968 5554 y(distance)30 b(b)r(et)n(w)n(een)h(the)g
(planes)f(is)3118 5514 y Fn(j)p Fm(a)p Fn(\000)p Fm(b)p
Fn(j)p 3118 5535 V 3179 5583 a Fm(d)3284 5483 y Fi(p)p
3354 5483 44 4 v 3354 5554 a Ft(d)p Fu(.)46 b(The)31
b(distances)1968 5654 y(b)r(et)n(w)n(een)d(t)n(w)n(o)f(axis-parallel)e
(cuts)k(in)f(the)g Ft(L)3384 5666 y Fm(p)3450 5654 y
Fu(metrics)g(are)f(all)1968 5753 y(iden)n(tical,)g(for)g
Ft(p)d Fi(2)f(f)p Fu(1)p Ft(;)14 b(:)g(:)g(:)f(;)h Fi(1g)p
Fu(.)37 b(Th)n(us,)27 b(using)g(an)n(y)g(other)h Ft(L)3931
5765 y Fm(p)p eop
%%Page: 6 6
6 5 bop 116 299 a Fu(6)116 523 y(metric)28 b(will)g(only)f(c)n(hange)f
(our)h Ft(\013)h Fu(parameter)e(b)n(y)i Ft(O)r Fu(\()p
Ft(d)p Fu(\).)116 714 y Fk(Definition)k(4.2.)40 b Fu(A)i(canonical)d
(region)h Ft(R)i Fu(has)e Fl(c)l(anonic)l(al)116 823
y(asp)l(e)l(ct)31 b(r)l(atio)p Fu(,)e Fj(casp)o Fu(\()p
Ft(R)q Fu(\))24 b(=)1007 783 y Fs(max)1130 791 y Ff(i)p
Fe(2C)1229 783 y Fs(\()p Fd(width)1410 791 y Ff(i)1436
783 y Fs(\()p Fm(R)p Fs(\)\))p 1007 804 557 4 v 1009
851 a(min)1119 859 y Ff(j)r Fe(2C)1223 851 y Fs(\()p
Fd(width)1403 859 y Ff(j)1434 851 y Fs(\()p Fm(R)p Fs(\)\))1574
823 y Fu(.)39 b Ft(R)29 b Fu(has)f Fl(b)l(ound-)116 965
y(ing)i(b)l(ox)g(asp)l(e)l(ct)g(r)l(atio)p Fu(,)e Fj(basp)o
Fu(\()p Ft(R)q Fu(\))23 b(=)1288 920 y Fs(max)1410 935
y Ff(i)p Fe(2C)1505 923 y(0)1532 920 y Fs(\()p Fd(width)1712
928 y Ff(i)1739 920 y Fs(\()p Fm(R)p Fs(\)\))p 1288 946
580 4 v 1290 994 a(min)1399 1009 y Ff(j)r Fe(2C)1498
997 y(0)1526 994 y Fs(\()p Fd(width)1706 1002 y Ff(j)1737
994 y Fs(\()p Fm(R)p Fs(\)\))1877 965 y Fu(.)266 1175
y(In)41 b(other)f(w)n(ords,)i(the)f(canonical)f(asp)r(ect)g(ratio)g(is)
h(the)116 1274 y(ratio)53 b(of)h(the)h(longest)e(to)h(smallest)f
(widths)i(among)e(the)116 1374 y(2)158 1344 y Fm(d)p
Fn(\000)p Fs(1)293 1374 y Fu(+)11 b Ft(d)24 b Fu(face)g(pairs,)g(and)g
(the)g(b)r(ounded)h(b)r(o)n(x)e(asp)r(ect)h(ratio)f(is)116
1474 y(the)g(asp)r(ect)f(ratio)f(of)h(the)h(b)r(ounding)f(h)n(yp)r(erb)
r(o)n(x)g(of)g(the)g(region,)116 1573 y(ignoring)27 b(the)i(corner)d
(cuts.)39 b(Because)28 b(w)n(e)f(are)h(using)g(the)g
Ft(L)2047 1585 y Fn(1)116 1673 y Fu(metric,)f(the)h(maxim)n(um)e
(distance)h(in)g(the)g(region)f Ft(R)i Fu(m)n(ust)f(b)r(e)116
1772 y(from)39 b(a)f(cut)i(direction)e(in)i Fi(C)1074
1742 y Fn(0)1097 1772 y Fu(,)i(implying)d(that)g Fj(basp)n
Fu(\()p Ft(R)q Fu(\))j Fi(\024)116 1872 y Fj(casp)o Fu(\()p
Ft(R)q Fu(\).)47 b(Also,)32 b(for)f(an)n(y)f(region)g
Ft(R)q Fu(,)i Fj(asp)n Fu(\()p Ft(R)q Fu(\))e Fi(\024)e
Fj(casp)o Fu(\()p Ft(R)q Fu(\))p Ft(d)p Fu(.)116 1972
y(It)h(is)f(acceptable,)g(then,)h(to)f(use)g(the)h(canonical)e(asp)r
(ect)h(ratio)116 2071 y(rather)c(than)i(the)f(general)f(asp)r(ect)h
(ratio)f(in)i(our)e(construction)116 2171 y(of)c(a)f(BAR)h(tree,)h
(with)f(only)g(a)f(factor)g(of)g Ft(d)h Fu(cost)g(in)g(asp)r(ect)f
(ratio)116 2271 y(p)r(erformance)24 b(with)i(resp)r(ect)f(to)g(the)h
(general)e(framew)n(ork.)34 b(As)116 2370 y(a)e(result,)h(w)n(e)e(call)
h(a)f(canonical)g(region)g Ft(R)h(\013)p Fu(-balanced)g(with)116
2470 y(resp)r(ect)d(to)g(the)h(curren)n(t)f(canonical)f(set)h(if)h
Fj(casp)n Fu(\()p Ft(R)q Fu(\))c Fi(\024)g Ft(\013)k
Fu(for)116 2569 y(some)d Ft(\013)d Fi(\025)e Fu(1.)266
2669 y(Ev)n(en)54 b(with)h(these)g(new)g(cuts)g(in)n(tro)r(duced)f(in)n
(to)h(our)116 2769 y(algorithm,)e(it)48 b(is)h(still)f(di\016cult,)55
b(in)48 b(fact)h(imp)r(ossible,)k(to)116 2868 y(guaran)n(tee)33
b(a)h(single)f(cut)i(that)g(will)f(divide)h(the)f(region)f(in)n(to)116
2968 y(t)n(w)n(o)48 b(prop)r(ortionally)e(equal)i(regions.)97
b(W)-7 b(e)49 b(do,)k(ho)n(w)n(ev)n(er,)116 3068 y(pro)n(v)n(e)29
b(that)i(an)n(y)f(balanced)f(canonical)h(region)f Ft(R)i
Fu(is)g(\()p Ft(d)21 b Fu(+)f(2\)-)116 3167 y(cuttable)i(for)f
(su\016cien)n(tly)g(large)f(v)-5 b(alues)22 b(of)f Ft(\013)h
Fu(and)f Ft(\014)26 b Fu(and)21 b(from)116 3267 y(Lemma)i(2.1)e(w)n(e)i
(ha)n(v)n(e)e(a)h(b)r(ound)i(on)e(our)g(BAR)h(tree)f(depth.)36
b(In)116 3366 y(the)26 b(pro)r(cess)f(of)g(pro)n(ving)f(the)i
(existence)g(of)f(a)g(\()p Ft(d)15 b Fu(+)g(2\)-cut,)26
b(w)n(e)116 3466 y(also)h(sho)n(w)f(a)h(simple)h Ft(O)r
Fu(\()p Ft(n)p Fu(\))g(time)g(metho)r(d)g(for)f(the)h(disco)n(v)n(ery)
116 3566 y(of)g(suc)n(h)f(a)g(cut.)116 3765 y Fx(4.1)95
b(Sp)s(eci\014c)56 b(Prop)s(erties.)48 b Fu(The)i(use)f(of)g(corner)f
(cuts)116 3865 y(giv)n(es)34 b(us)i(certain)e(v)n(ery)g(useful)i(and)f
(imp)r(ortan)n(t)g(prop)r(erties.)116 3964 y(First,)h(during)e(the)h
(pro)r(cess)e(of)h(making)g(a)g(corner)f(cut)h(on)h(a)116
4064 y(region)30 b Ft(R)q Fu(,)h(it)h(is)e(p)r(ossible)h(to)g(create)f
(a)g(subregion,)g Ft(R)1865 4076 y Fs(1)1903 4064 y Fu(,)h(suc)n(h)360
5197 y @beginspecial 11 @llx 435 @lly 477 @urx 726 @ury
1133 @rhi @setspecial
%%BeginDocument: fig/F3.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Cricket Draw III
%%Title: F3
%%BoundingBox: 11 435 477 726 
%%DocumentData: Clean7Bit
%%CreationDate: 7/6/98 8:11 AM
%%DocumentFonts: Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%ColorUsage: Color
%%EndComments
200 dict begin
%%BeginProlog
/FindFlatness %% Proc -- %%
{
{
dup 
{flattenpath exec} stopped
{
pop currentflat 100 ge {exit} if 
currentflat 1.25 mul setflat
}
{exit} ifelse
} bind loop
pop
newpath
} def
/QDShow %% string qdwidth -- %%
{
1 index length 1 le
{
pop show
}
{
1 index stringwidth pop sub 1 index length 1 sub div 0 3 -1 roll ashow
} ifelse
} def
/PathText %% string offset -- %%
{
/cd_FM true def
/cd_offset exch def
/cd_string exch def
/cd_offset cd_offset cd_string 0 1 getinterval stringwidth pop 2 div add def
/cd_pathdist 0 def 
/cd_setdist cd_offset def
/cd_charcount 0 def
gsave
flattenpath 
{mtp}{ltp}{ctp}{cpp}pathforall 
grestore
} bind def
/mtp 
{
/cd_newy exch def
/cd_newx exch def
/cd_firstx cd_newx def
/cd_firsty cd_newy def
/cd_ovr 
cd_FM 
{cd_offset /cd_FM false def}
{0} ifelse 
def 
cd_newx cd_newy transform 
/cd_cpy exch def
/cd_cpx exch def
}bind def
/ltp 
{
/cd_oldx cd_newx def
/cd_oldy cd_newy def
/cd_newy exch def
/cd_newx exch def
/cd_dx cd_newx cd_oldx sub def
/cd_dy cd_newy cd_oldy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt def 
cd_dist 0 ne
{
/cd_dsx cd_dx cd_dist div cd_ovr mul def 
/cd_dsy cd_dy cd_dist div cd_ovr mul def 
cd_oldx cd_dsx add cd_oldy cd_dsy add transform
/cd_cpy exch def
/cd_cpx exch def
/cd_pathdist cd_pathdist cd_dist add def
{
cd_setdist cd_pathdist le
{
cd_charcount cd_string length lt
{setchar}
{exit} ifelse
}
{
/cd_ovr cd_setdist cd_pathdist sub def
exit
} ifelse
}loop
} if
} bind def
/cpp 
{
cd_firstx cd_firsty ltp 
cd_firstx cd_firsty mtp
} bind def 
/setchar 
{
/cd_char cd_string cd_charcount 1 getinterval def
/cd_charcount cd_charcount 1 add def
/cd_charwidth cd_char stringwidth pop 2 div def 
gsave
cd_cpx cd_cpy itransform translate
cd_dy cd_dx atan rotate 
cd_charwidth neg 0 moveto 
cd_char 
cd_setdist 0 lt 
{stringwidth pop 0 rmoveto}
{show} ifelse
cd_charcount cd_string length lt
{
cd_string cd_charcount 1 getinterval stringwidth pop 2 div 0 rmoveto
} if
currentpoint transform 
/cd_cpy exch def 
/cd_cpx exch def 
grestore
/cd_setdist cd_setdist cd_charwidth add def
/cd_pathoffset cd_pathoffset cd_charwidth 2 mul add store
cd_charcount cd_string length lt
{
/cd_setdist cd_setdist cd_string cd_charcount 1 getinterval stringwidth pop 2 div add def
} if
} bind def
/OffsetCalc
{
/cd_textlength exch def
/cd_just exch def
/cd_dist 0 def
gsave
flattenpath
{
/cd_newy exch def 
/cd_newx exch def
/cd_firsty cd_newy def
/cd_firstx cd_newx def
}
{
/cd_oldy exch def
/cd_oldx exch def
/cd_dx cd_oldx cd_newx sub def 
/cd_dy cd_oldy cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
/cd_newx cd_oldx def
/cd_newy cd_oldy def
}
{
}
{
/cd_dx cd_firstx cd_newx sub def
/cd_dy cd_firsty cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
}
pathforall
cd_just 0 eq
{
/cd_pathoffset 0 store
} if
cd_just 1 eq
{
/cd_pathoffset cd_dist cd_textlength sub 2 div store
}if
cd_just 2 eq
{
/cd_pathoffset cd_dist cd_textlength sub store
}if
grestore
} bind def
/MakeUnderlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
20 dict begin
exch /BaseFont exch findfont def
/uniqueid 
BaseFont dup /UniqueID known 
{/UniqueID get 1 add}
{pop 1} ifelse
def
/FontType 3 def
/Upos 
BaseFont /FontInfo 2 copy known
{
get /UnderlinePosition 2 copy known
{get}
{pop pop -100 }ifelse
}
{ pop pop -100 }ifelse 
def
/Uwid 
BaseFont /FontInfo 2 copy known
{
get /UnderlineThickness 2 copy known
{get}
{pop pop 50} ifelse
}
{pop pop 50} ifelse
def
/FontMatrix BaseFont /FontMatrix get def
/FontBBox BaseFont /FontBBox get
dup 1 get Upos gt
{
dup 1 Upos put
}if
def
/Encoding BaseFont /Encoding get def
/theChar 1 string def
/BuildChar
{
exch
begin
theChar 0 3 -1 roll put
BaseFont 1000 scalefont setfont
theChar stringwidth FontBBox setcachedevice
0 0 moveto
theChar show
0 Upos rmoveto 0 Upos lineto
Uwid setlinewidth stroke
end
} def
currentdict 
end
definefont pop
} ifelse
} def
/MakeOutlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
/pathwidth 1000 24 div def 
/newfontname exch def 
/basefontname exch def 
/uniqueid 
basefontname findfont dup /UniqueID known 
{
/UniqueID get 1 add
}
{
pop 1
}ifelse
def
/BaseFont basefontname findfont def 
/numentries BaseFont maxlength 1 add def 
BaseFont /UniqueID known not
{
/numentries numentries 1 add def
} if
/NewFont numentries dict def 
BaseFont
{ 
exch dup /FID ne
{exch NewFont 3 1 roll put}
{pop pop} ifelse
}forall
NewFont /FontName newfontname put
NewFont /PaintType 2 put
NewFont /StrokeWidth pathwidth put
NewFont /UniqueID uniqueid put
newfontname NewFont definefont pop
}ifelse
}def
/macvec dup where not 
{ 256 array def
macvec 0 StandardEncoding
0 128 getinterval putinterval
macvec 16#27 /quotesingle put
macvec 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Aacute /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Agrave
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
macvec 128 128 getinterval astore pop
}
{pop pop} ifelse
/CreateFontDict 
{
dup length dict
/cd_NewFontDict exch def
{
1 index
/FID ne
{
cd_NewFontDict 3 1 roll put
}
{
pop pop
} ifelse
} forall
cd_NewFontDict
} def
/CoordinateFont 
{
dup 
/cd_FontString exch def 
length 7 add string
/cd_CoFontString exch def
cd_CoFontString 0 (|______) putinterval cd_CoFontString 7 cd_FontString putinterval
/cd_FontName cd_CoFontString cvn def 
FontDirectory cd_FontName known not
{
cd_FontString cvn findfont CreateFontDict
/cd_NewFontDict exch def
cd_NewFontDict dup 
/FontName cd_FontName put 
/Encoding macvec put
cd_FontName cd_NewFontDict definefont pop
} if
} def
/cd_defaultscreen [ currentscreen ] def
/SetDefaultScreen
{
cd_defaultscreen aload pop setscreen
} def
/Default
{
cd_defaultscreen 2 get exec
} def
/WhiteDot 
{
dup mul exch dup mul add 1 sub
} bind def
/BlackDot 
{
dup mul exch dup mul add 1 exch sub
} bind def
/HLines 
{
exch pop abs 1 exch sub
} bind def
/VLines 
{
pop abs 2 mul 1 exch sub
} bind def
/Poster
{
{
dup 0.5 lt 
{
dup 0.3 gt 
{pop 0.4} 
{0.1 gt 
{0.2} 
{0.0} ifelse
} ifelse
}
{
dup 0.7 lt 
{pop 0.6} 
{
0.9 lt 
{0.8} 
{1.0} ifelse
} ifelse
} ifelse
} settransfer
} def 
/Ellipse 
{
dup mul .625 mul exch dup mul add 1 exch sub
} bind def
/Square 
{
abs exch abs 2 copy gt{exch} if pop
} bind def
/Diamond 
{
abs exch abs add 1 exch sub
} bind def
/BlackCircle 
{
dup mul exch dup mul add 0.6 exch sub abs -0.5 mul
} bind def
/WhiteCircle 
{
dup mul exch dup mul add 0.6 exch sub abs 0.5 mul
} bind def
/Triangle 
{
2 exch sub exch abs 2 mul sub 3 div
} bind def
/Grid 
{
2 copy abs exch abs gt {exch} if pop 2 mul 1 exch sub 3.5 div
} bind def
/Ripples 
{
/wy exch def 180 mul cos 2 div wy dup dup dup mul mul sub mul wy add 180 mul cos
} bind def
/Star 
{
abs exch abs 2 copy gt {exch} if 1 sub dup 0 eq {0.01 add} if atan 360 div
} bind def
/max
{
2 copy lt{exch}if pop
} def
/min
{
2 copy gt{exch}if pop
} def
/concatprocs %% Proc1 Proc2 -- Proc1Proc2 %%
{
/Proc1 exch cvlit def
/Proc2 exch cvlit def
/NewProc Proc1 length Proc2 length add array def
NewProc 0 Proc1 putinterval
NewProc Proc1 length Proc2 putinterval
NewProc cvx
} def
/ndf %% key value -- %%
{
1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse
} def
/setcmykcolor %% Cyan Magenta Yellow Black -- %%
{
1 exch sub 3 {dup 5 -1 roll sub 0 max exch} repeat pop setrgbcolor
} ndf
/findcmykcustomcolor %% Cyan Magenta Yellow Black SpotName -- Object %%
{
[ 6 1 roll ] 
} ndf
/setcustomcolor %% object tint -- %%
{
/cd_tint exch def
0 4 getinterval
{ cd_tint mul } forall
setcmykcolor
} ndf
/cmyktorgb %% Cyan Magenta Yellow Black -- Red Green Blue %%
{
3 {dup 5 -1 roll add dup 1 gt {pop 1} if 1 exch sub exch} repeat pop
} def
/rgbtocmyk %% Red Green Blue -- Cyan Magenta Yellow Black %%
{
3 {3 -1 roll 1 exch sub} repeat
3 copy min min 
3 {4 -1 roll 1 index sub exch} repeat
} def
/cmyktohls %% Cyan Magenta Yellow Black -- Hue Lightness Saturation %%
{
cmyktorgb
3 copy min min 4 1 roll
3 copy max max 5 -1 roll
2 copy add 2 div 6 1 roll
2 copy eq 
{
5 {pop} repeat
0 exch 0
}
{
5 index
0.5 le
{
2 copy 2 copy
sub 3 1 roll
add div
}
{
2 copy 2 copy
sub 2 exch sub 3 1 roll
sub exch div 
} ifelse
6 1 roll
2 copy sub
5 index 3 index eq
{
3 1 roll pop pop
4 -3 roll sub exch pop exch div
}
{
4 index 3 index eq
{
3 1 roll pop pop
4 -3 roll exch pop exch sub 2 add exch div
}
{
3 1 roll pop pop
4 -3 roll pop sub 4 add exch div
} ifelse
} ifelse
60 mul dup 0 lt {360 add} if
3 1 roll
} ifelse
} def
/value
{
dup 360 gt {360 sub} if
dup 0 lt {360 add} if
dup
60 lt 
{
60 div 3 1 roll 2 copy sub 4 -1 roll mul add exch pop
}
{
dup 180 lt
{
pop pop
}
{
dup 240 lt
{
240 exch sub 60 div
3 copy pop sub mul add exch pop
}
{
pop exch pop
} ifelse
} ifelse
} ifelse
} def
/hlstocmyk %% Hue Lightness Saturation -- Cyan Magenta Yellow Black %%
{
dup 0 eq
{
pop exch pop dup dup
}
{
1 index 0.5 le
{
2 copy 1 add mul
}
{
2 copy 2 copy add 3 1 roll mul sub
} ifelse
2 index 1 index sub 2 mul
5 -3 roll pop pop
3 copy 120 add value 4 1 roll
3 copy value 4 1 roll
120 sub value 
} ifelse
rgbtocmyk
} def
/D3PathProc %% PathArray -- %%
{
{
dup length
dup 6 eq
{ pop aload pop curveto }
{ 
dup 2 eq
{ pop aload pop lineto }
{
3 eq
{ aload pop pop moveto }
{ pop closepath } ifelse
} ifelse
} ifelse
} forall
} def
/fntnIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
fntnBColor length 6 eq
{
fntnMix 0 eq
{
2 index sub 3 -2 roll exch sub div
}
{
3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get
} ifelse
fntnEColor 5 get fntnBColor 5 get sub mul fntnBColor 5 get add
fntnBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq fntnMix 0 eq and
{ pop pop pop fntnBColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
dup 2 index eq fntnMix 0 eq and
{ pop pop pop fntnEColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
fntnMix 0 eq
{ 2 index sub 3 -2 roll exch sub div }
{ 3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get } ifelse
dup fntnBColor 0 get fntnEColor 0 get 1 index sub 3 -1 roll mul add exch
dup fntnBColor 1 get fntnEColor 1 get 1 index sub 3 -1 roll mul add exch
fntnModel 0 eq
{
dup fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add exch
fntnBColor 3 get fntnEColor 3 get 1 index sub 3 -1 roll mul add
}
{
fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/fntnlinear %% DirectionData -- %%
{
aload pop
/stop [ 4 -2 roll] def
pop pop 4 2 roll
/start [ 4 -2 roll] def
start 1 get sub exch 
start 0 get sub
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
newpath
start aload pop
moveto
stop aload pop
lineto
stroke
1 index 1 index
translate
} for
pop pop
} def
/fntnecho %% DirectionData -- %%
{
aload
5 {pop} repeat
2 index sub exch 4 -1 roll sub
3 -1 roll pop
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
D3ObjectProc closepath
/stroke load FindFlatness
1 index 1 index
translate
} for
pop pop
} def
/fntnradial %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
translate
gsave
fntnBRadius fntnERadius fntnBRadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor 
newpath 0 0 3 -1 roll 0 360 arc
/stroke load FindFlatness
} for
} def
/fntnshape %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
D3ObjectProc pathbbox
2 index add 2 div exch
4 -2 roll pop add 2 div exch
/objCX 2 index def /objCY 1 index def
2 index sub exch 
4 -2 roll pop sub fntnSteps div neg exch
fntnSteps div neg
gsave
fntnBRadius fntnERadius fntnERadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor
gsave
objCX objCY 
translate
fntnERadius dup 3 -1 roll sub exch div dup
scale
objCX neg objCY neg 
translate
D3ObjectProc
/eofill load FindFlatness
grestore
1 index 1 index
translate
} for
2 {pop} repeat
} def
/fntn %% OffsetData Grain Steps Startcolor Endcolor Buffer Mix Model Style -- %%
{ 
/fntnStyle exch def
/fntnModel exch def
/fntnMix exch def
/fntnBuf exch def
fntnModel 0 eq
{
/fntnEColor exch def
/fntnBColor exch def
}
{
/fntnEColor [ 3 -1 roll aload pop cmyktohls ] def
/fntnBColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
/fntnSteps exch def
/fntnGrain exch def
fntnGrain setlinewidth
fntnStyle 0 eq {fntnlinear}
{ fntnStyle 1 eq {fntnecho} 
{ fntnStyle 2 eq {fntnradial} 
{fntnStyle 3 eq {fntnshape} 
{ pop } ifelse
} ifelse
} ifelse
} ifelse
} def 
/shdwIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
shdwBColor length 6 eq
{
2 index sub 3 -2 roll exch sub div
shdwEColor 5 get shdwBColor 5 get sub mul shdwBColor 5 get add
shdwBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq
{ pop pop pop shdwBColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
dup 2 index eq 
{ pop pop pop shdwEColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
2 index sub 3 -2 roll exch sub div
dup shdwBColor 0 get shdwEColor 0 get 1 index sub 3 -1 roll mul add exch
dup shdwBColor 1 get shdwEColor 1 get 1 index sub 3 -1 roll mul add exch
shdwModel 0 eq
{
dup shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add exch
shdwBColor 3 get shdwEColor 3 get 1 index sub 3 -1 roll mul add
}
{
shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/shdwdrop %% -- %%
{
shdwDColor length 6 eq
{
shdwDColor aload pop
/cd_tint exch def
findcmykcustomcolor cd_tint setcustomcolor
D3ObjectProc shdwOp
}
{
shdwDColor aload 
length 0 gt
{
shdwModel 0 ne { hlstocmyk } if
setcmykcolor
D3ObjectProc shdwOp
} if
} ifelse
} def
/shdwfull %% -- %%
{
shdwLength shdwAngle cos mul shdwSteps div neg
shdwLength shdwAngle sin mul shdwSteps div neg
0 shdwGrain dup shdwSteps 1 sub mul 
{
dup 0 eq 
{pop shdwdrop}
{
0 shdwGrain shdwSteps mul 3 -1 roll shdwIncColor
D3ObjectProc shdwOp
} ifelse
1 index 1 index
translate
} for
pop pop
} def
/shdw %% StartRGB EndRGB DropRGB Steps Grain Length Angle Mix Model Style -- %%
{
/shdwStyle exch def
/shdwModel exch def
/shdwMix exch def
/shdwAngle exch def
/shdwLength exch def
/shdwGrain exch def
/shdwSteps exch def
shdwModel 0 eq
{
/shdwDColor exch def
/shdwBColor exch def
/shdwEColor exch def
}
{
/shdwDColor [ 3 -1 roll aload length 0 gt {cmyktohls} if ] def
/shdwBColor [ 3 -1 roll aload pop cmyktohls ] def
/shdwEColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
shdwSteps 0 ne shdwLength 0 ne and
{
gsave
shdwLength shdwAngle cos mul 
shdwLength shdwAngle sin mul
translate
shdwStyle 0 eq
{ shdwdrop }
{ shdwfull } ifelse
grestore
} if
} def
/colorimage %% width height bitspersample matrix proc xxx numplanes --
{
3 ne {exit} if
{exit} if
pop
{
currentfile cd_ImageStr readhexstring pop /cd_string exch def
0 1 cd_string length 3 div 1 sub
{
dup 3 mul
dup cd_string exch get 6 mul exch
dup 1 add cd_string exch get 3 mul exch 
2 add cd_string exch get
add add 10 div round cvi
cd_string 3 1 roll put
} for
cd_string dup length 3 idiv 0 exch getinterval
}
image
} ndf
/ReadToAsterick %% --
{
/cd_String 1 string def
0
{
currentfile cd_String readstring not {pop exit} if
0 get dup 42 eq 
{ 
pop 1 eq 
{ 
(BitMap Error: To much data) ==
} if 
exit
} 
{
32 gt 
{pop 1} if 
} ifelse
} loop
} def
/D3ImageProc %% Width Height -- %%
{
/cd_ImageStr 2 index 7 add 8 idiv string def
true
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
imagemask
ReadToAsterick
} def
/D3ColorImageProc %% Width Height BitsPerSample -- %%
{
/cd_ImageStr 3 index 8 3 index idiv dup 1 sub 3 -1 roll add exch idiv 3 mul string def
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
false 3
colorimage
ReadToAsterick
} def
%%EndProlog
%% -------- Begin Program --------- %%
systemdict /setpacking known
{
true setpacking
} if
2 setlinecap
0 setlinejoin

(Times-Roman) CoordinateFont
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [320.5 696.5 0 ] put
D3PathArray 1 [474.646 696.5 ] put
D3PathArray 2 [474.646 480.5 ] put
D3PathArray 3 [320.5 480.5 ] put
D3PathArray 4 [320.5 696.5 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
1 0 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 8 array def
D3PathArray 0 [474.646 696.5 0 ] put
D3PathArray 1 [401.5 696.5 ] put
D3PathArray 2 [321 615.5 ] put
D3PathArray 3 [321 481 ] put
D3PathArray 4 [403 481 ] put
D3PathArray 5 [475 554 ] put
D3PathArray 6 [474.646 696.5 ] put
D3PathArray 7 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [71.002 479.002 0 ] put
D3PathArray 1 [214.999 479.004 ] put
D3PathArray 2 [214.996 692.001 ] put
D3PathArray 3 [70.998 691.998 ] put
D3PathArray 4 [71.002 479.002 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
1 0 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [116.997 691.499 0 ] put
D3PathArray 1 [214.998 594.002 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [159 479.003 0 ] put
D3PathArray 1 [71 567 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [185 479.003 0 ] put
D3PathArray 1 [214.999 508.503 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [159 479.003 0 ] put
D3PathArray 1 [185 479.003 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [214.999 508.503 0 ] put
D3PathArray 1 [214.998 592.502 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [71 567 0 ] put
D3PathArray 1 [70.999 648 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [104 534.001 0 ] put
D3PathArray 1 [173.498 603.001 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [322 695 0 ] put
D3PathArray 1 [362 695 ] put
D3PathArray 2 [362 657.323 ] put
D3PathArray 3 [322 657.323 ] put
D3PathArray 4 [322 695 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [363.5 657 0 ] put
D3PathArray 1 [394.5 657 ] put
D3PathArray 2 [394.5 624.5 ] put
D3PathArray 3 [363.5 624.5 ] put
D3PathArray 4 [363.5 657 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [298 687.885 0 ] put
D3PathArray 1 [298 553.171 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [298 558.171 0 ] put
D3ArrowArray 1 [295.5 558.171 ] put
D3ArrowArray 2 [298 548.171 ] put
D3ArrowArray 3 [300.5 558.171 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [298 682.885 0 ] put
D3ArrowArray 6 [300.5 682.885 ] put
D3ArrowArray 7 [298 692.885 ] put
D3ArrowArray 8 [295.5 682.885 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [308 603.5 0 ] put
D3PathArray 1 [415.001 710.999 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [115.498 691.499 0 ] put
D3PathArray 1 [71.999 647.499 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [176.593 623.001 0 ] put
D3PathArray 1 [109.83 623 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [114.83 623 0 ] put
D3ArrowArray 1 [114.83 625.5 ] put
D3ArrowArray 2 [104.83 623 ] put
D3ArrowArray 3 [114.83 620.5 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [171.593 623.001 0 ] put
D3ArrowArray 6 [171.593 620.501 ] put
D3ArrowArray 7 [181.593 623.001 ] put
D3ArrowArray 8 [171.593 625.501 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [184.498 606.14 0 ] put
D3PathArray 1 [184.499 541.305 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [184.499 546.305 0 ] put
D3ArrowArray 1 [181.999 546.305 ] put
D3ArrowArray 2 [184.499 536.305 ] put
D3ArrowArray 3 [186.999 546.305 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [184.498 601.14 0 ] put
D3ArrowArray 6 [186.998 601.14 ] put
D3ArrowArray 7 [184.498 611.14 ] put
D3ArrowArray 8 [181.998 601.14 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 333 661.75 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(x) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 370 627.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(y) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 282 634 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(z) 5 QDShow
grestore
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [322.25 690.562 0 ] put
D3PathArray 1 [322.25 663.074 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [322.25 668.074 0 ] put
D3ArrowArray 1 [319.75 668.074 ] put
D3ArrowArray 2 [322.25 658.074 ] put
D3ArrowArray 3 [324.75 668.074 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [322.25 685.562 0 ] put
D3ArrowArray 6 [324.75 685.562 ] put
D3ArrowArray 7 [322.25 695.562 ] put
D3ArrowArray 8 [319.75 685.562 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [328.117 658 0 ] put
D3PathArray 1 [353.588 658 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [348.588 658 0 ] put
D3ArrowArray 1 [348.588 655.5 ] put
D3ArrowArray 2 [358.588 658 ] put
D3ArrowArray 3 [348.588 660.5 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [333.117 658 0 ] put
D3ArrowArray 6 [333.117 660.5 ] put
D3ArrowArray 7 [323.117 658 ] put
D3ArrowArray 8 [333.117 655.5 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 307.5 686 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(x) 6 QDShow
grestore
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [476.5 706.5 0 ] put
D3PathArray 1 [309.5 538.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [363.5 648.41 0 ] put
D3PathArray 1 [363.5 629.045 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [363.5 634.045 0 ] put
D3ArrowArray 1 [361 634.045 ] put
D3ArrowArray 2 [363.5 624.045 ] put
D3ArrowArray 3 [366 634.045 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [363.5 643.41 0 ] put
D3ArrowArray 6 [366 643.41 ] put
D3ArrowArray 7 [363.5 653.41 ] put
D3ArrowArray 8 [361 643.41 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [367 624 0 ] put
D3PathArray 1 [391.5 624 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [386.5 624 0 ] put
D3ArrowArray 1 [386.5 621.5 ] put
D3ArrowArray 2 [396.5 624 ] put
D3ArrowArray 3 [386.5 626.5 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [372 624 0 ] put
D3ArrowArray 6 [372 626.5 ] put
D3ArrowArray 7 [362 624 ] put
D3ArrowArray 8 [372 621.5 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 349.5 647.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(y) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 132.25 455.25 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(a\)) 13 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 389.75 455.25 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(b\)) 14 QDShow
grestore
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [188.998 617.501 0 ] put
D3PathArray 1 [106 617.501 ] put
D3PathArray 2 [106 535 ] put
D3PathArray 3 [188.998 535 ] put
D3PathArray 4 [188.998 617.501 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [44.5 593.5 0 ] put
D3PathArray 1 [176.5 462 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [98 710.5 0 ] put
D3PathArray 1 [240 568 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 102 726 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(q: x+y=b) 44 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 10.5 617 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(p: x+y=a) 43 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 124.5 659 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(b-a) 15 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 129 640 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(2) 6 QDShow
grestore
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [127 640 0 ] put
D3PathArray 1 [144.5 640 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 74.5 609.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(b-a) 15 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 79 590.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(2) 6 QDShow
grestore
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [77 590.5 0 ] put
D3PathArray 1 [94.5 590.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [99 615.5 0 ] put
D3PathArray 1 [99 546 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [99 551 0 ] put
D3ArrowArray 1 [96.5 551 ] put
D3ArrowArray 2 [99 541 ] put
D3ArrowArray 3 [101.5 551 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [99 610.5 0 ] put
D3ArrowArray 6 [101.5 610.5 ] put
D3ArrowArray 7 [99 620.5 ] put
D3ArrowArray 8 [96.5 610.5 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 38.5 483.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(0,0\)) 24 QDShow
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 116 5454 a(Figure)26 b(2:)36 b Fg(\(a\))24
b(Illustrates)f(the)h(distance)f(b)r(et)n(w)n(een)h(t)n(w)n(o)h(co)n
(rner)g(cuts)116 5545 y(in)30 b Fw(L)257 5553 y Fr(1)354
5545 y Fg(fo)n(r)i(the)e(plane.)50 b(\(b\))30 b(Illustrates)g(the)h
(notion)f(of)i(a)f(shielding)116 5637 y(cut.)j(If)27
b Fw(x)e Fg(is)h(the)f(length)f(of)j(the)e(co)n(rner)h(cut,)g(the)f
(shielding)f(cut)h(is)g(at)116 5728 y(distance)g Fw(y)j
Fg(from)f(the)e(co)n(rner)h(cut,)f(where)i Fw(y)d Fc(\024)d
Fw(x=)p Fz(\()1618 5697 y Fv(\013)p 1617 5711 41 4 v
1621 5753 a(d)1684 5728 y Fc(\000)c Fz(1)p Fg(\).)2471
1267 y @beginspecial 19 @llx 439 @lly 552 @urx 741 @ury
992 @rhi @setspecial
%%BeginDocument: fig/F1.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Cricket Draw III
%%Title: F1
%%BoundingBox: 19 439 552 741 
%%DocumentData: Clean7Bit
%%CreationDate: 7/5/98 11:41 PM
%%DocumentFonts: Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%ColorUsage: Color
%%EndComments
200 dict begin
%%BeginProlog
/FindFlatness %% Proc -- %%
{
{
dup 
{flattenpath exec} stopped
{
pop currentflat 100 ge {exit} if 
currentflat 1.25 mul setflat
}
{exit} ifelse
} bind loop
pop
newpath
} def
/QDShow %% string qdwidth -- %%
{
1 index length 1 le
{
pop show
}
{
1 index stringwidth pop sub 1 index length 1 sub div 0 3 -1 roll ashow
} ifelse
} def
/PathText %% string offset -- %%
{
/cd_FM true def
/cd_offset exch def
/cd_string exch def
/cd_offset cd_offset cd_string 0 1 getinterval stringwidth pop 2 div add def
/cd_pathdist 0 def 
/cd_setdist cd_offset def
/cd_charcount 0 def
gsave
flattenpath 
{mtp}{ltp}{ctp}{cpp}pathforall 
grestore
} bind def
/mtp 
{
/cd_newy exch def
/cd_newx exch def
/cd_firstx cd_newx def
/cd_firsty cd_newy def
/cd_ovr 
cd_FM 
{cd_offset /cd_FM false def}
{0} ifelse 
def 
cd_newx cd_newy transform 
/cd_cpy exch def
/cd_cpx exch def
}bind def
/ltp 
{
/cd_oldx cd_newx def
/cd_oldy cd_newy def
/cd_newy exch def
/cd_newx exch def
/cd_dx cd_newx cd_oldx sub def
/cd_dy cd_newy cd_oldy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt def 
cd_dist 0 ne
{
/cd_dsx cd_dx cd_dist div cd_ovr mul def 
/cd_dsy cd_dy cd_dist div cd_ovr mul def 
cd_oldx cd_dsx add cd_oldy cd_dsy add transform
/cd_cpy exch def
/cd_cpx exch def
/cd_pathdist cd_pathdist cd_dist add def
{
cd_setdist cd_pathdist le
{
cd_charcount cd_string length lt
{setchar}
{exit} ifelse
}
{
/cd_ovr cd_setdist cd_pathdist sub def
exit
} ifelse
}loop
} if
} bind def
/cpp 
{
cd_firstx cd_firsty ltp 
cd_firstx cd_firsty mtp
} bind def 
/setchar 
{
/cd_char cd_string cd_charcount 1 getinterval def
/cd_charcount cd_charcount 1 add def
/cd_charwidth cd_char stringwidth pop 2 div def 
gsave
cd_cpx cd_cpy itransform translate
cd_dy cd_dx atan rotate 
cd_charwidth neg 0 moveto 
cd_char 
cd_setdist 0 lt 
{stringwidth pop 0 rmoveto}
{show} ifelse
cd_charcount cd_string length lt
{
cd_string cd_charcount 1 getinterval stringwidth pop 2 div 0 rmoveto
} if
currentpoint transform 
/cd_cpy exch def 
/cd_cpx exch def 
grestore
/cd_setdist cd_setdist cd_charwidth add def
/cd_pathoffset cd_pathoffset cd_charwidth 2 mul add store
cd_charcount cd_string length lt
{
/cd_setdist cd_setdist cd_string cd_charcount 1 getinterval stringwidth pop 2 div add def
} if
} bind def
/OffsetCalc
{
/cd_textlength exch def
/cd_just exch def
/cd_dist 0 def
gsave
flattenpath
{
/cd_newy exch def 
/cd_newx exch def
/cd_firsty cd_newy def
/cd_firstx cd_newx def
}
{
/cd_oldy exch def
/cd_oldx exch def
/cd_dx cd_oldx cd_newx sub def 
/cd_dy cd_oldy cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
/cd_newx cd_oldx def
/cd_newy cd_oldy def
}
{
}
{
/cd_dx cd_firstx cd_newx sub def
/cd_dy cd_firsty cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
}
pathforall
cd_just 0 eq
{
/cd_pathoffset 0 store
} if
cd_just 1 eq
{
/cd_pathoffset cd_dist cd_textlength sub 2 div store
}if
cd_just 2 eq
{
/cd_pathoffset cd_dist cd_textlength sub store
}if
grestore
} bind def
/MakeUnderlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
20 dict begin
exch /BaseFont exch findfont def
/uniqueid 
BaseFont dup /UniqueID known 
{/UniqueID get 1 add}
{pop 1} ifelse
def
/FontType 3 def
/Upos 
BaseFont /FontInfo 2 copy known
{
get /UnderlinePosition 2 copy known
{get}
{pop pop -100 }ifelse
}
{ pop pop -100 }ifelse 
def
/Uwid 
BaseFont /FontInfo 2 copy known
{
get /UnderlineThickness 2 copy known
{get}
{pop pop 50} ifelse
}
{pop pop 50} ifelse
def
/FontMatrix BaseFont /FontMatrix get def
/FontBBox BaseFont /FontBBox get
dup 1 get Upos gt
{
dup 1 Upos put
}if
def
/Encoding BaseFont /Encoding get def
/theChar 1 string def
/BuildChar
{
exch
begin
theChar 0 3 -1 roll put
BaseFont 1000 scalefont setfont
theChar stringwidth FontBBox setcachedevice
0 0 moveto
theChar show
0 Upos rmoveto 0 Upos lineto
Uwid setlinewidth stroke
end
} def
currentdict 
end
definefont pop
} ifelse
} def
/MakeOutlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
/pathwidth 1000 24 div def 
/newfontname exch def 
/basefontname exch def 
/uniqueid 
basefontname findfont dup /UniqueID known 
{
/UniqueID get 1 add
}
{
pop 1
}ifelse
def
/BaseFont basefontname findfont def 
/numentries BaseFont maxlength 1 add def 
BaseFont /UniqueID known not
{
/numentries numentries 1 add def
} if
/NewFont numentries dict def 
BaseFont
{ 
exch dup /FID ne
{exch NewFont 3 1 roll put}
{pop pop} ifelse
}forall
NewFont /FontName newfontname put
NewFont /PaintType 2 put
NewFont /StrokeWidth pathwidth put
NewFont /UniqueID uniqueid put
newfontname NewFont definefont pop
}ifelse
}def
/macvec dup where not 
{ 256 array def
macvec 0 StandardEncoding
0 128 getinterval putinterval
macvec 16#27 /quotesingle put
macvec 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Aacute /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Agrave
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
macvec 128 128 getinterval astore pop
}
{pop pop} ifelse
/CreateFontDict 
{
dup length dict
/cd_NewFontDict exch def
{
1 index
/FID ne
{
cd_NewFontDict 3 1 roll put
}
{
pop pop
} ifelse
} forall
cd_NewFontDict
} def
/CoordinateFont 
{
dup 
/cd_FontString exch def 
length 7 add string
/cd_CoFontString exch def
cd_CoFontString 0 (|______) putinterval cd_CoFontString 7 cd_FontString putinterval
/cd_FontName cd_CoFontString cvn def 
FontDirectory cd_FontName known not
{
cd_FontString cvn findfont CreateFontDict
/cd_NewFontDict exch def
cd_NewFontDict dup 
/FontName cd_FontName put 
/Encoding macvec put
cd_FontName cd_NewFontDict definefont pop
} if
} def
/cd_defaultscreen [ currentscreen ] def
/SetDefaultScreen
{
cd_defaultscreen aload pop setscreen
} def
/Default
{
cd_defaultscreen 2 get exec
} def
/WhiteDot 
{
dup mul exch dup mul add 1 sub
} bind def
/BlackDot 
{
dup mul exch dup mul add 1 exch sub
} bind def
/HLines 
{
exch pop abs 1 exch sub
} bind def
/VLines 
{
pop abs 2 mul 1 exch sub
} bind def
/Poster
{
{
dup 0.5 lt 
{
dup 0.3 gt 
{pop 0.4} 
{0.1 gt 
{0.2} 
{0.0} ifelse
} ifelse
}
{
dup 0.7 lt 
{pop 0.6} 
{
0.9 lt 
{0.8} 
{1.0} ifelse
} ifelse
} ifelse
} settransfer
} def 
/Ellipse 
{
dup mul .625 mul exch dup mul add 1 exch sub
} bind def
/Square 
{
abs exch abs 2 copy gt{exch} if pop
} bind def
/Diamond 
{
abs exch abs add 1 exch sub
} bind def
/BlackCircle 
{
dup mul exch dup mul add 0.6 exch sub abs -0.5 mul
} bind def
/WhiteCircle 
{
dup mul exch dup mul add 0.6 exch sub abs 0.5 mul
} bind def
/Triangle 
{
2 exch sub exch abs 2 mul sub 3 div
} bind def
/Grid 
{
2 copy abs exch abs gt {exch} if pop 2 mul 1 exch sub 3.5 div
} bind def
/Ripples 
{
/wy exch def 180 mul cos 2 div wy dup dup dup mul mul sub mul wy add 180 mul cos
} bind def
/Star 
{
abs exch abs 2 copy gt {exch} if 1 sub dup 0 eq {0.01 add} if atan 360 div
} bind def
/max
{
2 copy lt{exch}if pop
} def
/min
{
2 copy gt{exch}if pop
} def
/concatprocs %% Proc1 Proc2 -- Proc1Proc2 %%
{
/Proc1 exch cvlit def
/Proc2 exch cvlit def
/NewProc Proc1 length Proc2 length add array def
NewProc 0 Proc1 putinterval
NewProc Proc1 length Proc2 putinterval
NewProc cvx
} def
/ndf %% key value -- %%
{
1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse
} def
/setcmykcolor %% Cyan Magenta Yellow Black -- %%
{
1 exch sub 3 {dup 5 -1 roll sub 0 max exch} repeat pop setrgbcolor
} ndf
/findcmykcustomcolor %% Cyan Magenta Yellow Black SpotName -- Object %%
{
[ 6 1 roll ] 
} ndf
/setcustomcolor %% object tint -- %%
{
/cd_tint exch def
0 4 getinterval
{ cd_tint mul } forall
setcmykcolor
} ndf
/cmyktorgb %% Cyan Magenta Yellow Black -- Red Green Blue %%
{
3 {dup 5 -1 roll add dup 1 gt {pop 1} if 1 exch sub exch} repeat pop
} def
/rgbtocmyk %% Red Green Blue -- Cyan Magenta Yellow Black %%
{
3 {3 -1 roll 1 exch sub} repeat
3 copy min min 
3 {4 -1 roll 1 index sub exch} repeat
} def
/cmyktohls %% Cyan Magenta Yellow Black -- Hue Lightness Saturation %%
{
cmyktorgb
3 copy min min 4 1 roll
3 copy max max 5 -1 roll
2 copy add 2 div 6 1 roll
2 copy eq 
{
5 {pop} repeat
0 exch 0
}
{
5 index
0.5 le
{
2 copy 2 copy
sub 3 1 roll
add div
}
{
2 copy 2 copy
sub 2 exch sub 3 1 roll
sub exch div 
} ifelse
6 1 roll
2 copy sub
5 index 3 index eq
{
3 1 roll pop pop
4 -3 roll sub exch pop exch div
}
{
4 index 3 index eq
{
3 1 roll pop pop
4 -3 roll exch pop exch sub 2 add exch div
}
{
3 1 roll pop pop
4 -3 roll pop sub 4 add exch div
} ifelse
} ifelse
60 mul dup 0 lt {360 add} if
3 1 roll
} ifelse
} def
/value
{
dup 360 gt {360 sub} if
dup 0 lt {360 add} if
dup
60 lt 
{
60 div 3 1 roll 2 copy sub 4 -1 roll mul add exch pop
}
{
dup 180 lt
{
pop pop
}
{
dup 240 lt
{
240 exch sub 60 div
3 copy pop sub mul add exch pop
}
{
pop exch pop
} ifelse
} ifelse
} ifelse
} def
/hlstocmyk %% Hue Lightness Saturation -- Cyan Magenta Yellow Black %%
{
dup 0 eq
{
pop exch pop dup dup
}
{
1 index 0.5 le
{
2 copy 1 add mul
}
{
2 copy 2 copy add 3 1 roll mul sub
} ifelse
2 index 1 index sub 2 mul
5 -3 roll pop pop
3 copy 120 add value 4 1 roll
3 copy value 4 1 roll
120 sub value 
} ifelse
rgbtocmyk
} def
/D3PathProc %% PathArray -- %%
{
{
dup length
dup 6 eq
{ pop aload pop curveto }
{ 
dup 2 eq
{ pop aload pop lineto }
{
3 eq
{ aload pop pop moveto }
{ pop closepath } ifelse
} ifelse
} ifelse
} forall
} def
/fntnIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
fntnBColor length 6 eq
{
fntnMix 0 eq
{
2 index sub 3 -2 roll exch sub div
}
{
3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get
} ifelse
fntnEColor 5 get fntnBColor 5 get sub mul fntnBColor 5 get add
fntnBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq fntnMix 0 eq and
{ pop pop pop fntnBColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
dup 2 index eq fntnMix 0 eq and
{ pop pop pop fntnEColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
fntnMix 0 eq
{ 2 index sub 3 -2 roll exch sub div }
{ 3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get } ifelse
dup fntnBColor 0 get fntnEColor 0 get 1 index sub 3 -1 roll mul add exch
dup fntnBColor 1 get fntnEColor 1 get 1 index sub 3 -1 roll mul add exch
fntnModel 0 eq
{
dup fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add exch
fntnBColor 3 get fntnEColor 3 get 1 index sub 3 -1 roll mul add
}
{
fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/fntnlinear %% DirectionData -- %%
{
aload pop
/stop [ 4 -2 roll] def
pop pop 4 2 roll
/start [ 4 -2 roll] def
start 1 get sub exch 
start 0 get sub
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
newpath
start aload pop
moveto
stop aload pop
lineto
stroke
1 index 1 index
translate
} for
pop pop
} def
/fntnecho %% DirectionData -- %%
{
aload
5 {pop} repeat
2 index sub exch 4 -1 roll sub
3 -1 roll pop
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
D3ObjectProc closepath
/stroke load FindFlatness
1 index 1 index
translate
} for
pop pop
} def
/fntnradial %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
translate
gsave
fntnBRadius fntnERadius fntnBRadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor 
newpath 0 0 3 -1 roll 0 360 arc
/stroke load FindFlatness
} for
} def
/fntnshape %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
D3ObjectProc pathbbox
2 index add 2 div exch
4 -2 roll pop add 2 div exch
/objCX 2 index def /objCY 1 index def
2 index sub exch 
4 -2 roll pop sub fntnSteps div neg exch
fntnSteps div neg
gsave
fntnBRadius fntnERadius fntnERadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor
gsave
objCX objCY 
translate
fntnERadius dup 3 -1 roll sub exch div dup
scale
objCX neg objCY neg 
translate
D3ObjectProc
/eofill load FindFlatness
grestore
1 index 1 index
translate
} for
2 {pop} repeat
} def
/fntn %% OffsetData Grain Steps Startcolor Endcolor Buffer Mix Model Style -- %%
{ 
/fntnStyle exch def
/fntnModel exch def
/fntnMix exch def
/fntnBuf exch def
fntnModel 0 eq
{
/fntnEColor exch def
/fntnBColor exch def
}
{
/fntnEColor [ 3 -1 roll aload pop cmyktohls ] def
/fntnBColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
/fntnSteps exch def
/fntnGrain exch def
fntnGrain setlinewidth
fntnStyle 0 eq {fntnlinear}
{ fntnStyle 1 eq {fntnecho} 
{ fntnStyle 2 eq {fntnradial} 
{fntnStyle 3 eq {fntnshape} 
{ pop } ifelse
} ifelse
} ifelse
} ifelse
} def 
/shdwIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
shdwBColor length 6 eq
{
2 index sub 3 -2 roll exch sub div
shdwEColor 5 get shdwBColor 5 get sub mul shdwBColor 5 get add
shdwBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq
{ pop pop pop shdwBColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
dup 2 index eq 
{ pop pop pop shdwEColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
2 index sub 3 -2 roll exch sub div
dup shdwBColor 0 get shdwEColor 0 get 1 index sub 3 -1 roll mul add exch
dup shdwBColor 1 get shdwEColor 1 get 1 index sub 3 -1 roll mul add exch
shdwModel 0 eq
{
dup shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add exch
shdwBColor 3 get shdwEColor 3 get 1 index sub 3 -1 roll mul add
}
{
shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/shdwdrop %% -- %%
{
shdwDColor length 6 eq
{
shdwDColor aload pop
/cd_tint exch def
findcmykcustomcolor cd_tint setcustomcolor
D3ObjectProc shdwOp
}
{
shdwDColor aload 
length 0 gt
{
shdwModel 0 ne { hlstocmyk } if
setcmykcolor
D3ObjectProc shdwOp
} if
} ifelse
} def
/shdwfull %% -- %%
{
shdwLength shdwAngle cos mul shdwSteps div neg
shdwLength shdwAngle sin mul shdwSteps div neg
0 shdwGrain dup shdwSteps 1 sub mul 
{
dup 0 eq 
{pop shdwdrop}
{
0 shdwGrain shdwSteps mul 3 -1 roll shdwIncColor
D3ObjectProc shdwOp
} ifelse
1 index 1 index
translate
} for
pop pop
} def
/shdw %% StartRGB EndRGB DropRGB Steps Grain Length Angle Mix Model Style -- %%
{
/shdwStyle exch def
/shdwModel exch def
/shdwMix exch def
/shdwAngle exch def
/shdwLength exch def
/shdwGrain exch def
/shdwSteps exch def
shdwModel 0 eq
{
/shdwDColor exch def
/shdwBColor exch def
/shdwEColor exch def
}
{
/shdwDColor [ 3 -1 roll aload length 0 gt {cmyktohls} if ] def
/shdwBColor [ 3 -1 roll aload pop cmyktohls ] def
/shdwEColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
shdwSteps 0 ne shdwLength 0 ne and
{
gsave
shdwLength shdwAngle cos mul 
shdwLength shdwAngle sin mul
translate
shdwStyle 0 eq
{ shdwdrop }
{ shdwfull } ifelse
grestore
} if
} def
/colorimage %% width height bitspersample matrix proc xxx numplanes --
{
3 ne {exit} if
{exit} if
pop
{
currentfile cd_ImageStr readhexstring pop /cd_string exch def
0 1 cd_string length 3 div 1 sub
{
dup 3 mul
dup cd_string exch get 6 mul exch
dup 1 add cd_string exch get 3 mul exch 
2 add cd_string exch get
add add 10 div round cvi
cd_string 3 1 roll put
} for
cd_string dup length 3 idiv 0 exch getinterval
}
image
} ndf
/ReadToAsterick %% --
{
/cd_String 1 string def
0
{
currentfile cd_String readstring not {pop exit} if
0 get dup 42 eq 
{ 
pop 1 eq 
{ 
(BitMap Error: To much data) ==
} if 
exit
} 
{
32 gt 
{pop 1} if 
} ifelse
} loop
} def
/D3ImageProc %% Width Height -- %%
{
/cd_ImageStr 2 index 7 add 8 idiv string def
true
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
imagemask
ReadToAsterick
} def
/D3ColorImageProc %% Width Height BitsPerSample -- %%
{
/cd_ImageStr 3 index 8 3 index idiv dup 1 sub 3 -1 roll add exch idiv 3 mul string def
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
false 3
colorimage
ReadToAsterick
} def
%%EndProlog
%% -------- Begin Program --------- %%
systemdict /setpacking known
{
true setpacking
} if
2 setlinecap
0 setlinejoin

(Times-Roman) CoordinateFont
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 8 array def
D3PathArray 0 [174.146 715 0 ] put
D3PathArray 1 [109 715 ] put
D3PathArray 2 [20.5 626.5 ] put
D3PathArray 3 [20.5 499.5 ] put
D3PathArray 4 [136 499.5 ] put
D3PathArray 5 [255 619 ] put
D3PathArray 6 [174.146 715 ] put
D3PathArray 7 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [193.5 724 0 ] put
D3PathArray 1 [193.5 478.708 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 1 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [59 725 0 ] put
D3PathArray 1 [59 477 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 1 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 8 array def
D3PathArray 0 [462.146 715 0 ] put
D3PathArray 1 [397 715 ] put
D3PathArray 2 [308.5 626.5 ] put
D3PathArray 3 [308.5 499.5 ] put
D3PathArray 4 [424 499.5 ] put
D3PathArray 5 [550.5 626.5 ] put
D3PathArray 6 [462.146 715 ] put
D3PathArray 7 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [481.5 724 0 ] put
D3PathArray 1 [481.5 478.708 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 1 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [380 726 0 ] put
D3PathArray 1 [380 478 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 1 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [293 660 0 ] put
D3PathArray 1 [530.222 660 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 1 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [280 535 0 ] put
D3PathArray 1 [509 535 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ 1 4 ] 0 setdash
0 setlinecap
0 1 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [310.75 533.75 0 ] put
D3PathArray 1 [378.5 533.75 ] put
D3PathArray 2 [378.5 501.75 ] put
D3PathArray 3 [310.75 501.75 ] put
D3PathArray 4 [310.75 533.75 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0.245 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.245 0 0 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 4 array def
D3PathArray 0 [482.75 690.25 0 ] put
D3PathArray 1 [483 661.75 ] put
D3PathArray 2 [511.25 661.5 ] put
D3PathArray 3 [483.25 689.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0.245 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.245 0 0 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 5 array def
D3PathArray 0 [378.5 692.25 0 ] put
D3PathArray 1 [378.25 661.5 ] put
D3PathArray 2 [347.75 661.5 ] put
D3PathArray 3 [378.5 692.25 ] put
D3PathArray 4 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0.245 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.245 0 0 0 setcmykcolor
/stroke load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 65 733 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(l) 3 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 198 734 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(r) 4 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 29 582 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(R) 8 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 116 625 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(R) 8 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 206 627 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(R) 8 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 380.5 741.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(l) 3 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 276.5 538 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(r) 4 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 485.5 738.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(r) 4 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 39 580 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(l) 3 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 215 625 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(r) 3 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 125 622.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(m) 8 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 385 737.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(1) 5 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 281 534 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(2) 5 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 276 659.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(1) 5 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 283 654.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(2) 5 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 490.5 735 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 10 scalefont setfont
4 -13 moveto
(1) 5 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 109 459.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(a\)) 13 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 395.5 459.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(b\)) 14 QDShow
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 2200 1524 a Fu(Figure)29 b(3:)40 b Fg(\(a\))27
b(Tw)n(o)i(cuts)e Fw(l)i Fg(and)d Fw(r)j Fg(which)e(divide)f(a)h
(region)h Fw(R)g Fg(into)2200 1615 y(sub)n(regions)k
Fw(R)2621 1624 y Fv(l)2645 1615 y Fg(,)i Fw(R)2758 1623
y Fv(m)2816 1615 y Fg(,)g(and)d Fw(R)3077 1623 y Fv(r)3111
1615 y Fg(.)53 b(\(b\))31 b(P)n(airs)g(of)i(pa)n(rallel)c(cuts)j
Fw(l)4043 1623 y Fp(1)4077 1615 y Fg(,)i Fw(r)4167 1623
y Fp(1)2200 1707 y Fg(and)24 b Fw(l)2364 1715 y Fp(2)2399
1707 y Fg(,)i Fw(r)2481 1715 y Fp(2)2540 1707 y Fg(divide)e(region)h
Fw(R)h Fg(into)e(several)i(sub)n(regions.)34 b(The)25
b(shaded)2200 1798 y(a)n(reas)h(a)n(re)g(the)f(intersections)g(of)h
(the)g(outer)f(regions.)2200 2052 y Fu(that)33 b(some)f(other)g(b)r
(ounding)h(canonical)e(cut,)k Ft(c)p Fu(,)e(in)g Ft(R)h
Fu(is)e(no)2200 2152 y(longer)18 b(a)h(b)r(ounding)g(canonical)f(cut)h
(in)h Ft(R)3502 2164 y Fs(1)3539 2152 y Fu(,)h(i.e.)34
b(it)19 b(is)g(no)g(longer)2200 2252 y(tangen)n(tial)28
b(to)h(the)h(new)f(subregion)f Ft(R)3450 2264 y Fs(1)3487
2252 y Fu(.)42 b(If)30 b(this)f(is)g(the)h(case,)2200
2351 y(w)n(e)25 b(simply)h(tak)n(e)f(the)i(b)r(ounding)e(canonical)g
(cut)h(of)g Ft(R)3928 2363 y Fs(1)3991 2351 y Fu(whic)n(h)2200
2451 y(is)f(parallel)e(to)i Ft(c)f Fu(to)h(represen)n(t)f(part)g(of)g
Ft(R)3518 2463 y Fs(1)3556 2451 y Fu(.)36 b(Therefore,)24
b(when)2200 2551 y(w)n(e)38 b(refer)g(to)g(canonical)f(cuts)i(of)f(a)g
(region,)i(w)n(e)e(are)f(alw)n(a)n(ys)2200 2650 y(referring)26
b(to)i(the)g(region's)e Fl(b)l(ounding)i Fu(canonical)e(cuts.)2350
2750 y(Ev)n(ery)58 b(corner)h(cut,)69 b(b)r(esides)60
b(ha)n(ving)f(an)h(opp)r(osing)2200 2849 y(corner,)41
b(also)e(has)f Ft(d)i Fu(neigh)n(b)r(oring)e(axis-parallel)g(cuts,)k
(and)2200 2949 y Ft(d)e Fu(opp)r(osing)f(axis-parallel)f(cuts.)74
b(F)-7 b(or)39 b(a)h(corner)e(cut,)44 b Ft(c)f Fu(=)2200
3049 y(\()p Ft(I)2268 3061 y Fs(1)2306 3049 y Ft(;)14
b(I)2379 3061 y Fs(2)2417 3049 y Ft(;)g(:)g(:)g(:)f(;)h(I)2637
3061 y Fm(d)2676 3049 y Fu(\),)34 b(let)f Ft(c)2926 3019
y Fm(j)2992 3049 y Fu(=)e(\(0)p Ft(;)14 b(:)g(:)g(:)f(;)h(I)3382
3061 y Fm(j)3417 3049 y Ft(;)g(:)g(:)g(:)g(;)g Fu(0\))32
b(for)g Ft(j)k Fi(2)31 b(f)p Fu(1)p Ft(;)14 b(d)p Fi(g)2200
3148 y Fu(b)r(e)28 b(the)g Ft(j)5 b Fu(-th)28 b(neigh)n(b)r(oring)e
(cut.)2200 3319 y Fk(Lemma)31 b(4.1.)41 b Fu(Supp)r(ose)24
b(w)n(e)f(are)g(giv)n(en)g(a)g(con)n(v)n(ex)g(p)r(olyhedral)2200
3419 y(region)d Ft(R)q Fu(,)j(and)e(t)n(w)n(o)g(parallel)f(h)n(yp)r
(erplanes)g Ft(l)j Fu(and)f Ft(r)i Fu(in)n(tersect-)2200
3519 y(ing)i Ft(R)h Fu(\(see)f(Figure)f(3.a\).)36 b(W)-7
b(e)27 b(ha)n(v)n(e)e(three)h(\(p)r(ossibly)g(empt)n(y\))2200
3618 y(subregions)19 b(of)h Ft(R)h Fu(lying)f(to)g(the)h(left,)h
(middle,)h(and)d(righ)n(t)f(of)i(the)2200 3718 y(t)n(w)n(o)i(h)n(yp)r
(erplanes,)h(resp)r(ectiv)n(ely)-7 b(,)24 b Ft(R)3362
3730 y Fm(l)3388 3718 y Fu(,)h Ft(R)3499 3730 y Fm(m)3562
3718 y Fu(,)g(and)f Ft(R)3831 3730 y Fm(r)3868 3718 y
Fu(.)35 b(F)-7 b(or)24 b(an)n(y)2200 3817 y(1)f Fi(\025)f
Ft(\014)28 b Fi(\025)22 b Fu(1)p Ft(=)p Fu(2,)h(either)g(there)g
(exists)g(a)g(h)n(yp)r(erplane)f Ft(m)h Fu(parallel)2200
3917 y(to)h Ft(l)i Fu(and)e Ft(r)j Fu(in)n(tersecting)d
Ft(R)3077 3929 y Fm(m)3164 3917 y Fu(whic)n(h)g(divides)h(the)f(region)
f(in)n(to)2200 4017 y(t)n(w)n(o)31 b(subregions)g(b)r(oth)h(of)g(whic)n
(h)g(ha)n(v)n(e)f(no)g(more)h(than)g Ft(\014)t Fi(j)p
Ft(R)q Fi(j)2200 4116 y Fu(p)r(oin)n(ts)j(or)f(no)h(less)g(than)g
Ft(\014)t Fi(j)p Ft(R)q Fi(j)h Fu(p)r(oin)n(ts)f(lies)g(in)g(either)g
Ft(R)4066 4128 y Fm(l)4127 4116 y Fu(or)2200 4216 y Ft(R)2263
4228 y Fm(r)2300 4216 y Fu(.)2200 4387 y Fl(Pr)l(o)l(of.)43
b Fu(Assume)20 b(the)g(con)n(trary)-7 b(.)32 b(Then,)22
b(w)n(e)d(kno)n(w)g(that)h Fi(j)p Ft(R)4065 4399 y Fm(l)4090
4387 y Fi(j)j Ft(<)2200 4487 y(\014)t Fi(j)p Ft(R)q Fi(j)28
b Fu(whic)n(h)f(implies)g(that)h Fi(j)p Ft(R)3173 4499
y Fm(m)3236 4487 y Fi(j)18 b Fu(+)f Fi(j)p Ft(R)3445
4499 y Fm(r)3482 4487 y Fi(j)23 b(\025)g Ft(\014)t Fi(j)p
Ft(R)q Fi(j)p Fu(,)k(or)g(else)g(the)2200 4586 y(line)35
b Ft(l)h Fu(w)n(ould)e(b)r(e)h(a)f(suitable)h(c)n(hoice)f(for)g
Ft(m)p Fu(.)57 b(Similarly)-7 b(,)36 b(w)n(e)2200 4686
y(kno)n(w)k(that)g Fi(j)p Ft(R)2708 4698 y Fm(l)2734
4686 y Fi(j)27 b Fu(+)f Fi(j)p Ft(R)2961 4698 y Fm(m)3025
4686 y Fi(j)44 b(\025)g Ft(\014)t Fi(j)p Ft(R)q Fi(j)p
Fu(.)75 b(W)-7 b(e)41 b(no)n(w)f(con)n(tin)n(ually)2200
4785 y(sw)n(eep)28 b(a)f(h)n(yp)r(erplane)h Ft(m)g Fu(from)g
Ft(l)h Fu(to)n(w)n(ards)e Ft(r)r Fu(,)i(let)f Ft(R)3873
4797 y Fs(1)3939 4785 y Fu(and)g Ft(R)4164 4797 y Fs(2)2200
4885 y Fu(b)r(e)k(the)h(t)n(w)n(o)e(subregions)f(of)i
Ft(R)h Fu(to)f(the)g(left)h(and)f(righ)n(t)f(of)h Ft(m)p
Fu(.)2200 4985 y Fi(j)p Ft(R)2286 4997 y Fs(1)2323 4985
y Fi(j)k Fu(=)g Fi(j)p Ft(R)2569 4997 y Fm(l)2594 4985
y Fi(j)24 b Fu(+)f Ft(x)35 b Fu(for)g(0)g Fi(\024)h Ft(x)g
Fi(\024)f(j)p Ft(R)3393 4997 y Fm(m)3456 4985 y Fi(j)p
Fu(.)60 b(This)35 b(implies)h(that)2200 5084 y(there)h(exists)h
Ft(x)i Fi(2)g(f)p Fu(0)p Ft(;)14 b(:)g(:)g(:)e(;)i Fi(j)p
Ft(R)3197 5096 y Fm(m)3260 5084 y Fi(jg)38 b Fu(suc)n(h)f(that)h
Fi(j)p Ft(R)3836 5096 y Fs(1)3873 5084 y Fi(j)i Fu(=)f
Ft(\014)t Fi(j)p Ft(R)q Fi(j)2200 5184 y Fu(and)29 b
Fi(j)p Ft(R)2449 5196 y Fs(2)2486 5184 y Fi(j)c Fu(=)f
Fi(j)p Ft(R)q Fi(j)19 b(\000)g Ft(\014)t Fi(j)p Ft(R)q
Fi(j)24 b(\024)h Ft(\014)t Fi(j)p Ft(R)q Fi(j)k Fu(for)f
Ft(\014)h Fi(\025)24 b Fu(1)p Ft(=)p Fu(2.)39 b(Th)n(us,)28
b(there)2200 5284 y(exists)h(a)h(h)n(yp)r(erplane)e(parallel)h(to)g
Ft(l)i Fu(and)f Ft(r)i Fu(whic)n(h)e(in)n(tersects)2200
5383 y Ft(R)2263 5395 y Fm(m)2351 5383 y Fu(and)24 b(divides)h
Ft(R)g Fu(in)n(to)f(t)n(w)n(o)g(regions)f(of)i(size)f(no)g(more)g(than)
2200 5483 y Ft(\014)t Fi(j)p Ft(R)q Fi(j)p Fu(,)k(con)n(tradicting)e
(our)h(original)f(assumption.)p 3836 5483 50 50 v 2350
5654 a(In)k(other)f(w)n(ords,)g(there)h(either)g(is)g(a)g(cut)g(that)g
(divides)g(a)2200 5753 y(region)21 b(in)n(to)g(t)n(w)n(o)g(subregions)g
(eac)n(h)g(with)h(less)f(than)h(a)g(fraction)p eop
%%Page: 7 7
7 6 bop 3927 299 a Fu(7)-116 523 y(of)19 b(the)h(original)e(n)n(um)n(b)
r(er)h(of)g(p)r(oin)n(ts)h(or)e(one)h(of)g(the)h(t)n(w)n(o)f(outside)
-116 623 y(regions)36 b(has)g(more)h(than)g(this)h(fraction)e(of)i(p)r
(oin)n(ts.)66 b(If)37 b(this)-116 722 y(latter)42 b(case)h(holds,)j(w)n
(e)d(call)g(this)g(region)f(the)h Fl(lar)l(ge)i(outer)-116
822 y(r)l(e)l(gion)p Fu(,)e Fj(lor)298 834 y Fm(l;r)376
822 y Fu(\()p Ft(R)q Fu(\),)g(where)c Ft(l)j Fu(and)d
Ft(r)k Fu(are)c(the)h(t)n(w)n(o)f(parallel)-116 922 y(h)n(yp)r
(erplanes.)77 b(If)41 b(there)g(exists)g(a)g(dividing)g(cut,)k
Ft(m)p Fu(,)g(then)-116 1021 y Fj(lor)15 1033 y Fm(l;r)92
1021 y Fu(\()p Ft(R)q Fu(\))24 b(=)e Fi(;)p Fu(.)-116
1206 y Fk(Theorem)32 b(4.1.)40 b Fu(Supp)r(ose)35 b(w)n(e)f(are)g(giv)n
(en)g(a)h(con)n(v)n(ex)e(region)-116 1305 y Ft(R)q Fu(,)60
b(and)54 b Ft(k)j Fu(pairs)c(of)h(parallel)f(h)n(yp)r(erplanes)g(\()p
Ft(l)1535 1317 y Fm(i)1562 1305 y Ft(;)14 b(r)1636 1317
y Fm(i)1664 1305 y Fu(\))p Ft(;)g(i)67 b Fi(2)-116 1405
y(f)p Fu(1)p Ft(;)14 b(:)g(:)g(:)e(;)i(k)s Fi(g)41 b
Fu(\(see)h(Figure)f(2.b\).)79 b(F)-7 b(or)41 b(an)n(y)g
Ft(\014)51 b Fi(\025)46 b Fu(\()p Ft(k)31 b Fi(\000)c
Fu(1\))p Ft(=k)-116 1504 y Fu(\(and)46 b Ft(\014)57 b
Fi(\025)c Fu(1)p Ft(=)p Fu(2\),)c(either)d(there)f(exists)g(a)h(h)n(yp)
r(erplane)f Ft(m)-116 1604 y Fu(parallel)c(to)g(one)h(of)g(the)g(pairs)
f(whic)n(h)h(divides)g(the)g(region)-116 1704 y(in)n(to)i(t)n(w)n(o)g
(subregions)f(of)h(size)h(less)f(than)g Ft(\014)t Fi(j)p
Ft(R)q Fi(j)h Fu(or)f Fi(j)p Ft(P)12 b Fi(j)51 b(\025)-116
1815 y Fu(\(1)18 b Fi(\000)g Fu(\(1)g Fi(\000)g Ft(\014)t
Fu(\))p Ft(k)s Fu(\))p Fi(j)p Ft(R)q Fi(j)p Fu(,)29 b(where)e
Ft(P)35 b Fu(=)972 1753 y Fh(T)1041 1773 y Fm(k)1041
1840 y(i)p Fs(=1)1167 1815 y Fj(lor)1298 1827 y Fm(l)1319
1835 y Ff(i)1345 1827 y Fm(;r)1396 1835 y Ff(i)1426 1815
y Fu(\()p Ft(R)q Fu(\).)-116 1999 y Fl(Pr)l(o)l(of.)43
b Fu(Assume)33 b(that)h(there)f(do)r(es)h(not)f(exist)g(a)g(h)n(yp)r
(erplane)-116 2099 y Ft(m)38 b Fu(dividing)g(the)g(region)e(in)n(to)i
(t)n(w)n(o)f(small)h(subregions.)66 b(By)-116 2199 y(Lemma)47
b(4.1,)k(ev)n(ery)46 b(pair)h(m)n(ust)g(ha)n(v)n(e)g(a)g(maximal)f
(outer)-116 2298 y(region)36 b(for)g Ft(R)i Fu(or)f(w)n(e)g(w)n(ould)f
(ha)n(v)n(e)g(a)h(dividing)g(h)n(yp)r(erplane)-116 2398
y Ft(m)p Fu(.)67 b(F)-7 b(or)37 b(eac)n(h)g(pair)g(\()p
Ft(l)641 2410 y Fm(i)668 2398 y Ft(;)14 b(r)742 2410
y Fm(i)770 2398 y Fu(\),)41 b(let)d Ft(P)1049 2410 y
Fm(i)1117 2398 y Fu(=)h Fj(lor)1352 2410 y Fm(l)1373
2418 y Ff(i)1399 2410 y Fm(;r)1450 2418 y Ff(i)1480 2398
y Fu(\()p Ft(R)q Fu(\))f(b)r(e)g(the)-116 2497 y(large)26
b(outer)h(region)f(of)i Ft(R)g Fu(for)f(eac)n(h)g(pair)g(of)g(h)n(yp)r
(erplanes.)33 2597 y(If)i Ft(k)e Fu(=)d(1,)k(w)n(e)g(kno)n(w,)g(from)g
(Lemma)g(4.1,)g Fi(j)p Ft(P)1461 2609 y Fs(1)1498 2597
y Fi(j)d(\025)f Ft(\014)t Fi(j)p Ft(R)q Fi(j)g(\025)-116
2697 y Fu(\(1)f Fi(\000)g Fu(\(1)g Fi(\000)f Ft(\014)t
Fu(\))p Ft(k)s Fu(\))p Fi(j)p Ft(R)q Fi(j)p Fu(.)59 b(By)35
b(induction,)i(assume)d(the)h(theorem)-116 2796 y(holds)30
b(for)f(all)h(v)-5 b(alues)30 b(less)g(than)h Ft(k)s
Fu(.)44 b(Recall)30 b(from)g(set)g(theory)-116 2896 y(that)21
b(for)g(t)n(w)n(o)f(sets)g Ft(A)i Fu(and)f Ft(B)t Fu(,)h
Fi(j)p Ft(A)933 2834 y Fh(T)1016 2896 y Ft(B)t Fi(j)i
Fu(=)e Fi(j)p Ft(A)p Fi(j)5 b Fu(+)g Fi(j)p Ft(B)t Fi(j)g(\000)g(j)p
Ft(A)1687 2834 y Fh(S)1771 2896 y Ft(B)t Fi(j)p Fu(.)-116
3007 y(Let)42 b Ft(P)112 2977 y Fn(0)182 3007 y Fu(=)293
2945 y Fh(T)362 2965 y Fm(k)q Fn(\000)p Fs(1)362 3032
y Fm(i)p Fs(=1)502 3007 y Ft(P)555 3019 y Fm(i)583 3007
y Fu(.)80 b(W)-7 b(e)42 b(kno)n(w)f(that)h Fi(j)p Ft(P)1356
2977 y Fn(0)1393 2945 y Fh(S)1476 3007 y Ft(P)1529 3019
y Fm(k)1570 3007 y Fi(j)47 b(\024)g(j)p Ft(R)q Fi(j)p
Fu(.)-116 3107 y(Then,)31 b Ft(P)39 b Fu(=)27 b Ft(P)376
3077 y Fn(0)413 3044 y Fh(T)496 3107 y Ft(P)549 3119
y Fm(k)618 3107 y Fi(\))h(j)p Ft(P)12 b Fi(j)27 b(\025)g
Fu(\(1)20 b Fi(\000)g Fu(\(1)g Fi(\000)g Ft(\014)t Fu(\)\()p
Ft(k)k Fi(\000)c Fu(1\)\))p Fi(j)p Ft(R)q Fi(j)g Fu(+)-116
3206 y Ft(\014)t Fi(j)p Ft(R)q Fi(j)d(\000)f(j)p Ft(R)q
Fi(j)23 b Fu(=)g(\(1)16 b Fi(\000)h Fu(\(1)f Fi(\000)h
Ft(\014)t Fu(\))p Ft(k)s Fu(\))p Fi(j)p Ft(R)q Fi(j)p
Fu(.)37 b(Th)n(us,)27 b(it)g(is)g(true)f(for)h Ft(k)i
Fu(as)-116 3306 y(w)n(ell.)p 84 3306 50 50 v 33 3490
a(There)21 b(are)f(man)n(y)h(corollaries)d(that)k(can)f(b)r(e)h(deriv)n
(ed)e(from)-116 3590 y(this)27 b(simple)g(theorem.)36
b(F)-7 b(or)27 b(example,)g(if)g(the)h(in)n(tersection)e(of)-116
3690 y(all)i(the)i(large)d(outer)h(regions)g(is)g(empt)n(y)h(and)g
Ft(\014)g(>)c Fu(\()p Ft(k)e Fi(\000)18 b Fu(1\))p Ft(=k)s
Fu(,)-116 3789 y(a)23 b(h)n(yp)r(erplane)h(cut)g(m)n(ust)g(exist)g
(that)g(divides)g(the)g(region)f(in)n(to)-116 3889 y(t)n(w)n(o)i
(subregions)e(of)j(size)f(less)g(than)h Ft(\014)t Fi(j)p
Ft(R)q Fi(j)g Fu(eac)n(h)e(as)h(there)h(is)f(no)-116
3989 y(other)i(alternativ)n(e)f(lo)r(cation)h(for)g(the)h(p)r(oin)n(ts)
g(to)f(lie.)-116 4173 y Fk(Definition)32 b(4.3.)40 b
Fu(Giv)n(en)21 b(an)h Ft(\013)p Fu(-balanced)f(canonical)f(region)-116
4273 y Ft(R)29 b Fu(and)f(a)g(canonical)f(cut)i Ft(c)f
Fu(with)h(normal)24 b Ft(~)-39 b(v)1293 4285 y Fm(i)1321
4273 y Fu(,)29 b(sw)n(eep)f(a)g(cut)g Ft(c)1861 4242
y Fn(0)-116 4372 y Fu(from)33 b(the)g(opp)r(osing)f(cut)i(to)n(w)n
(ards)d Ft(c)p Fu(,)k(calling)d(the)i(region)e(of)-116
4472 y Ft(R)27 b Fu(b)r(et)n(w)n(een)g(these)g(t)n(w)n(o)g(cuts)g
Ft(P)12 b Fu(,)27 b(either)f(un)n(til)i Ft(P)39 b Fu(is)27
b(empt)n(y)g(or)-116 4571 y(just)36 b(b)r(efore)f Fj(casp)o
Fu(\()p Ft(P)12 b Fu(\))36 b Ft(>)g(\013)p Fu(.)62 b(Notice,)38
b(if)e Ft(P)12 b Fu(,)37 b(is)f(not)f(empt)n(y)-7 b(,)-116
4671 y(then)32 b Ft(P)43 b Fu(has)31 b(maxim)n(um)g(asp)r(ect)g(ratio.)
47 b(Call)31 b(the)h(region)e Ft(P)12 b Fu(,)-116 4771
y(the)28 b Fl(shield)j(r)l(e)l(gion)f(of)h Ft(c)f Fl(in)f
Ft(R)q Fl(,)h Fj(shield)1153 4783 y Fm(c)1187 4771 y
Fu(\()p Ft(R)q Fu(\).)-116 4955 y Fk(Theorem)i(4.2.)40
b Fu(Giv)n(en)30 b Ft(R)q Fu(,)h Ft(c)p Fu(,)h(and)e
Ft(c)1127 4925 y Fn(0)1181 4955 y Fu(as)f(de\014ned)i(ab)r(o)n(v)n(e,)f
(if)-116 5055 y Fj(shield)145 5067 y Fm(c)179 5055 y
Fu(\()p Ft(R)q Fu(\))23 b Fi(6)p Fu(=)g Fi(;)h Fu(and)g(w)n(e)g(con)n
(tin)n(ue)g(sw)n(eeping)f Ft(c)1471 5025 y Fn(0)1519
5055 y Fu(to)n(w)n(ards)g Ft(c)p Fu(,)-116 5154 y(then)c(the)h(region)e
(b)r(et)n(w)n(een)h Ft(c)g Fu(and)g Ft(c)996 5124 y Fn(0)1038
5154 y Fu(will)h(ha)n(v)n(e)e(an)g(un)n(balanced)-116
5254 y(asp)r(ect)27 b(ratio)g(un)n(til)h(it)g(b)r(ecomes)f(empt)n(y)-7
b(.)-116 5438 y Fl(Pr)l(o)l(of.)43 b Fu(In)n(tuitiv)n(ely)-7
b(,)40 b(if)f(a)e(con)n(v)n(ex)g(region)f Ft(R)j Fu(starts)e(out)g(fat)
-116 5538 y(and)i(in)i(the)f(pro)r(cess)e(of)i(cutting)g(in)h(a)e
(constan)n(t)g(direction)-116 5638 y(b)r(ecomes)29 b(skinn)n(y)-7
b(,)30 b(con)n(tin)n(uing)e(in)i(that)g(direction)f(will)h(nev)n(er)
-116 5737 y(mak)n(e)d(it)h(fat)f(again.)p 564 5737 V
1968 523 a Fk(Cor)n(ollar)-6 b(y)30 b(4.1.)41 b Fu(Giv)n(en)28
b(a)g(canonical)f(region)g Ft(R)q Fu(,)h(a)g(v)n(ector)1964
623 y Ft(~)-38 b(v)2008 635 y Fm(i)2069 623 y Fi(2)33
b(C)39 b Fu(and)33 b(a)g(reduction)h(factor)f(1)f Ft(>)h(\014)38
b Fi(\025)32 b Fu(1)p Ft(=)p Fu(2,)i(let)g Ft(b)g Fu(and)1968
722 y Ft(c)28 b Fu(b)r(e)g(the)h(t)n(w)n(o)e(opp)r(osing)g(canonical)g
(cuts)h(in)g Ft(R)h Fu(with)g(normal)1964 822 y Ft(~)-38
b(v)2008 834 y Fm(i)2036 822 y Fu(.)45 b(If)31 b Fj(shield)2452
834 y Fm(b)2485 822 y Fu(\()p Ft(R)q Fu(\))2627 760 y
Fh(T)2710 822 y Fj(shield)2972 834 y Fm(c)3006 822 y
Fu(\()p Ft(R)q Fu(\))d(=)g Fi(;)p Fu(,)i(then)i(either)e(a)g(cut)1968
922 y(exists)35 b(whic)n(h)g(divides)g Ft(R)h Fu(in)n(to)f(t)n(w)n(o)f
Ft(\013)p Fu(-balanced)h(region)f Ft(R)3931 934 y Fs(1)1968
1021 y Fu(and)h Ft(R)2200 1033 y Fs(2)2273 1021 y Fu(eac)n(h)f(with)i
(less)f(than)h Ft(\014)t Fi(j)p Ft(R)q Fi(j)g Fu(p)r(oin)n(ts)f(or)g
(one)g(of)g(the)1968 1121 y(shield)27 b(regions)f(has)h(more)g(than)h
Ft(\014)t Fi(j)p Ft(R)q Fi(j)g Fu(p)r(oin)n(ts.)1968
1312 y Fl(Pr)l(o)l(of.)43 b Fu(Since)32 b(the)g(t)n(w)n(o)f(regions)f
(do)i(not)g(in)n(tersect,)g(w)n(e)g(ha)n(v)n(e)1968 1411
y(the)38 b(t)n(w)n(o)g(cuts)h(de\014ning)f(eac)n(h)g(shield)h(divide)f
Ft(R)h Fu(in)n(to)g(three)1968 1511 y(regions,)46 b(as)e(in)g(Lemma)g
(4.1,)k(the)c(size)g(constrain)n(ts)f(hold.)1968 1611
y(More)34 b(imp)r(ortan)n(tly)-7 b(,)37 b(b)n(y)e(the)g(de\014nition)h
(of)f(a)g(shield)g(region)1968 1710 y(\(4.3\))i(and)h(the)g(fact)g
(that)g(the)g(t)n(w)n(o)f(shield)h(regions)e(do)i(not)1968
1810 y(in)n(tersect,)43 b(an)n(y)d(cut)g(lying)g(b)r(et)n(w)n(een)h
(the)g(t)n(w)n(o)e(regions)g(will)1968 1910 y(pro)r(duce)27
b(t)n(w)n(o)g Ft(\013)p Fu(-balanced)g(regions.)p 3182
1910 V 2117 2100 a(W)-7 b(e)29 b(refer)f(to)h(the)g(shield)f(region)g
(from)g(the)h(ab)r(o)n(v)n(e)e(corol-)1968 2200 y(lary)21
b(as)h(the)h Fl(lar)l(ge)j(outer)f(shield)p Fu(,)h Fj(los)3156
2212 y Fm(i)3184 2200 y Fu(\()p Ft(R)q Fu(\),)e(where)e
Fj(los)3725 2212 y Fm(i)3753 2200 y Fu(\()p Ft(R)q Fu(\))h(=)1968
2300 y Fi(;)31 b Fu(if)i(a)e(dividing)h(cut)h(exists.)50
b(Notice,)33 b(the)f(corollary)e(corres-)1968 2399 y(p)r(onds)39
b(to)g(Lemma)f(4.1,)j(with)f(the)f(added)g(guaran)n(tee)e(that)1968
2499 y(the)h(t)n(w)n(o)e(regions)g(pro)r(duced)h(from)h(the)f(cut)h(c)n
(hosen)f(are)f Ft(\013)p Fu(-)1968 2599 y(balanced.)71
b(F)-7 b(urthermore,)41 b(this)e(corollary)e(ma)n(y)h(b)r(e)i(exten-)
1968 2698 y(ded)21 b(to)g(m)n(ultiple)h(h)n(yp)r(erplane)f(directions,)
h(i.e.,)h(extends)e(The-)1968 2798 y(orem)26 b(4.1.)1968
2989 y Fk(Definition)32 b(4.4.)40 b Fu(F)-7 b(or)27 b(a)h(giv)n(en)f
(canonical)f(region)h Ft(R)h Fu(and)g(a)1968 3088 y(canonical)33
b(corner)g(cut)h Ft(c)p Fu(,)j(the)d Fl(length)p Fu(,)j
Fj(len)3399 3100 y Fm(c)3432 3088 y Fu(\()p Ft(R)q Fu(\),)g(is)d
(de\014ned)1968 3188 y(as)k(the)h(distance)f(from)h(the)g(cutting)g(h)n
(yp)r(erplane)f Ft(c)h Fu(to)f(the)1968 3288 y(asso)r(ciated)27
b(corner)g(of)i(the)g(b)r(ounding)g(h)n(yp)r(erb)r(o)n(x)f(con)n
(taining)1968 3387 y Ft(R)q Fu(,)g(i.e.,)i(ho)n(w)e(far)g(in)n(to)g
(the)i(region)d(do)r(es)h Ft(c)h Fu(cut,)g(measured)f(in)1968
3487 y(the)g Ft(L)2168 3499 y Fn(1)2265 3487 y Fu(metric.)2117
3678 y(Imagine)k(an)n(y)g(axis-parallel)f(h)n(yp)r(erb)r(o)n(x.)51
b(If)33 b(w)n(e)g(w)n(ere)f(to)1968 3778 y(remo)n(v)n(e)i(an)n(y)i
(corner)e(and)i(con)n(tin)n(ue)g(cutting)h(in)n(w)n(ard,)g(after)1968
3877 y(tra)n(v)n(eling)25 b(a)j(certain)f(length)g(w)n(e)h(w)n(ould)f
(b)r(egin)h(to)f(shrink)g(the)1968 3977 y(b)r(ounding)34
b(b)r(o)n(x)f(of)i(the)f(remaining)f(region,)i(in)f(at)g(least)g(one)
1968 4076 y(of)24 b(the)g(axis)g(dimensions.)35 b(After)25
b(going)e(ev)n(en)g(a)h(little)h(farther,)1968 4176 y(w)n(e)38
b(w)n(ould)h(b)r(egin)g(to)f(shrink)h(the)g(b)r(ounding)g(b)r(o)n(x)g
(in)g(ev)n(ery)1968 4276 y(dimension)g(sim)n(ultaneously)-7
b(.)72 b(The)40 b(instan)n(t)f(at)h(whic)n(h)f(this)1968
4375 y(happ)r(ens)e(is)f(the)i(largest)d(the)i(corner)f(cut)h(can)g(p)r
(ossibly)f(b)r(e)1968 4475 y(while)31 b(guaran)n(teeing)f(that)i(the)g
(b)r(ounding)g(h)n(yp)r(erb)r(o)n(x)f(of)g(the)1968 4575
y(remaining)26 b(region)g(is)h(no)n(w)g(actually)g(a)g(h)n(yp)r(ercub)r
(e.)37 b(Because)1968 4674 y(w)n(e)31 b(exploit)h(this)h(prop)r(ert)n
(y)e(in)h(pro)n(ving)f(certain)g(regions)g(are)1968 4774
y(one-cuttable,)48 b(w)n(e)c(more)f(formally)h(state)g(and)g(pro)n(v)n
(e)f(this)1968 4873 y(corollary)25 b(next.)1968 5064
y Fk(Cor)n(ollar)-6 b(y)30 b(4.2.)41 b Fu(F)-7 b(or)105
b(a)g(giv)n(en)g(canonical)f(region)1968 5164 y Ft(R)78
b Fu(and)g(a)g(canonical)f(corner)g(cut)h Ft(c)p Fu(,)91
b Fj(len)3635 5176 y Fm(c)3668 5164 y Fu(\()p Ft(R)q
Fu(\))108 b Fi(\024)1968 5264 y Fu(max)2122 5276 y Fm(i)p
Fn(2C)2233 5264 y Fu(\()p Fj(width)2484 5276 y Fm(i)2511
5264 y Fu(\()p Ft(R)q Fu(\)\)\(1)50 b Fi(\000)e Fu(1)p
Ft(=d)p Fu(\).)175 b(If)74 b(equalit)n(y)f(holds,)1968
5363 y(then)28 b Fj(basp)n Fu(\()p Ft(R)q Fu(\))23 b(=)g(1.)1968
5554 y Fl(Pr)l(o)l(of.)43 b Fu(Wlog,)48 b(assume)43 b(that)i
Ft(c)51 b Fu(=)f(\(1)p Ft(;)14 b Fu(1)p Ft(;)g(:)g(:)g(:)f(;)h
Fu(1\),)48 b(i.e.,)h(the)1968 5654 y(upp)r(er)37 b(left)h(hand)f
(corner,)h(and)e(the)i(corresp)r(onding)d(corner)1968
5753 y(of)48 b(the)h(b)r(ounding)g(h)n(yp)r(ercub)r(e)f(for)g
Ft(R)i Fu(b)r(e)e(placed)h(at)f(the)p eop
%%Page: 8 8
8 7 bop 116 299 a Fu(8)116 523 y(origin.)50 b(This)33
b(mak)n(es)e(the)i(equation)f(of)g(the)h(h)n(yp)r(erplane)f(for)116
623 y Ft(c)p Fu(,)c(\(1)p Ft(;)14 b Fu(1)p Ft(;)g(:)g(:)g(:)f(;)h
Fu(1\))o Ft(~)-41 b(x)23 b Fu(=)g Fj(len)902 635 y Fm(c)936
623 y Fu(\()p Ft(R)q Fu(\))p Ft(d)p Fu(.)266 722 y(Let)d
Ft(x)j Fu(=)g(max)719 734 y Fm(i)p Fn(2C)831 722 y Fu(\()p
Fj(width)1081 734 y Fm(i)1109 722 y Fu(\()p Ft(R)q Fu(\)\))d(b)r(e)g
(the)h(maxim)n(um)f(width)116 822 y(b)r(et)n(w)n(een)30
b(all)f(of)h(the)g(b)r(ounding)g(canonical)e(cuts.)43
b(This)30 b(m)n(ust)116 922 y(then)20 b(corresp)r(ond)e(to)h(a)g
(particular)f(pair)h(of)g(axis-parallel)e(cuts.)116 1021
y(Wlog,)33 b(assume)e(that)h(they)g(are)f Ft(c)1209 991
y Fs(1)1246 1021 y Fu(,)j(\(1)p Ft(;)14 b Fu(0)p Ft(;)g(:)g(:)g(:)e(;)i
Fu(0\))o Ft(~)-41 b(x)31 b Fu(=)f(0,)i(and)116 1121 y(its)f(opp)r
(osing)e(cut)i Ft(b)768 1091 y Fs(1)805 1121 y Fu(,)g(\(1)p
Ft(;)14 b Fu(0)p Ft(;)g(:)g(:)g(:)f(;)h Fu(0\))o Ft(~)-41
b(x)28 b Fu(=)f Ft(x)p Fu(,)k(i.e.)46 b(the)30 b(left)h(and)116
1220 y(righ)n(t)c(sides.)266 1320 y(No)n(w,)c(assume)f(that)h
Fj(len)1061 1332 y Fm(c)1095 1320 y Fu(\()p Ft(R)q Fu(\))g
Ft(>)g(x)p Fu(\(1)8 b Fi(\000)g Fu(1)p Ft(=d)p Fu(\))23
b(=)1816 1287 y Fm(x)p 1816 1301 38 4 v 1818 1349 a(d)1863
1320 y Fu(\()p Ft(d)8 b Fi(\000)g Fu(1\).)116 1420 y(Let)45
b(the)g(in)n(tersection)f(of)h(h)n(yp)r(erplanes)f Ft(c)h
Fu(and)f Ft(c)1789 1390 y Fs(1)1872 1420 y Fu(b)r(e)h(the)116
1519 y(h)n(yp)r(erplane)28 b Ft(c)580 1489 y Fn(0)603
1519 y Fu(,)h(\(0)p Ft(;)14 b Fu(1)p Ft(;)g Fu(1)p Ft(;)g(:)g(:)g(:)e
(;)i Fu(1\))o Ft(~)-41 b(x)25 b Fu(=)f Fj(len)1436 1531
y Fm(c)1469 1519 y Fu(\()p Ft(R)q Fu(\))p Ft(d)p Fu(.)40
b(Notice)29 b(that)116 1619 y(since)h Ft(c)372 1557 y
Fh(T)455 1619 y Ft(R)h Fu(and)f Ft(c)749 1589 y Fs(1)800
1557 y Fh(T)883 1619 y Ft(R)q Fu(,)h Ft(c)1037 1589 y
Fn(0)1074 1557 y Fh(T)1157 1619 y Ft(R)d Fi(6)p Fu(=)f
Fi(;)p Fu(.)44 b(Ho)n(w)n(ev)n(er,)29 b(no)h(p)r(oin)n(t)116
1719 y Ft(p)g Fi(2)g Ft(R)j Fu(can)e(lie)h(on)f Ft(c)795
1688 y Fn(0)818 1719 y Fu(,)i(as)e(\(0)p Ft(;)14 b Fu(1)p
Ft(;)g Fu(1)p Ft(;)g(:)g(:)g(:)e(;)i Fu(1\))p Ft(p)30
b Fi(\024)f Ft(x)22 b Fi(\003)e Fu(\()p Ft(d)i Fi(\000)f
Fu(1\))29 b(=)126 1785 y Fm(x)p 126 1799 V 128 1847 a(d)174
1818 y Fu(\()p Ft(d)19 b Fi(\000)f Fu(1\)\()p Ft(d)p
Fu(\))23 b Ft(<)g Fj(len)774 1830 y Fm(c)808 1818 y Fu(\()p
Ft(R)q Fu(\))p Ft(d)p Fu(.)37 b(Th)n(us,)27 b Ft(c)1308
1788 y Fn(0)1345 1756 y Fh(T)1429 1818 y Ft(R)c Fu(=)g
Fi(;)p Fu(.)36 b Fi(\)\()266 1918 y Fu(F)-7 b(or)29 b(the)h(second)f
(statemen)n(t,)i(if)f Fj(len)1453 1930 y Fm(c)1487 1918
y Fu(\()p Ft(R)q Fu(\))d(=)f Ft(x)p Fu(\(1)20 b Fi(\000)g
Fu(1)p Ft(=d)p Fu(\))116 2017 y(and)29 b(follo)n(wing)e(a)i(similar)f
(argumen)n(t)f(from)i(ab)r(o)n(v)n(e,)f(w)n(e)g(kno)n(w)116
2117 y(that)c(the)f(distance)g(from)g(ev)n(ery)e(axis-parallel)g(side)i
(m)n(ust)g(also)116 2217 y(b)r(e)36 b(at)e(length)h Ft(x)p
Fu(,)j(or)c(again)g(no)g(p)r(oin)n(t)i(in)f Ft(R)g Fu(can)g(lie)g(on)g
(the)116 2316 y(in)n(tersection)27 b(of)h(the)g(t)n(w)n(o)e(h)n(yp)r
(erplanes.)p 1448 2316 50 50 v 116 2490 a Fk(Lemma)32
b(4.2.)40 b Fu(F)-7 b(or)23 b(an)g Ft(\013)p Fu(-balanced)g(canonical)f
(region)g Ft(R)i Fu(and)116 2589 y(a)j(corner)g(cut)h
Ft(c)p Fu(,)324 2762 y(max)347 2816 y Fm(i)p Fn(2C)478
2762 y Fu(\()p Fj(width)729 2774 y Fm(i)756 2762 y Fu(\()p
Ft(R)q Fu(\)\))c Fi(\024)e Ft(d)p Fu(\()p Fj(len)1234
2774 y Fm(c)1267 2762 y Fu(\()p Ft(R)q Fu(\))d(+)f Fj(width)1715
2774 y Fm(c)1749 2762 y Fu(\()p Ft(R)q Fu(\)\))116 2968
y Fl(Pr)l(o)l(of.)43 b Fu(F)-7 b(or)37 b(simplicit)n(y)-7
b(,)40 b(assume)c(that)i(the)f(corner)f(cut)i(has)116
3068 y(normal)45 b(v)n(ector,)h Ft(~)-38 b(v)752 3080
y Fm(i)833 3068 y Fu(=)54 b(\(1)p Ft(;)14 b Fu(1)p Ft(;)g(:)g(:)g(:)e
(;)i Fu(1\))46 b(and)g(the)g(asso)r(ciated)116 3168 y(corner)30
b(of)h(the)h(b)r(ounding)f(h)n(yp)r(erb)r(o)n(x)f(is)h(at)g(the)h
(origin.)46 b(The)116 3267 y(h)n(yp)r(erplane)33 b(equation)g(of)g(the)
h(corner)d(cut)j Ft(c)f Fu(is)h(then)c Ft(~)-38 b(v)1945
3279 y Fm(i)1971 3267 y Ft(~)d(x)33 b Fu(=)116 3367 y
Ft(d)p Fj(len)290 3379 y Fm(c)324 3367 y Fu(\()p Ft(R)q
Fu(\))42 b(and)g(the)g(opp)r(osing)f(b)r(ounding)h(corner)e(cut)j(has)
116 3466 y(equation)c Ft(~)-39 b(v)510 3478 y Fm(i)537
3466 y Ft(~)e(x)48 b Fu(=)f Ft(d)p Fu(\()p Fj(len)951
3478 y Fm(c)985 3466 y Fu(\()p Ft(R)q Fu(\))28 b(+)g
Fj(width)1452 3478 y Fm(c)1486 3466 y Fu(\()p Ft(R)q
Fu(\)\).)81 b(Th)n(us,)46 b(the)116 3566 y(distance)52
b(b)r(et)n(w)n(een)g(an)n(y)f(t)n(w)n(o)g(axis-parallel)e(sides)j(of)g
(the)116 3666 y(region)35 b(and)g(its)h(asso)r(ciated)e(b)r(ounding)i
(h)n(yp)r(erb)r(o)n(x)f(m)n(ust)h(b)r(e)116 3765 y(no)h(more)g(than)h
Ft(d)p Fu(\()p Fj(len)869 3777 y Fm(c)903 3765 y Fu(\()p
Ft(R)q Fu(\))25 b(+)g Fj(width)1364 3777 y Fm(c)1397
3765 y Fu(\()p Ft(R)q Fu(\)\).)67 b(Since)38 b(w)n(e)f(are)116
3865 y(using)e(the)h Ft(L)549 3877 y Fn(1)655 3865 y
Fu(metric,)h(the)f(maxim)n(um)g(distance)f(b)r(et)n(w)n(een)116
3965 y(an)n(y)23 b(t)n(w)n(o)g(b)r(ounding)h(h)n(yp)r(erplanes)f(in)h
Ft(R)h Fu(m)n(ust)f(corresp)r(ond)e(to)116 4064 y(one)32
b(of)g(the)g(axis-parallel)d(sides,)k(i.e.,)g(a)f(h)n(yp)r(erplane)f
(on)h(the)116 4164 y(b)r(ounding)24 b(b)r(o)n(x,)g(and)f(the)h(result)f
(follo)n(ws)g(\(see)g(Figure)g(4.a\).)p 2067 4164 V 116
4411 a Fk(Lemma)32 b(4.3.)40 b Fx(\(Corner-Cut)47 b(Shield)f(Lemma\))39
b Fu(F)-7 b(or)40 b(an)116 4510 y Ft(\013)p Fu(-balanced)26
b(canonical)f(region)g Ft(R)i Fu(and)f(a)g(corner)f(cut)i
Ft(c)c Fi(2)g(C)2052 4480 y Fn(00)2094 4510 y Fu(,)116
4610 y Fj(width)334 4622 y Fm(c)368 4610 y Fu(\()p Fj(shield)662
4622 y Fm(c)696 4610 y Fu(\()p Ft(R)q Fu(\)\))g Fi(\024)g
Fj(len)1098 4622 y Fm(c)1131 4610 y Fu(\()p Ft(R)q Fu(\))p
Ft(=)p Fu(\()1343 4577 y Fm(\013)p 1343 4591 44 4 v 1347
4639 a(d)1415 4610 y Fi(\000)18 b Fu(1\),)28 b(for)f
Ft(\013)c(>)g(d)p Fu(.)116 4783 y Fl(Pr)l(o)l(of.)43
b Fu(Let)54 b Ft(x)67 b Fu(=)f Fj(len)927 4795 y Fm(c)961
4783 y Fu(\()p Ft(R)q Fu(\),)61 b Ft(P)78 b Fu(=)66 b
Fj(shield)1697 4795 y Fm(c)1731 4783 y Fu(\()p Ft(R)q
Fu(\),)60 b Ft(y)69 b Fu(=)116 4883 y Fj(width)334 4895
y Fm(c)368 4883 y Fu(\()p Ft(P)12 b Fu(\),)46 b(and)41
b Ft(z)50 b Fu(=)c Ft(max)1105 4895 y Fm(i)p Fn(2)p Fm(C)1229
4883 y Fu(\()p Fj(width)1479 4895 y Fm(i)1507 4883 y
Fu(\()p Ft(P)12 b Fu(\)\).)80 b(W)-7 b(e)42 b(kno)n(w)116
4982 y(from)d(Lemma)g(4.2)g(that)h Ft(z)46 b Fi(\024)c
Fu(\()p Ft(x)27 b Fu(+)f Ft(y)s Fu(\))p Ft(d)p Fu(.)73
b(Since)39 b Ft(P)51 b Fu(is)40 b(the)116 5082 y(shield)28
b(region)f(for)h Ft(c)p Fu(,)g Fj(casp)n Fu(\()p Ft(P)12
b Fu(\))25 b(=)e Ft(\013)p Fu(.)39 b(Because)27 b(w)n(e)g(are)g(using)
116 5182 y(the)g Ft(L)315 5194 y Fn(1)411 5182 y Fu(metric,)g
Ft(y)i Fu(is)e(the)g(minim)n(um)g(width)g(in)f Ft(P)12
b Fu(,)27 b(implying)116 5281 y(that)k Ft(z)t(=y)e Fu(=)e
Ft(\013)h Fi(\))g Ft(y)i Fu(=)d Ft(z)t(=\013)g Fi(\024)g
Fu(\()p Ft(x)21 b Fu(+)f Ft(y)s Fu(\))p Ft(d=\013)p Fu(.)45
b(Solving)30 b(for)f Ft(y)s Fu(,)116 5381 y(w)n(e)e(get)h
Ft(y)e Fi(\024)c Ft(xd=)p Fu(\()p Ft(\013)e Fi(\000)e
Ft(d)p Fu(\))23 b(=)g Ft(x=)p Fu(\()1168 5348 y Fm(\013)p
1168 5362 V 1172 5410 a(d)1240 5381 y Fi(\000)18 b Fu(1\))27
b(\(see)h(Figure)f(2.b\).)p 2055 5381 50 50 v 266 5554
a(This)32 b(lemma)g(is)g(where)g(the)g(main)h(adv)-5
b(an)n(tage)30 b(to)i(using)116 5654 y(corner)k(cuts)i(comes)f(in.)66
b(If)38 b(the)g(corner)e(cut)i(is)f(small,)j(i.e.,)116
5753 y(cuts)26 b(v)n(ery)f(little)i(of)f(the)h(region,)e(w)n(e)g(can)h
(mak)n(e)f(a)h(cut)h(in)f(that)2200 523 y(direction)i(v)n(ery)f(close)g
(to)i(this)f(corner)f(cut,)i(in)f(prop)r(ortion)f(to)2200
623 y(its)35 b(size)f(and)g(disregarding)e(the)i(dimensions)g(of)h(the)
f(rest)g(of)2200 722 y(the)28 b(region)e(en)n(tirely)-7
b(.)2200 922 y Fx(4.2)95 b Ft(k)s Fx(-Cut)48 b(Existence)h(Theorem.)41
b Fu(Before)g(w)n(e)i(pro)n(v)n(e)2200 1021 y(that)26
b(ev)n(ery)e(balanced)g(canonical)g(region)g(is)i(\()p
Ft(d)14 b Fu(+)f(2\))p Fl(-cuttable)p Fu(,)2200 1121
y(w)n(e)35 b(\014rst)g(describ)r(e)g(a)g(few)h(regions)e(that)i(are)e
Ft(k)s Fu(-cuttable)i(for)2200 1220 y Ft(k)26 b Fi(\024)d
Fu(3.)2200 1390 y Fk(Theorem)32 b(4.3.)40 b Fu(F)-7 b(or)43
b Ft(\014)52 b(>)c Fu(\()p Ft(d)30 b Fi(\000)e Fu(1\))p
Ft(=d)42 b Fu(and)h Ft(\013)49 b(>)f Fu(2)p Ft(d)p Fu(,)e(an)2200
1490 y Ft(\013)p Fu(-balanced)34 b(canonical)g(region)f
Ft(R)i Fu(is)g(one-cuttable)f(if)h(there)2200 1590 y(exists)24
b(a)g(corner)e(cut)j Ft(c)e Fi(2)g(C)3068 1560 y Fn(00)3135
1590 y Fu(with)h(opp)r(osing)f(cut)i Ft(b)f Fu(suc)n(h)g(that)2260
1746 y(1.)41 b Fj(len)2497 1758 y Fm(b)2530 1746 y Fu(\()p
Ft(R)q Fu(\))24 b(=)e(max)2924 1758 y Fm(i)p Fn(2C)3035
1746 y Fu(\()p Fj(width)3285 1758 y Fm(i)3313 1746 y
Fu(\()p Ft(R)q Fu(\)\)\(1)d Fi(\000)f Fu(1)p Ft(=d)p
Fu(\),)2260 1876 y(2.)41 b Fj(len)2497 1888 y Fm(c)2531
1876 y Fu(\()p Ft(R)q Fu(\))23 b Ft(>)g Fu(max)2924 1888
y Fm(i)p Fn(2C)3035 1876 y Fu(\()p Fj(width)3286 1888
y Fm(i)3313 1876 y Fu(\()p Ft(R)q Fu(\)\)\(1)p Ft(=\013)p
Fu(\).)2200 2102 y Fl(Pr)l(o)l(of.)43 b Fu(Wlog,)66 b(assume)57
b(that)i Ft(c)74 b Fu(=)f(\(1)p Ft(;)14 b Fu(1)p Ft(;)g(:)g(:)g(:)f(;)h
Fu(1\).)129 b(Let)2200 2202 y Ft(x)52 b Fu(=)f(max)2569
2214 y Fm(i)p Fn(2C)2681 2202 y Fu(\()p Fj(width)2931
2214 y Fm(i)2959 2202 y Fu(\()p Ft(R)q Fu(\)\).)88 b(Recall)44
b(from)h(corollary)d(4.2,)2200 2301 y Fj(basp)n Fu(\()p
Ft(R)q Fu(\))e(=)e(1.)66 b(No)n(w,)39 b(let)f(us)f(lo)r(ok)f(at)h(the)h
(v)-5 b(arious)36 b(shield)2200 2401 y(regions)43 b(for)i(eac)n(h)f(of)
h(the)g(axis-parallel)e(directions,)i Ft(~)-38 b(v)4066
2413 y Fm(i)4146 2401 y Fi(2)2200 2501 y(C)2249 2471
y Fn(0)2272 2501 y Fu(,)49 b(of)c(the)g(neigh)n(b)r(oring)e(face,)48
b Ft(b)3333 2471 y Fm(i)3361 2501 y Fu(,)h(of)44 b Ft(b)p
Fu(.)88 b(If)45 b(w)n(e)f(lo)r(ok)g(at)2200 2600 y(an)n(y)49
b(h)n(yp)r(erspace)e(cut)j(along)e(this)h(direction,)55
b(the)49 b(region)2200 2700 y(formed)34 b(to)n(w)n(ards)d(this)j(neigh)
n(b)r(oring)f(face)g(will)h(alw)n(a)n(ys)e(ha)n(v)n(e)2200
2800 y Fj(basp)n Fu(\()p Ft(R)q Fu(\))24 b(=)e(1.)37
b(This)27 b(is)g(b)r(ecause)g(of)h(the)f(corner)f(cut)i
Ft(b)f Fu(whic)n(h)2200 2899 y(cuts)k(ev)n(ery)f(neigh)n(b)r(oring)g
(face)h(sim)n(ultaneously)-7 b(.)46 b(Therefore,)2200
2999 y Ft(P)2253 3011 y Fm(i)2318 2999 y Fu(=)37 b Fj(shield)2682
3015 y Fm(b)2711 2998 y Ff(i)2741 2999 y Fu(\()p Ft(R)q
Fu(\))h(=)f Fi(;)p Fu(.)62 b(In)37 b(the)f(other)g(direction,)i
Ft(Q)4072 3011 y Fm(i)4136 2999 y Fu(=)2200 3098 y Fj(shield)2462
3114 y Fm(c)2492 3098 y Ff(i)8 b Fu(\()p Ft(R)q Fu(\),)33
b(has)e(balanced)g(asp)r(ect)h(ratio)e Ft(\013)p Fu(,)k(this)e(implies)
2200 3198 y(that)i Fj(width)2604 3210 y Fm(c)2638 3198
y Fu(\()p Ft(R)q Fu(\))g Fi(\024)f Ft(x=\013)p Fu(.)57
b(W)-7 b(e)34 b(can)f(do)h(this)g(for)g(ev)n(ery)e(one)2200
3298 y(of)25 b(the)g(axis-parallel)d(directions.)36 b(W)-7
b(e)25 b(ha)n(v)n(e)e Ft(d)i Fu(pairs)f(of)h(shield)2200
3397 y(regions)d(\()p Ft(P)2563 3409 y Fm(i)2591 3397
y Ft(;)14 b(Q)2694 3409 y Fm(i)2721 3397 y Fu(\))p Ft(;)g
Fi(8)p Ft(i)22 b Fi(2)i Fu(\(1)p Ft(;)14 b(:)g(:)g(:)f(;)h(d)p
Fu(\).)36 b(F)-7 b(rom)23 b(corollary)e(4.1,)j(this)2200
3497 y(means)g(that)g(for)f(an)n(y)g Ft(\014)28 b(>)22
b Fu(\()p Ft(d)11 b Fi(\000)g Fu(1\))p Ft(=d)24 b Fu(either)g(a)g
(one-cut)f(exists)2200 3597 y(or)34 b(at)g(least)g(\(1)23
b Fi(\000)f Fu(\(1)h Fi(\000)g Ft(\014)t Fu(\))p Ft(d)p
Fu(\))p Fi(j)p Ft(R)q Fi(j)35 b Ft(>)f Fu(0)g(p)r(oin)n(ts)g(lies)g(in)
h(one)f(of)2200 3696 y(the)25 b(in)n(tersections)e(of)h(the)g(regions.)
34 b(Let)25 b(us)f(determine)g(whic)n(h)2200 3796 y(in)n(tersection)g
(of)h(regions)f(this)h(could)g(b)r(e.)36 b(If)26 b(it)f(con)n(tained)g
(an)n(y)2200 3895 y(of)f(the)h Ft(P)2484 3907 y Fm(i)2537
3895 y Fu(regions,)e(the)i(in)n(tersection)f(w)n(ould)g(b)r(e)h(empt)n
(y)f(as)g Ft(P)4173 3907 y Fm(i)2200 3995 y Fu(is)36
b(empt)n(y)-7 b(,)39 b(notice)d(the)h(strictly)f(greater)e(than)i(0)g
(condition.)2416 5112 y @beginspecial 51 @llx 463 @lly
483 @urx 723 @ury 1133 @rhi @setspecial
%%BeginDocument: fig/F4.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Cricket Draw III
%%Title: F4
%%BoundingBox: 51 463 483 723 
%%DocumentData: Clean7Bit
%%CreationDate: 7/6/98 8:12 AM
%%DocumentFonts: Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%ColorUsage: Color
%%EndComments
save
200 dict begin
%%BeginProlog
/FindFlatness %% Proc -- %%
{
{
dup 
{flattenpath exec} stopped
{
pop currentflat 100 ge {exit} if 
currentflat 1.25 mul setflat
}
{exit} ifelse
} bind loop
pop
newpath
} def
/QDShow %% string qdwidth -- %%
{
1 index length 1 le
{
pop show
}
{
1 index stringwidth pop sub 1 index length 1 sub div 0 3 -1 roll ashow
} ifelse
} def
/PathText %% string offset -- %%
{
/cd_FM true def
/cd_offset exch def
/cd_string exch def
/cd_offset cd_offset cd_string 0 1 getinterval stringwidth pop 2 div add def
/cd_pathdist 0 def 
/cd_setdist cd_offset def
/cd_charcount 0 def
gsave
flattenpath 
{mtp}{ltp}{ctp}{cpp}pathforall 
grestore
} bind def
/mtp 
{
/cd_newy exch def
/cd_newx exch def
/cd_firstx cd_newx def
/cd_firsty cd_newy def
/cd_ovr 
cd_FM 
{cd_offset /cd_FM false def}
{0} ifelse 
def 
cd_newx cd_newy transform 
/cd_cpy exch def
/cd_cpx exch def
}bind def
/ltp 
{
/cd_oldx cd_newx def
/cd_oldy cd_newy def
/cd_newy exch def
/cd_newx exch def
/cd_dx cd_newx cd_oldx sub def
/cd_dy cd_newy cd_oldy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt def 
cd_dist 0 ne
{
/cd_dsx cd_dx cd_dist div cd_ovr mul def 
/cd_dsy cd_dy cd_dist div cd_ovr mul def 
cd_oldx cd_dsx add cd_oldy cd_dsy add transform
/cd_cpy exch def
/cd_cpx exch def
/cd_pathdist cd_pathdist cd_dist add def
{
cd_setdist cd_pathdist le
{
cd_charcount cd_string length lt
{setchar}
{exit} ifelse
}
{
/cd_ovr cd_setdist cd_pathdist sub def
exit
} ifelse
}loop
} if
} bind def
/cpp 
{
cd_firstx cd_firsty ltp 
cd_firstx cd_firsty mtp
} bind def 
/setchar 
{
/cd_char cd_string cd_charcount 1 getinterval def
/cd_charcount cd_charcount 1 add def
/cd_charwidth cd_char stringwidth pop 2 div def 
gsave
cd_cpx cd_cpy itransform translate
cd_dy cd_dx atan rotate 
cd_charwidth neg 0 moveto 
cd_char 
cd_setdist 0 lt 
{stringwidth pop 0 rmoveto}
{show} ifelse
cd_charcount cd_string length lt
{
cd_string cd_charcount 1 getinterval stringwidth pop 2 div 0 rmoveto
} if
currentpoint transform 
/cd_cpy exch def 
/cd_cpx exch def 
grestore
/cd_setdist cd_setdist cd_charwidth add def
/cd_pathoffset cd_pathoffset cd_charwidth 2 mul add store
cd_charcount cd_string length lt
{
/cd_setdist cd_setdist cd_string cd_charcount 1 getinterval stringwidth pop 2 div add def
} if
} bind def
/OffsetCalc
{
/cd_textlength exch def
/cd_just exch def
/cd_dist 0 def
gsave
flattenpath
{
/cd_newy exch def 
/cd_newx exch def
/cd_firsty cd_newy def
/cd_firstx cd_newx def
}
{
/cd_oldy exch def
/cd_oldx exch def
/cd_dx cd_oldx cd_newx sub def 
/cd_dy cd_oldy cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
/cd_newx cd_oldx def
/cd_newy cd_oldy def
}
{
}
{
/cd_dx cd_firstx cd_newx sub def
/cd_dy cd_firsty cd_newy sub def
/cd_dist cd_dx dup mul cd_dy dup mul add sqrt cd_dist add def
}
pathforall
cd_just 0 eq
{
/cd_pathoffset 0 store
} if
cd_just 1 eq
{
/cd_pathoffset cd_dist cd_textlength sub 2 div store
}if
cd_just 2 eq
{
/cd_pathoffset cd_dist cd_textlength sub store
}if
grestore
} bind def
/MakeUnderlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
20 dict begin
exch /BaseFont exch findfont def
/uniqueid 
BaseFont dup /UniqueID known 
{/UniqueID get 1 add}
{pop 1} ifelse
def
/FontType 3 def
/Upos 
BaseFont /FontInfo 2 copy known
{
get /UnderlinePosition 2 copy known
{get}
{pop pop -100 }ifelse
}
{ pop pop -100 }ifelse 
def
/Uwid 
BaseFont /FontInfo 2 copy known
{
get /UnderlineThickness 2 copy known
{get}
{pop pop 50} ifelse
}
{pop pop 50} ifelse
def
/FontMatrix BaseFont /FontMatrix get def
/FontBBox BaseFont /FontBBox get
dup 1 get Upos gt
{
dup 1 Upos put
}if
def
/Encoding BaseFont /Encoding get def
/theChar 1 string def
/BuildChar
{
exch
begin
theChar 0 3 -1 roll put
BaseFont 1000 scalefont setfont
theChar stringwidth FontBBox setcachedevice
0 0 moveto
theChar show
0 Upos rmoveto 0 Upos lineto
Uwid setlinewidth stroke
end
} def
currentdict 
end
definefont pop
} ifelse
} def
/MakeOutlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
/pathwidth 1000 24 div def 
/newfontname exch def 
/basefontname exch def 
/uniqueid 
basefontname findfont dup /UniqueID known 
{
/UniqueID get 1 add
}
{
pop 1
}ifelse
def
/BaseFont basefontname findfont def 
/numentries BaseFont maxlength 1 add def 
BaseFont /UniqueID known not
{
/numentries numentries 1 add def
} if
/NewFont numentries dict def 
BaseFont
{ 
exch dup /FID ne
{exch NewFont 3 1 roll put}
{pop pop} ifelse
}forall
NewFont /FontName newfontname put
NewFont /PaintType 2 put
NewFont /StrokeWidth pathwidth put
NewFont /UniqueID uniqueid put
newfontname NewFont definefont pop
}ifelse
}def
/macvec dup where not 
{ 256 array def
macvec 0 StandardEncoding
0 128 getinterval putinterval
macvec 16#27 /quotesingle put
macvec 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Aacute /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Agrave
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
macvec 128 128 getinterval astore pop
}
{pop pop} ifelse
/CreateFontDict 
{
dup length dict
/cd_NewFontDict exch def
{
1 index
/FID ne
{
cd_NewFontDict 3 1 roll put
}
{
pop pop
} ifelse
} forall
cd_NewFontDict
} def
/CoordinateFont 
{
dup 
/cd_FontString exch def 
length 7 add string
/cd_CoFontString exch def
cd_CoFontString 0 (|______) putinterval cd_CoFontString 7 cd_FontString putinterval
/cd_FontName cd_CoFontString cvn def 
FontDirectory cd_FontName known not
{
cd_FontString cvn findfont CreateFontDict
/cd_NewFontDict exch def
cd_NewFontDict dup 
/FontName cd_FontName put 
/Encoding macvec put
cd_FontName cd_NewFontDict definefont pop
} if
} def
/cd_defaultscreen [ currentscreen ] def
/SetDefaultScreen
{
cd_defaultscreen aload pop setscreen
} def
/Default
{
cd_defaultscreen 2 get exec
} def
/WhiteDot 
{
dup mul exch dup mul add 1 sub
} bind def
/BlackDot 
{
dup mul exch dup mul add 1 exch sub
} bind def
/HLines 
{
exch pop abs 1 exch sub
} bind def
/VLines 
{
pop abs 2 mul 1 exch sub
} bind def
/Poster
{
{
dup 0.5 lt 
{
dup 0.3 gt 
{pop 0.4} 
{0.1 gt 
{0.2} 
{0.0} ifelse
} ifelse
}
{
dup 0.7 lt 
{pop 0.6} 
{
0.9 lt 
{0.8} 
{1.0} ifelse
} ifelse
} ifelse
} settransfer
} def 
/Ellipse 
{
dup mul .625 mul exch dup mul add 1 exch sub
} bind def
/Square 
{
abs exch abs 2 copy gt{exch} if pop
} bind def
/Diamond 
{
abs exch abs add 1 exch sub
} bind def
/BlackCircle 
{
dup mul exch dup mul add 0.6 exch sub abs -0.5 mul
} bind def
/WhiteCircle 
{
dup mul exch dup mul add 0.6 exch sub abs 0.5 mul
} bind def
/Triangle 
{
2 exch sub exch abs 2 mul sub 3 div
} bind def
/Grid 
{
2 copy abs exch abs gt {exch} if pop 2 mul 1 exch sub 3.5 div
} bind def
/Ripples 
{
/wy exch def 180 mul cos 2 div wy dup dup dup mul mul sub mul wy add 180 mul cos
} bind def
/Star 
{
abs exch abs 2 copy gt {exch} if 1 sub dup 0 eq {0.01 add} if atan 360 div
} bind def
/max
{
2 copy lt{exch}if pop
} def
/min
{
2 copy gt{exch}if pop
} def
/concatprocs %% Proc1 Proc2 -- Proc1Proc2 %%
{
/Proc1 exch cvlit def
/Proc2 exch cvlit def
/NewProc Proc1 length Proc2 length add array def
NewProc 0 Proc1 putinterval
NewProc Proc1 length Proc2 putinterval
NewProc cvx
} def
/ndf %% key value -- %%
{
1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse
} def
/setcmykcolor %% Cyan Magenta Yellow Black -- %%
{
1 exch sub 3 {dup 5 -1 roll sub 0 max exch} repeat pop setrgbcolor
} ndf
/findcmykcustomcolor %% Cyan Magenta Yellow Black SpotName -- Object %%
{
[ 6 1 roll ] 
} ndf
/setcustomcolor %% object tint -- %%
{
/cd_tint exch def
0 4 getinterval
{ cd_tint mul } forall
setcmykcolor
} ndf
/cmyktorgb %% Cyan Magenta Yellow Black -- Red Green Blue %%
{
3 {dup 5 -1 roll add dup 1 gt {pop 1} if 1 exch sub exch} repeat pop
} def
/rgbtocmyk %% Red Green Blue -- Cyan Magenta Yellow Black %%
{
3 {3 -1 roll 1 exch sub} repeat
3 copy min min 
3 {4 -1 roll 1 index sub exch} repeat
} def
/cmyktohls %% Cyan Magenta Yellow Black -- Hue Lightness Saturation %%
{
cmyktorgb
3 copy min min 4 1 roll
3 copy max max 5 -1 roll
2 copy add 2 div 6 1 roll
2 copy eq 
{
5 {pop} repeat
0 exch 0
}
{
5 index
0.5 le
{
2 copy 2 copy
sub 3 1 roll
add div
}
{
2 copy 2 copy
sub 2 exch sub 3 1 roll
sub exch div 
} ifelse
6 1 roll
2 copy sub
5 index 3 index eq
{
3 1 roll pop pop
4 -3 roll sub exch pop exch div
}
{
4 index 3 index eq
{
3 1 roll pop pop
4 -3 roll exch pop exch sub 2 add exch div
}
{
3 1 roll pop pop
4 -3 roll pop sub 4 add exch div
} ifelse
} ifelse
60 mul dup 0 lt {360 add} if
3 1 roll
} ifelse
} def
/value
{
dup 360 gt {360 sub} if
dup 0 lt {360 add} if
dup
60 lt 
{
60 div 3 1 roll 2 copy sub 4 -1 roll mul add exch pop
}
{
dup 180 lt
{
pop pop
}
{
dup 240 lt
{
240 exch sub 60 div
3 copy pop sub mul add exch pop
}
{
pop exch pop
} ifelse
} ifelse
} ifelse
} def
/hlstocmyk %% Hue Lightness Saturation -- Cyan Magenta Yellow Black %%
{
dup 0 eq
{
pop exch pop dup dup
}
{
1 index 0.5 le
{
2 copy 1 add mul
}
{
2 copy 2 copy add 3 1 roll mul sub
} ifelse
2 index 1 index sub 2 mul
5 -3 roll pop pop
3 copy 120 add value 4 1 roll
3 copy value 4 1 roll
120 sub value 
} ifelse
rgbtocmyk
} def
/D3PathProc %% PathArray -- %%
{
{
dup length
dup 6 eq
{ pop aload pop curveto }
{ 
dup 2 eq
{ pop aload pop lineto }
{
3 eq
{ aload pop pop moveto }
{ pop closepath } ifelse
} ifelse
} ifelse
} forall
} def
/fntnIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
fntnBColor length 6 eq
{
fntnMix 0 eq
{
2 index sub 3 -2 roll exch sub div
}
{
3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get
} ifelse
fntnEColor 5 get fntnBColor 5 get sub mul fntnBColor 5 get add
fntnBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq fntnMix 0 eq and
{ pop pop pop fntnBColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
dup 2 index eq fntnMix 0 eq and
{ pop pop pop fntnEColor aload pop fntnModel 0 ne {hlstocmyk} if }
{
fntnMix 0 eq
{ 2 index sub 3 -2 roll exch sub div }
{ 3 -1 roll sub exch pop fntnGrain idiv fntnBuf exch get } ifelse
dup fntnBColor 0 get fntnEColor 0 get 1 index sub 3 -1 roll mul add exch
dup fntnBColor 1 get fntnEColor 1 get 1 index sub 3 -1 roll mul add exch
fntnModel 0 eq
{
dup fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add exch
fntnBColor 3 get fntnEColor 3 get 1 index sub 3 -1 roll mul add
}
{
fntnBColor 2 get fntnEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/fntnlinear %% DirectionData -- %%
{
aload pop
/stop [ 4 -2 roll] def
pop pop 4 2 roll
/start [ 4 -2 roll] def
start 1 get sub exch 
start 0 get sub
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
newpath
start aload pop
moveto
stop aload pop
lineto
stroke
1 index 1 index
translate
} for
pop pop
} def
/fntnecho %% DirectionData -- %%
{
aload
5 {pop} repeat
2 index sub exch 4 -1 roll sub
3 -1 roll pop
fntnSteps div exch fntnSteps div
3 -1 roll pop
gsave
0 fntnGrain fntnSteps 1 sub mul dup fntnIncColor
/eofill load FindFlatness
grestore
2 copy 2 div exch 2 div exch
translate
0 fntnGrain dup fntnSteps 1 sub mul 
{
0 fntnGrain fntnSteps mul 3 -1 roll fntnIncColor
D3ObjectProc closepath
/stroke load FindFlatness
1 index 1 index
translate
} for
pop pop
} def
/fntnradial %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
translate
gsave
fntnBRadius fntnERadius fntnBRadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor 
newpath 0 0 3 -1 roll 0 360 arc
/stroke load FindFlatness
} for
} def
/fntnshape %% OffsetData -- %%
{
aload pop
/fntnERadius exch fntnGrain 2 div sub round cvi def
/fntnBRadius exch fntnGrain 2 div sub round cvi def
D3ObjectProc pathbbox
2 index add 2 div exch
4 -2 roll pop add 2 div exch
/objCX 2 index def /objCY 1 index def
2 index sub exch 
4 -2 roll pop sub fntnSteps div neg exch
fntnSteps div neg
gsave
fntnBRadius fntnERadius fntnERadius fntnIncColor
/eofill load FindFlatness
grestore
fntnBRadius fntnGrain fntnERadius 
{
fntnBRadius fntnERadius 2 index fntnIncColor
gsave
objCX objCY 
translate
fntnERadius dup 3 -1 roll sub exch div dup
scale
objCX neg objCY neg 
translate
D3ObjectProc
/eofill load FindFlatness
grestore
1 index 1 index
translate
} for
2 {pop} repeat
} def
/fntn %% OffsetData Grain Steps Startcolor Endcolor Buffer Mix Model Style -- %%
{ 
/fntnStyle exch def
/fntnModel exch def
/fntnMix exch def
/fntnBuf exch def
fntnModel 0 eq
{
/fntnEColor exch def
/fntnBColor exch def
}
{
/fntnEColor [ 3 -1 roll aload pop cmyktohls ] def
/fntnBColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
/fntnSteps exch def
/fntnGrain exch def
fntnGrain setlinewidth
fntnStyle 0 eq {fntnlinear}
{ fntnStyle 1 eq {fntnecho} 
{ fntnStyle 2 eq {fntnradial} 
{fntnStyle 3 eq {fntnshape} 
{ pop } ifelse
} ifelse
} ifelse
} ifelse
} def 
/shdwIncColor %% StartDistance EndDistance CurrentDistance -- %%
{
shdwBColor length 6 eq
{
2 index sub 3 -2 roll exch sub div
shdwEColor 5 get shdwBColor 5 get sub mul shdwBColor 5 get add
shdwBColor aload pop pop findcmykcustomcolor exch setcustomcolor
}
{
dup 3 index eq
{ pop pop pop shdwBColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
dup 2 index eq 
{ pop pop pop shdwEColor aload pop shdwModel 0 ne {hlstocmyk} if }
{
2 index sub 3 -2 roll exch sub div
dup shdwBColor 0 get shdwEColor 0 get 1 index sub 3 -1 roll mul add exch
dup shdwBColor 1 get shdwEColor 1 get 1 index sub 3 -1 roll mul add exch
shdwModel 0 eq
{
dup shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add exch
shdwBColor 3 get shdwEColor 3 get 1 index sub 3 -1 roll mul add
}
{
shdwBColor 2 get shdwEColor 2 get 1 index sub 3 -1 roll mul add
hlstocmyk
} ifelse
} ifelse
} ifelse
setcmykcolor
} ifelse
} def
/shdwdrop %% -- %%
{
shdwDColor length 6 eq
{
shdwDColor aload pop
/cd_tint exch def
findcmykcustomcolor cd_tint setcustomcolor
D3ObjectProc shdwOp
}
{
shdwDColor aload 
length 0 gt
{
shdwModel 0 ne { hlstocmyk } if
setcmykcolor
D3ObjectProc shdwOp
} if
} ifelse
} def
/shdwfull %% -- %%
{
shdwLength shdwAngle cos mul shdwSteps div neg
shdwLength shdwAngle sin mul shdwSteps div neg
0 shdwGrain dup shdwSteps 1 sub mul 
{
dup 0 eq 
{pop shdwdrop}
{
0 shdwGrain shdwSteps mul 3 -1 roll shdwIncColor
D3ObjectProc shdwOp
} ifelse
1 index 1 index
translate
} for
pop pop
} def
/shdw %% StartRGB EndRGB DropRGB Steps Grain Length Angle Mix Model Style -- %%
{
/shdwStyle exch def
/shdwModel exch def
/shdwMix exch def
/shdwAngle exch def
/shdwLength exch def
/shdwGrain exch def
/shdwSteps exch def
shdwModel 0 eq
{
/shdwDColor exch def
/shdwBColor exch def
/shdwEColor exch def
}
{
/shdwDColor [ 3 -1 roll aload length 0 gt {cmyktohls} if ] def
/shdwBColor [ 3 -1 roll aload pop cmyktohls ] def
/shdwEColor [ 3 -1 roll aload pop cmyktohls ] def
} ifelse
shdwSteps 0 ne shdwLength 0 ne and
{
gsave
shdwLength shdwAngle cos mul 
shdwLength shdwAngle sin mul
translate
shdwStyle 0 eq
{ shdwdrop }
{ shdwfull } ifelse
grestore
} if
} def
/colorimage %% width height bitspersample matrix proc xxx numplanes --
{
3 ne {exit} if
{exit} if
pop
{
currentfile cd_ImageStr readhexstring pop /cd_string exch def
0 1 cd_string length 3 div 1 sub
{
dup 3 mul
dup cd_string exch get 6 mul exch
dup 1 add cd_string exch get 3 mul exch 
2 add cd_string exch get
add add 10 div round cvi
cd_string 3 1 roll put
} for
cd_string dup length 3 idiv 0 exch getinterval
}
image
} ndf
/ReadToAsterick %% --
{
/cd_String 1 string def
0
{
currentfile cd_String readstring not {pop exit} if
0 get dup 42 eq 
{ 
pop 1 eq 
{ 
(BitMap Error: To much data) ==
} if 
exit
} 
{
32 gt 
{pop 1} if 
} ifelse
} loop
} def
/D3ImageProc %% Width Height -- %%
{
/cd_ImageStr 2 index 7 add 8 idiv string def
true
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
imagemask
ReadToAsterick
} def
/D3ColorImageProc %% Width Height BitsPerSample -- %%
{
/cd_ImageStr 3 index 8 3 index idiv dup 1 sub 3 -1 roll add exch idiv 3 mul string def
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
false 3
colorimage
ReadToAsterick
} def
%%EndProlog
%% -------- Begin Program --------- %%
systemdict /setpacking known
{
true setpacking
} if
2 setlinecap
0 setlinejoin

(Times-Roman) CoordinateFont
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [71.5 539.5 0 ] put
D3PathArray 1 [71.5 693.646 ] put
D3PathArray 2 [287.5 693.646 ] put
D3PathArray 3 [287.5 539.5 ] put
D3PathArray 4 [71.5 539.5 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
1 0 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 8 array def
D3PathArray 0 [72 624.5 0 ] put
D3PathArray 1 [72 540 ] put
D3PathArray 2 [132 540 ] put
D3PathArray 3 [287 694 ] put
D3PathArray 4 [286 695 ] put
D3PathArray 5 [142 695 ] put
D3PathArray 6 [72 624.5 ] put
D3PathArray 7 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [72 542.5 0 ] put
D3PathArray 1 [72 481 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [132 540 0 ] put
D3PathArray 1 [72 479.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [71.5 693.646 0 ] put
D3PathArray 1 [105.5 693.646 ] put
D3PathArray 2 [105.5 659.5 ] put
D3PathArray 3 [71.5 659.5 ] put
D3PathArray 4 [71.5 693.646 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [107 658 0 ] put
D3PathArray 1 [178 658 ] put
D3PathArray 2 [178 587 ] put
D3PathArray 3 [107 587 ] put
D3PathArray 4 [107 658 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [66.5 688.008 0 ] put
D3PathArray 1 [66.5 665.226 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [66.5 670.226 0 ] put
D3ArrowArray 1 [64 670.226 ] put
D3ArrowArray 2 [66.5 660.226 ] put
D3ArrowArray 3 [69 670.226 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [66.5 683.008 0 ] put
D3ArrowArray 6 [69 683.008 ] put
D3ArrowArray 7 [66.5 693.008 ] put
D3ArrowArray 8 [64 683.008 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [76.822 663.813 0 ] put
D3PathArray 1 [97.715 663.813 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [92.715 663.813 0 ] put
D3ArrowArray 1 [92.715 661.313 ] put
D3ArrowArray 2 [102.715 663.813 ] put
D3ArrowArray 3 [92.715 666.313 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [81.822 663.813 0 ] put
D3ArrowArray 6 [81.822 666.313 ] put
D3ArrowArray 7 [71.822 663.813 ] put
D3ArrowArray 8 [81.822 661.313 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [102.5 647.29 0 ] put
D3PathArray 1 [102.5 591.71 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [102.5 596.71 0 ] put
D3ArrowArray 1 [100 596.71 ] put
D3ArrowArray 2 [102.5 586.71 ] put
D3ArrowArray 3 [105 596.71 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [102.5 642.29 0 ] put
D3ArrowArray 6 [105 642.29 ] put
D3ArrowArray 7 [102.5 652.29 ] put
D3ArrowArray 8 [100 642.29 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [114.597 592.143 0 ] put
D3PathArray 1 [171.948 592.143 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [166.948 592.143 0 ] put
D3ArrowArray 1 [166.948 589.643 ] put
D3ArrowArray 2 [176.948 592.143 ] put
D3ArrowArray 3 [166.948 594.643 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [119.597 592.143 0 ] put
D3ArrowArray 6 [119.597 594.643 ] put
D3ArrowArray 7 [109.597 592.143 ] put
D3ArrowArray 8 [119.597 589.643 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [76.082 703.5 0 ] put
D3PathArray 1 [281.392 703.5 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [276.392 703.5 0 ] put
D3ArrowArray 1 [276.392 701 ] put
D3ArrowArray 2 [286.392 703.5 ] put
D3ArrowArray 3 [276.392 706 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [81.082 703.5 0 ] put
D3ArrowArray 6 [81.082 706 ] put
D3ArrowArray 7 [71.082 703.5 ] put
D3ArrowArray 8 [81.082 701 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 50.5 686 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(x) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 81 681 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(x) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 89.5 629 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(y) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 136 610.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(y) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 170 721 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(z) 5 QDShow
grestore
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [325 694 0 ] put
D3PathArray 1 [482 694 ] put
D3PathArray 2 [482 537.5 ] put
D3PathArray 3 [325 537.5 ] put
D3PathArray 4 [325 694 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
1 0 1 0 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [482 694 0 ] put
D3PathArray 1 [325 537.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [408.5 694 0 ] put
D3PathArray 1 [325 610.5 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [325 694 0 ] put
D3PathArray 1 [366.5 694 ] put
D3PathArray 2 [366.5 652.5 ] put
D3PathArray 3 [325 652.5 ] put
D3PathArray 4 [325 694 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [320.313 687.931 0 ] put
D3PathArray 1 [320.313 656.085 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [320.313 661.085 0 ] put
D3ArrowArray 1 [317.813 661.085 ] put
D3ArrowArray 2 [320.313 651.085 ] put
D3ArrowArray 3 [322.813 661.085 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [320.313 682.931 0 ] put
D3ArrowArray 6 [322.813 682.931 ] put
D3ArrowArray 7 [320.313 692.931 ] put
D3ArrowArray 8 [317.813 682.931 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [330.378 657.813 0 ] put
D3PathArray 1 [360.846 657.813 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [355.846 657.813 0 ] put
D3ArrowArray 1 [355.846 655.313 ] put
D3ArrowArray 2 [365.846 657.813 ] put
D3ArrowArray 3 [355.846 660.313 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [335.378 657.813 0 ] put
D3ArrowArray 6 [335.378 660.313 ] put
D3ArrowArray 7 [325.378 657.813 ] put
D3ArrowArray 8 [335.378 655.313 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 304 680 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(x) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 338.5 674.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(x) 6 QDShow
grestore
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [403.5 615.5 0 ] put
D3PathArray 1 [481.5 615.5 ] put
D3PathArray 2 [481.5 538 ] put
D3PathArray 3 [403.5 538 ] put
D3PathArray 4 [403.5 615.5 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultScreen
/D3PathArray 6 array def
D3PathArray 0 [325 610.5 0 ] put
D3PathArray 1 [325 537.5 ] put
D3PathArray 2 [481 694 ] put
D3PathArray 3 [408 694.25 ] put
D3PathArray 4 [325 610.5 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
D3ObjectProc
3 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [398.5 602.064 0 ] put
D3PathArray 1 [398.5 543.968 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [398.5 548.968 0 ] put
D3ArrowArray 1 [396 548.968 ] put
D3ArrowArray 2 [398.5 538.968 ] put
D3ArrowArray 3 [401 548.968 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [398.5 597.064 0 ] put
D3ArrowArray 6 [401 597.064 ] put
D3ArrowArray 7 [398.5 607.064 ] put
D3ArrowArray 8 [396 597.064 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [411.695 543.143 0 ] put
D3PathArray 1 [475.904 543.143 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [470.904 543.143 0 ] put
D3ArrowArray 1 [470.904 540.643 ] put
D3ArrowArray 2 [480.904 543.143 ] put
D3ArrowArray 3 [470.904 545.643 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [416.695 543.143 0 ] put
D3ArrowArray 6 [416.695 545.643 ] put
D3ArrowArray 7 [406.695 543.143 ] put
D3ArrowArray 8 [416.695 540.643 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 383 579.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(y) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 440.5 562.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(y) 6 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 164 483.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(a\)) 13 QDShow
grestore
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 399.5 484 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(\(b\)) 14 QDShow
grestore
% Object: Bezier Path Stroked Arrows 
SetDefaultScreen
/D3PathArray 2 array def
D3PathArray 0 [327 706 0 ] put
D3PathArray 1 [475.5 706 ] put
/D3ArrowArray 10 array def
D3ArrowArray 0 [470.5 706 0 ] put
D3ArrowArray 1 [470.5 703.5 ] put
D3ArrowArray 2 [480.5 706 ] put
D3ArrowArray 3 [470.5 708.5 ] put
D3ArrowArray 4 [] put
D3ArrowArray 5 [332 706 0 ] put
D3ArrowArray 6 [332 708.5 ] put
D3ArrowArray 7 [322 706 ] put
D3ArrowArray 8 [332 703.5 ] put
D3ArrowArray 9 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultScreen
[ 1 0 0 1 392 723.5 ] concat
0 0 0 1 setcmykcolor
/Times-Roman findfont 12 scalefont setfont
4 -13 moveto
(z) 5 QDShow
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 2200 5369 a(Figure)25 b(4:)35 b Fg(\(a\))23
b(The)g(longest)h(side)f(of)h(the)f(b)r(ounding)f(b)r(o)n(x)i(of)g(a)f
(given)2200 5461 y(cannonical)f(region)j(has)f(to)g(b)r(e)g(sho)n(rter)
h(than)e(the)g(sum)h(of)h(the)f(length)2200 5552 y(and)33
b(distance)f(of)i(the)f(co)n(rner)h(cuts,)i(i.e.)57 b
Fw(z)38 b Fc(\024)c Fz(\()p Fw(x)21 b Fz(+)h Fw(y)s Fz(\))p
Fw(d)p Fg(.)57 b(\(b\))33 b(An)2200 5643 y(example)h(of)h(a)g(basic)f
(one-cuttable)e(region)j(in)e(the)h(plane.)60 b(Notice)2200
5735 y(that)25 b Fw(y)f Fz(=)d Fw(z)s(=)p Fz(2)26 b Fg(and)f
Fw(x)c Fc(\025)g Fw(z)s(=\013)p eop
%%Page: 9 9
9 8 bop 3927 299 a Fu(9)-116 523 y(Therefore,)33 b(at)f(least)g(one)h
(p)r(oin)n(t)f(m)n(ust)h(lie)g(in)g Ft(I)38 b Fu(=)1574
461 y Fh(T)1643 481 y Fm(d)1643 548 y(i)p Fs(=1)1768
523 y Ft(Q)1834 535 y Fm(i)1862 523 y Fu(.)-116 623 y(No)n(w,)30
b(let)h(us)f(lo)r(ok)f(at)i Ft(I)674 560 y Fh(T)757 623
y Ft(c)p Fu(.)45 b(Notice)30 b(that)h Fj(len)1438 635
y Fm(c)1471 623 y Fu(\()p Ft(R)q Fu(\))d Ft(>)f(x=\013)p
Fu(,)-116 722 y(y)n(et)36 b(in)h Ft(I)7 b Fu(,)39 b Fj(width)460
734 y Fm(i)488 722 y Fu(\()p Ft(I)7 b Fu(\))39 b Ft(<)p
Fu(=)e Ft(x=\013;)14 b Fi(8)p Ft(i)37 b Fi(2)i Fu(\(1)p
Ft(;)14 b(:)g(:)g(:)f(;)h(d)p Fu(\).)65 b(The)37 b(in-)-116
822 y(tersection)d(is)g(empt)n(y)h(and)f(no)g(p)r(oin)n(ts)h(in)g
Ft(R)g Fu(can)f(lie)h(in)f(this)-116 922 y(in)n(tersection)27
b(either.)38 b(Consequen)n(tly)-7 b(,)27 b(there)h(m)n(ust)g(b)r(e)h(a)
e(one-)-116 1021 y(cut)h(on)f Ft(R)q Fu(.)p 266 1021
50 50 v -116 1196 a Fk(Theorem)32 b(4.4.)40 b Fu(F)-7
b(or)54 b Ft(\013)70 b Fi(\025)e Fu(3)p Ft(d)55 b Fu(and)g
Ft(\014)73 b Fi(\025)68 b Ft(d=)p Fu(\()p Ft(d)37 b Fu(+)g(1\),)-116
1295 y(an)i Ft(\013)p Fu(-balanced)h(canonical)e(region)h
Ft(R)i Fu(is)f(three-cuttable)f(if)-116 1395 y Fj(basp)n
Fu(\()p Ft(R)q Fu(\))23 b Fi(\024)g Fu(2.)-116 1569 y
Fl(Pr)l(o)l(of.)43 b Fu(Let)101 b Ft(z)148 b Fu(=)d(max)917
1581 y Fm(i)p Fn(2C)1024 1565 y Fe(0)1051 1569 y Fu(\()p
Fj(width)1301 1581 y Fm(i)1329 1569 y Fu(\()p Ft(R)q
Fu(\)\),)119 b Ft(y)148 b Fu(=)-116 1669 y(min)22 1681
y Fm(i)p Fn(2C)129 1665 y Fe(0)156 1669 y Fu(\()p Fj(width)406
1681 y Fm(i)434 1669 y Fu(\()p Ft(R)q Fu(\)\),)109 b(and)93
b Ft(n)131 b Fu(=)g Fi(j)p Ft(R)q Fi(j)p Fu(.)232 b(Since)-116
1768 y Fj(basp)n Fu(\()p Ft(R)q Fu(\))38 b(=)g Ft(z)t(=y)h
Fi(\024)f Fu(2,)g Ft(z)t(=)p Fu(2)e Fi(\024)i Ft(y)s
Fu(.)63 b(F)-7 b(or)36 b(eac)n(h)g(axis-parallel)-116
1868 y(direction,)28 b Ft(~)-39 b(v)297 1880 y Fm(i)325
1868 y Fu(,)32 b(let)g(us)f(\014nd)g(the)h(t)n(w)n(o)e(shield)h
(regions,)g Ft(P)1692 1880 y Fm(i)1751 1868 y Fu(and)-116
1968 y Ft(Q)-50 1980 y Fm(i)-23 1968 y Fu(,)23 b(asso)r(ciated)d(with)i
(the)g(opp)r(osing)f(cuts.)35 b(Wlog,)22 b(let)g(us)f(lo)r(ok)-116
2067 y(at)30 b Ft(P)41 2079 y Fm(i)68 2067 y Fu(.)44
b(Notice,)31 b(that)f(the)g Fj(width)967 2079 y Fm(i)995
2067 y Fu(\()p Ft(P)1080 2079 y Fm(i)1108 2067 y Fu(\))d
Fi(\024)g Ft(z)t(=\013)f Fi(\024)g Ft(z)t(=)p Fu(4)f
Fi(\024)i Ft(y)s(=)p Fu(2)-116 2167 y(and)36 b(the)g(same)f(for)h
Ft(Q)623 2179 y Fm(i)686 2167 y Fu(whic)n(h)g(implies)g(that)g
Ft(P)1463 2179 y Fm(i)1505 2105 y Fh(T)1588 2167 y Ft(Q)1654
2179 y Fm(i)1718 2167 y Fu(=)h Fi(;)p Fu(.)-116 2267
y(Since)64 b Ft(\014)89 b Fi(\025)84 b Ft(d=)p Fu(\()p
Ft(d)44 b Fu(+)e(1\))85 b Ft(>)f Fu(\()p Ft(d)43 b Fi(\000)g
Fu(1\))p Ft(=d)p Fu(,)73 b(from)64 b(Co-)-116 2366 y(rollary)95
b(4.1,)115 b(either)97 b(a)g(dividing)h(cut)f(exists)h(or)-116
2466 y Ft(P)68 b Fu(=)125 2403 y Fh(T)194 2491 y Fm(i)p
Fn(2C)301 2474 y Fe(0)342 2466 y Fj(los)473 2478 y Fm(i)500
2466 y Fu(\()p Ft(R)q Fu(\))56 b Fi(6)p Fu(=)g Fi(;)p
Fu(.)95 b(If)48 b(a)f(dividing)g(cut)h(exists,)-116 2565
y(w)n(e)53 b(are)g(done,)61 b(as)53 b(the)i(region)d(is)i(b)n(y)g
(de\014nition)g(three-)-116 2665 y(cuttable.)f(Otherwise,)34
b(w)n(e)f(kno)n(w)f(from)h(our)f(corollary)e(that)-116
2765 y Fi(j)p Ft(P)12 b Fi(j)23 b(\025)f Fu(\(1)q Fi(\000)q
Fu(\(1)q Fi(\000)q Ft(\014)t Fu(\))p Ft(d)p Fu(\))p Ft(n)h
Fi(\025)f Fu(\(1)q Fi(\000)q Fu(\(1)q Fi(\000)q Ft(d=)p
Fu(\()p Ft(d)q Fu(+)q(1\)\))p Ft(d)p Fu(\))p Ft(n)g Fu(=)h
Ft(n=)p Fu(\()p Ft(d)q Fu(+)q(1\).)33 2864 y(It)30 b(is)f(quite)h
(clear)e(from)h(our)g(construction)f(of)i Ft(P)41 b Fu(that)30
b Ft(P)-116 2964 y Fu(corresp)r(onds)35 b(to)h(one)h(of)f(the)i(2)919
2934 y Fm(d)994 2964 y Fu(corners)d(of)h(the)i(b)r(ounding)-116
3064 y(h)n(yp)r(erb)r(o)n(x)27 b(of)h Ft(R)q Fu(.)38
b(Wlog,)28 b(let)g(this)g(b)r(e)h(the)f(upp)r(er)g(left)h(corner,)-116
3163 y(i.e.)36 b(the)25 b(corner)e(whose)h(asso)r(ciated)g(cut)h(is)c
Ft(~)-39 b(v)1312 3175 y Fm(i)1363 3163 y Fu(=)23 b(\(1)p
Ft(;)14 b Fu(1)p Ft(;)g(:)g(:)g(:)f(;)h Fu(1\).)-116
3263 y(No)n(w,)40 b(since)e Ft(P)50 b Fu(is)38 b(not)f(empt)n(y)-7
b(,)41 b Fj(len)1091 3275 y Fm(c)1125 3263 y Fu(\()p
Ft(R)q Fu(\))g Fi(\024)e Fj(width)1616 3275 y Fm(c)1650
3263 y Fu(\()p Ft(P)12 b Fu(\))41 b Fi(\024)-116 3362
y Ft(x=\013)p Fu(.)83 b(Let)44 b Ft(P)350 3374 y Fm(c)433
3362 y Fu(=)k Fj(shield)807 3374 y Fm(c)841 3362 y Fu(\()p
Ft(R)q Fu(\))c(and)f Ft(P)1243 3374 y Fm(b)1325 3362
y Fu(=)48 b Fj(shield)1700 3374 y Fm(b)1733 3362 y Fu(\()p
Ft(R)q Fu(\),)-116 3462 y(where)40 b Ft(b)g Fu(is)h(the)g(opp)r(osing)f
(cut)h(of)g Ft(c)p Fu(.)76 b(Because)40 b Ft(b)g Fu(can)g(b)r(e)-116
3562 y(at)45 b(most)h(the)g(diagonal,)j Fj(len)895 3574
y Fm(c)929 3562 y Fu(\()p Ft(R)q Fu(\))31 b(+)f Fj(width)1401
3574 y Fm(c)1435 3562 y Fu(\()p Ft(R)q Fu(\))53 b Fi(\025)h
Ft(z)t(=d)p Fu(.)-116 3661 y(Then,)29 b(since)g Fj(len)460
3673 y Fm(c)494 3661 y Fu(\()p Ft(R)q Fu(\))d Fi(\024)e
Ft(z)t(=\013)p Fu(,)29 b Fj(width)1145 3673 y Fm(c)1178
3661 y Fu(\()p Ft(R)q Fu(\))d Fi(\025)e Ft(z)t Fu(\(1)p
Ft(=d)18 b Fi(\000)h Fu(1)p Ft(=\013)p Fu(.)-116 3761
y(F)-7 b(or)33 b Ft(\013)i Fi(\025)f Fu(3)p Ft(d)p Fu(,)i(this)e(means)
g Fj(width)1017 3773 y Fm(c)1051 3761 y Fu(\()p Ft(R)q
Fu(\))g Fi(\025)g Fu(2)p Ft(z)t(=\013)f Fu(and)h(a)g(cut)-116
3861 y(exists)k(b)r(et)n(w)n(een)h Ft(b)g Fu(and)g Ft(c)g
Fu(whic)n(h)g(creates)f(t)n(w)n(o)g Ft(\013)p Fu(-balanced)-116
3960 y(regions.)50 b(This)33 b(means)f Ft(P)720 3972
y Fm(b)767 3898 y Fh(T)850 3960 y Ft(P)903 3972 y Fm(c)969
3960 y Fu(=)f Fi(;)p Fu(.)51 b(Also,)34 b(from)e(this,)i(w)n(e)-116
4060 y(kno)n(w)h(that)i Ft(P)351 4072 y Fm(b)399 3998
y Fh(T)482 4060 y Ft(P)50 b Fu(=)37 b Fi(;)p Fu(.)63
b(No)n(w)37 b(again,)g(either)g(a)f(dividing)-116 4159
y(cut)45 b(exists)f(in)h Ft(R)h Fu(in)e(whic)n(h)h(case)f(w)n(e)g(are)g
(again)f(\014nished)-116 4259 y(or)f(at)h(least)g Ft(\014)t(n)g
Fu(of)g(the)g(p)r(oin)n(ts)g(lies)g(in)h(either)e Ft(P)1580
4271 y Fm(c)1658 4259 y Fu(or)g Ft(P)1828 4271 y Fm(b)1862
4259 y Fu(.)-116 4359 y(If)g Fi(j)p Ft(P)57 4371 y Fm(b)91
4359 y Fi(j)47 b(\025)g Ft(\014)t(n)p Fu(,)f(then)d Fi(j)p
Ft(R)29 b Fi(\000)e Ft(P)907 4371 y Fm(b)941 4359 y Fi(j)47
b(\024)g Fu(\(1)28 b Fi(\000)g Ft(\014)t Fu(\))p Ft(n)p
Fu(.)81 b(Ho)n(w)n(ev)n(er,)-116 4458 y Fi(j)p Ft(R)23
b Fi(\000)e Ft(P)132 4470 y Fm(b)166 4458 y Fi(j)33 b(\025)f(j)p
Ft(P)12 b Fi(j)32 b Ft(>)g(n=)p Fu(\()p Ft(d)22 b Fu(+)g(1\))32
b Ft(>)g Fu(\(1)22 b Fi(\000)g Ft(\014)t Fu(\))p Ft(n)33
b Fu(whic)n(h)g(implies)-116 4558 y Fi(j)p Ft(P)-40 4570
y Fm(c)-6 4558 y Fi(j)23 b(\025)g Ft(\014)t(n)p Fu(,)28
b(but)g Fi(j)p Ft(P)508 4570 y Fm(b)542 4558 y Fi(j)23
b(\025)f Ft(\014)t(n)p Fu(,)28 b(a)f(con)n(tradiction.)33
4658 y(W)-7 b(e)33 b(claim)g(that)g Ft(P)646 4670 y Fm(c)713
4658 y Fu(is)f(three-cuttable.)52 b(First,)34 b(observ)n(e)-116
4757 y(that)21 b Fi(j)p Ft(R)5 b Fi(\000)g Ft(P)271 4769
y Fm(c)305 4757 y Fi(j)23 b(\024)g Fu(\(1)5 b Fi(\000)g
Ft(\014)t Fu(\))p Ft(n)22 b Fi(\024)h Ft(\014)t(n)p Fu(;)g(th)n(us,)g
(if)e Ft(P)1301 4769 y Fm(c)1356 4757 y Fu(is)g(t)n(w)n(o-cuttable)-116
4857 y(then)31 b(b)n(y)g(de\014nition)h Ft(R)f Fu(is)g(three-cuttable.)
47 b(By)31 b(the)g(Corner-)-116 4956 y(Cut)h(Shield)f(Lemma)g(4.3,)h
Fj(width)986 4968 y Fm(c)1020 4956 y Fu(\()p Ft(P)1105
4968 y Fm(c)1139 4956 y Fu(\))e Fi(\024)e Fj(len)1425
4968 y Fm(c)1459 4956 y Fu(\()p Ft(R)q Fu(\))p Ft(=)p
Fu(\()p Ft(\013=d)21 b Fi(\000)-116 5056 y Fu(1\))68
b Fi(\024)h Fj(len)290 5068 y Fm(c)324 5056 y Fu(\()p
Ft(R)q Fu(\))p Ft(=)p Fu(2)f Fi(\))h Ft(z)799 5026 y
Fn(0)890 5056 y Fu(=)g(max)1178 5068 y Fm(i)p Fn(2C)1289
5056 y Fu(\()p Fj(width)1540 5068 y Fm(i)1567 5056 y
Fu(\()p Ft(P)1652 5068 y Fm(c)1687 5056 y Fu(\)\))g Fi(\024)-116
5156 y Ft(d)p Fu(\()p Fj(len)90 5168 y Fm(c)124 5156
y Fu(\()p Ft(P)209 5168 y Fm(c)243 5156 y Fu(\))20 b(+)f
Fj(width)597 5168 y Fm(c)631 5156 y Fu(\()p Ft(P)716
5168 y Fm(c)750 5156 y Fu(\)\))27 b Fi(\024)e Fu(3)p
Ft(d)p Fj(len)1147 5168 y Fm(c)1181 5156 y Fu(\()p Ft(P)1266
5168 y Fm(c)1300 5156 y Fu(\))p Ft(=)p Fu(2.)41 b(Recall)29
b(that)-116 5255 y Fj(len)15 5267 y Fm(c)48 5255 y Fu(\()p
Ft(P)133 5267 y Fm(c)168 5255 y Fu(\))36 b(=)f Fj(len)466
5267 y Fm(c)500 5255 y Fu(\()p Ft(R)q Fu(\))h Fi(\024)f
Ft(z)t(=\013)f Fu(and)h Ft(\013)h Fi(\025)f Fu(3)p Ft(d)p
Fu(.)59 b(This)35 b(means)-116 5355 y(that)42 b Ft(z)121
5325 y Fn(0)192 5355 y Fi(\024)47 b Fu(3)p Ft(dz)t(=)p
Fu(\(2)p Ft(\013)p Fu(\))f Fi(\024)i Ft(z)t(=)p Fu(2.)79
b(Since)43 b Ft(y)50 b Fi(\025)d Ft(z)t(=)p Fu(2,)e(one)d(of)-116
5455 y(t)n(w)n(o)d(t)n(yp)r(es)g(of)h(regions)e(ma)n(y)g(b)r(e)i
(formed.)73 b(W)-7 b(e)40 b(kno)n(w)e(that)-116 5554
y(either)22 b(the)g(b)r(ounding)h(b)r(o)n(x)e(of)i Ft(P)909
5566 y Fm(c)965 5554 y Fu(has)f(minim)n(um)h(width)f
Ft(z)1746 5524 y Fn(0)1769 5554 y Fu(,)h(in)-116 5654
y(whic)n(h)d(case)g Ft(P)336 5666 y Fm(c)391 5654 y Fu(is)g
(one-cuttable,)i(or)e Ft(P)1108 5666 y Fm(c)1162 5654
y Fu(is)h(nearly)e(iden)n(tical)i(to)-116 5753 y(the)28
b(region)f(in)h(Theorem)g(4.3)f(except)h(that)g(the)h(corners)d(ma)n(y)
1968 523 y(ha)n(v)n(e)k(additional)h(corner)e(cuts.)49
b(Ho)n(w)n(ev)n(er,)30 b(with)i(the)f(simple)1968 623
y(addition)37 b(of)g(one)g(extra)f(shield)i(cut)g(in)f(one)g(of)g(the)h
Ft(d)g Fu(axis-)1968 722 y(parallel)29 b(directions,)h(it)h(is)g(not)f
(to)r(o)g(di\016cult)i(to)e(see)g(that)h(w)n(e)1968 822
y(can)21 b(pro)r(duce)g(a)h(region)e(whic)n(h)i(is)f(one-cuttable,)i
(although)e(w)n(e)1968 922 y(lea)n(v)n(e)26 b(the)i(details)f(for)g
(the)h(journal)f(v)n(ersion.)p 3447 922 V 1968 1091 a
Fk(Theorem)32 b(4.5.)40 b Fu(F)-7 b(or)39 b Ft(\013)k
Fi(\025)f Fu(3)p Ft(d)e Fu(and)f Ft(\014)47 b Fi(\025)42
b Ft(d=)p Fu(\()p Ft(d)27 b Fu(+)f(1\),)42 b(an)n(y)1968
1191 y Ft(\013)p Fu(-balanced)27 b(canonical)f(region)g
Ft(R)j Fu(is)e(\()p Ft(d)19 b Fu(+)f(2\)-cuttable.)1968
1360 y Fl(Pr)l(o)l(of.)43 b Fu(Let)76 b Ft(z)108 b Fu(=)d(max)2896
1372 y Fm(i)p Fn(2C)3003 1356 y Fe(0)3030 1360 y Fu(\()p
Fj(width)3280 1372 y Fm(i)3308 1360 y Fu(\()p Ft(R)q
Fu(\)\))77 b(and)f Ft(y)108 b Fu(=)1968 1460 y(min)2106
1472 y Fm(i)p Fn(2C)2213 1455 y Fe(0)2240 1460 y Fu(\()p
Fj(width)2490 1472 y Fm(i)2518 1460 y Fu(\()p Ft(R)q
Fu(\)\).)65 b(If)38 b Fj(basp)n Fu(\()p Ft(R)q Fu(\))h
Fi(\024)f Fu(2,)h(w)n(e)e(are)f(done)g(as)1968 1559 y(the)h(region)g
(is)g(three-cuttable.)66 b(If)38 b(not,)i(then)e(there)f(exists)1968
1659 y(at)27 b(least)g(one)g(axis-parallel)e(direction)i(with)h(width)g
(less)f(than)1968 1758 y Ft(z)t(=)p Fu(2)k(whic)n(h)i(means)g(that)g
Ft(y)i(<)d(z)t(=)p Fu(2)f Fi(\))h Ft(z)k(>)c Fu(2)p Ft(y)s
Fu(.)53 b(Let)33 b Ft(i)f Fi(2)h(C)3946 1728 y Fn(0)1968
1858 y Fu(b)r(e)c(the)g(direction)f(corresp)r(onding)f(to)h
Ft(z)t Fu(,)g(i.e.,)h(corresp)r(onding)1968 1958 y(to)36
b(the)h(longest)f(side,)j(and)d Ft(b)h Fu(and)f Ft(c)h
Fu(b)r(e)g(the)g(t)n(w)n(o)e(opp)r(osing)1968 2057 y(canonical)h(cuts)i
(with)h(normal)34 b Ft(~)-39 b(v)3060 2069 y Fm(i)3088
2057 y Fu(.)68 b(Since)38 b Ft(z)j Fu(is)d(large,)h(it)g(is)1968
2157 y(easy)c(to)g(see)h(that)g Fj(shield)2860 2169 y
Fm(b)2894 2157 y Fu(\()p Ft(R)q Fu(\))3036 2095 y Fh(T)3119
2157 y Fj(shield)3380 2169 y Fm(c)3414 2157 y Fu(\()p
Ft(R)q Fu(\))h Fi(6)p Fu(=)g Fi(;)p Fu(.)61 b(No)n(w)1968
2257 y(lo)r(ok)22 b(at)h(the)g Fj(los)2509 2269 y Fm(i)2537
2257 y Fu(\()p Ft(R)q Fu(\).)35 b(If)24 b Fj(los)2933
2269 y Fm(i)2960 2257 y Fu(\()p Ft(R)q Fu(\))g(=)e Fi(;)p
Fu(,)i(then)f(a)g(dividing)g(cut)1968 2356 y(exists)29
b(in)h Ft(R)h Fu(in)f(direction)d Ft(~)-39 b(v)2880 2368
y Fm(i)2938 2356 y Fu(and)30 b Ft(R)g Fu(is)g(one-cuttable.)43
b(Note)1968 2456 y(that)36 b(in)g(man)n(y)g(cases,)h(esp)r(ecially)e
(those)h(applications)f(that)1968 2555 y(\014nd)28 b
Ft(k)s Fu(-d)f(trees)g(practical,)f Fj(los)2975 2567
y Fm(i)3003 2555 y Fu(\()p Ft(R)q Fu(\))i(will)f(b)r(e)h(empt)n(y)g(as)
f(there)1968 2655 y(is)22 b(usually)g(a)h(dividing)f(cut)h(along)f(the)
h(longest)f(direction)g(that)1968 2755 y(pro)r(duces)33
b Ft(\013)p Fu(-balanced)h(subregions.)56 b(Otherwise,)35
b(wlog,)h(as-)1968 2854 y(sume)28 b Ft(shiel)r(d)2406
2866 y Fm(c)2439 2854 y Fu(\()p Ft(R)q Fu(\))h(is)g(the)g(large)e
(outer)i(region.)39 b(No)n(w,)29 b(rather)1968 2954 y(than)20
b(cut)h(at)g(this)g(shield)f(region,)h(w)n(e)f(use)g(a)h(cut,)h
Ft(c)3545 2924 y Fn(0)3568 2954 y Fu(,)g(in)f(the)g(dir-)1968
3054 y(ection)26 b(of)d Ft(~)-39 b(v)2344 3066 y Fm(i)2399
3054 y Fu(to)26 b(create)f(a)i(region)e Ft(R)3123 3023
y Fn(0)3172 3054 y Fu(where)h Fj(width)3629 3066 y Fm(c)3663
3054 y Fu(\()p Ft(R)q Fu(\))d(=)g Ft(y)s Fu(.)1968 3153
y(Notice)39 b(that)g Ft(R)k Fi(\033)f Ft(R)2708 3123
y Fn(0)2773 3153 y Fi(\033)g Fj(shield)3141 3165 y Fm(c)3175
3153 y Fu(\()p Ft(R)q Fu(\),)g(i.e.,)g Ft(R)3603 3123
y Fn(0)3665 3153 y Fu(is)d(larger)1968 3253 y(than)24
b(the)h(shield)f(region,)g(and)g(if)h Ft(R)3095 3223
y Fn(0)3142 3253 y Fu(is)f Ft(k)s Fu(-cuttable,)h(then)g
Ft(R)g Fu(is)1968 3352 y(\()p Ft(k)9 b Fu(+)d(1\)-cuttable.)35
b(Also,)22 b(since)g(there)f(are)g(at)g(most)h Ft(d)6
b Fi(\000)g Fu(1)22 b(sides)1968 3452 y(with)h(width)g(greater)e(than)i
Ft(y)j Fu(and)c(after)h(ev)n(ery)e(cut)j(w)n(e)e(reduce)1968
3552 y(this)j(coun)n(t)g(b)n(y)g(one,)h(after)f(no)g(more)f(than)i
Ft(d)14 b Fi(\000)f Fu(1)25 b(cuts)g(w)n(e)g(will)1968
3651 y(ha)n(v)n(e)f(an)h Ft(\013)p Fu(-balanced)g(canonical)f(region)g
(with)i Fj(basp)n Fu(\()p Ft(R)q Fu(\))d Fi(\024)g Fu(2,)1968
3751 y(whic)n(h)30 b(is)g(three-cuttable.)45 b(Therefore,)30
b(an)n(y)g Ft(\013)p Fu(-balanced)f(ca-)1968 3851 y(nonical)e(region)f
(is)h(\()p Ft(d)19 b Fu(+)f(2\)-cuttable.)p 3220 3851
V 2117 4020 a(Notice)44 b(that)g(our)f(sc)n(heme)g(generally)g(cuts)h
(along)e(the)1968 4120 y(longest)31 b(axis-parallel)f(side.)50
b(W)-7 b(e)33 b(can)e(alter)h(this)g(to)g(include)1968
4219 y(searc)n(hing)i(for)h(one-cuts)h(in)g(the)g(other)g
(axis-parallel)d(direc-)1968 4319 y(tions)41 b(and)h(in)g(so)g(doing)f
(mimic)i(the)f(p)r(erformance)f(of)h Ft(k)s Fu(-d)1968
4418 y(trees.)c(In)29 b(practice,)e(as)h Ft(k)s Fu(-d)g(trees)g(often)g
(app)r(ear)g(to)g(p)r(erform)1968 4518 y(quite)34 b(w)n(ell,)j(the)e
(sp)r(ecial)f(t)n(w)n(o-cuttable)g(regions)f(ma)n(y)h(nev)n(er)1968
4618 y(ha)n(v)n(e)22 b(to)h(b)r(e)h(used.)35 b(Ho)n(w)n(ev)n(er,)22
b(w)n(e)h(ha)n(v)n(e)g(the)g(added)g(safet)n(y)g(net)1968
4717 y(of)29 b(using)g(these)h(corner)e(cuts,)i(and)g(in)g(fact)f(ev)n
(en)g(\014nding)h(ap-)1968 4817 y(propriate)21 b(one-cuts)i(and)g(t)n
(w)n(o-cuts)f(are)g(quite)i(easy)e(although)1968 4917
y(their)27 b(existence)g(is)h(di\016cult)g(to)g(pro)n(v)n(e.)1968
5086 y Fk(Theorem)k(4.6.)40 b Fu(F)-7 b(or)31 b(the)i(giv)n(en)e
(canonical)g(set,)i Fi(C)5 b Fu(,)33 b(a)e(BAR)1968 5186
y(tree)d(with)h(depth)h Ft(O)r Fu(\()p Ft(d)2702 5155
y Fs(2)2754 5186 y Fu(log)14 b Ft(n)p Fu(\))29 b(and)f(balancing)g
(factor)g Ft(\013)h Fu(can)1968 5285 y(b)r(e)21 b(constructed)f(in)h
Ft(O)r Fu(\()p Ft(d)2745 5255 y Fs(2)2783 5285 y Ft(\015)5
b(n)14 b Fu(log)f Ft(n)p Fu(\))21 b(time,)i(where)d Ft(\015)25
b Fu(is)c(the)g(size)1968 5385 y(of)30 b(the)h(canonical)e(set,)i(here)
f Ft(O)r Fu(\(2)3056 5355 y Fm(d)3095 5385 y Fu(\).)45
b(This)31 b(is)f Ft(O)r Fu(\()p Ft(n)14 b Fu(log)h Ft(n)p
Fu(\))30 b(for)1968 5484 y(\014xed)d(dimensions.)1968
5654 y Fl(Pr)l(o)l(of.)43 b Fu(Notice)37 b(that)h(at)f(an)n(y)g(stage,)
i(using)e(ev)n(en)g(the)h(most)1968 5753 y(naiv)n(e)30
b(searc)n(h,)g(the)i(large)d(outer)i(regions)e(of)i(a)f(region)g
Ft(R)i Fu(can)p eop
%%Page: 10 10
10 9 bop 116 299 a Fu(10)116 523 y(b)r(e)36 b(found)g(in)f
Ft(O)r Fu(\()p Fi(j)p Ft(R)q Fi(j)p Fu(\))i(time,)g(and)f(the)f
(shielding)g(regions)f(at)116 623 y(eac)n(h)40 b(stage)g(can)g(easily)g
(b)r(e)i(found)f(in)g Ft(O)r Fu(\()p Ft(\015)5 b Fu(\))41
b(time.)77 b(Th)n(us,)116 722 y(w)n(e)35 b(can)g(\014nd)h(an)n(y)f
Ft(k)s Fu(-cut)g(of)g(a)g(region)g Ft(R)h Fu(in)f Ft(O)r
Fu(\()p Fi(j)p Ft(R)q Fi(j)p Ft(\015)5 b Fu(\))37 b(time.)116
822 y(Since)32 b(the)f(depth)h(is)f(b)r(ounded,)h(w)n(e)f(ha)n(v)n(e)f
(the)i(running)f(time)116 922 y(as)j Ft(O)r Fu(\()p Ft(k)s(\015)5
b(n)14 b Fu(log)587 942 y Fs(1)p Fm(=\014)713 922 y Ft(n)p
Fu(\))34 b(time.)57 b(Noticing)34 b(that)g Ft(k)j Fu(=)d
Ft(O)r Fu(\()p Ft(d)p Fu(\))h(and)116 1021 y Ft(\014)g
Fu(=)30 b Ft(O)r Fu(\()p Ft(d=)p Fu(\()p Ft(d)23 b Fu(+)e(1\)\))31
b Fi(\))f Fu(log)1016 1041 y Fs(1)p Fm(=\014)1142 1021
y Ft(n)g Fu(=)h Ft(O)r Fu(\()p Ft(d)14 b Fu(log)h Ft(n)p
Fu(\),)33 b(w)n(e)f(get)g(the)116 1121 y(ab)r(o)n(v)n(e)26
b(stated)i(running)f(time.)p 1132 1121 50 50 v 116 1320
a Fx(5)95 b(Conclusion)31 b(and)h(Op)s(en)f(Problems)116
1445 y Fu(In)h(this)h(pap)r(er,)g(w)n(e)e(in)n(tro)r(duced)h(the)g
(general)f(framew)n(ork)f(of)116 1544 y(the)38 b(BAR)f(tree)g(and)g
(describ)r(ed)g(some)f(imp)r(ortan)n(t)h(applica-)116
1644 y(tions)26 b(that)h(ma)n(y)e(b)r(e)i(solv)n(ed)e(b)n(y)h(using)g
(this)g(t)n(yp)r(e)h(of)f(tree.)36 b(W)-7 b(e)116 1743
y(also)34 b(sho)n(w)n(ed)g(that)h(when)g(the)g(dimensionalit)n(y)f(is)h
(\014xed,)h(an)116 1843 y(\()p Ft(\013;)14 b(\014)t Fu(\)-BAR)30
b(tree)d(can)h(b)r(e)h(constructed)e(in)i Ft(O)r Fu(\()p
Ft(n)14 b Fu(log)g Ft(n)p Fu(\))29 b(time,)116 1943 y(where)e
Ft(n)h Fu(is)f(the)h(n)n(um)n(b)r(er)g(of)f(p)r(oin)n(ts)h(in)g(the)g
(data)f(set.)266 2042 y(These)c(results,)g(ho)n(w)n(ev)n(er,)f(are)g
(only)h(preliminary)-7 b(.)35 b(There)116 2142 y(are)28
b(still)i(man)n(y)e(op)r(en)i(problems)e(for)h(this)g(new)g(t)n(yp)r(e)
h(of)f(data)116 2242 y(structure.)35 b(F)-7 b(or)23 b(example,)h(the)h
(complexit)n(y)e(of)g(the)h(canonical)116 2341 y(regions)35
b(\()p Ft(O)r Fu(\(2)578 2311 y Fm(d)617 2341 y Fu(\)\),)k(the)d(n)n
(um)n(b)r(er)f(of)h(cuts)g(needed)g(to)g(ensure)116 2441
y Ft(\014)t Fu(-balance)f(\()p Ft(O)r Fu(\()p Ft(d)p
Fu(\)\),)40 b(and)35 b(the)h(maxim)n(um)g Ft(\013)p Fu(-balance)f
(factor)116 2540 y(\()p Ft(O)r Fu(\()p Ft(d)p Fu(\)\))41
b(are)d(all)h(far)f(from)h(optimal)f(and)h(could)g(with)g(more)116
2640 y(careful)k(analysis)e(b)r(e)i(signi\014can)n(tly)f(dropp)r(ed,)47
b(p)r(erhaps)42 b(b)n(y)116 2740 y(c)n(ho)r(osing)26
b(a)i(di\013eren)n(t)f(canonical)g(set)g(en)n(tirely)-7
b(.)116 2941 y Fx(References)163 3123 y Fz([1])43 b Fb(P.)31
b(K.)f(A)n(gar)-7 b(w)g(al,)31 b(E.)g(F.)g(Gr)n(o)n(ve,)g(T.)f(M.)g
(Murali,)h(and)286 3205 y(J.)21 b(S.)f(Vitter)p Fz(,)g
Fa(Binary)h(sp)l(ac)l(e)i(p)l(artitions)f(for)f(fat)g(r)l(e)l(ctangles)
p Fz(,)286 3288 y(in)34 b(Pro)r(c.)i(37th)f(Ann)n(u.)f(IEEE)h(Symp)r
(os.)f(F)-6 b(ound.)34 b(Comput.)286 3370 y(Sci.,)26
b(Oct.)g(1996,)h(pp.)f(482{491.)163 3452 y([2])43 b Fb(P.)26
b(K.)g(A)n(gar)-7 b(w)g(al,)27 b(M.)e(Ka)-5 b(tz,)26
b(and)f(M.)h(Sharir)p Fz(,)d Fa(Comput-)286 3534 y(ing)36
b(depth)h(or)l(ders)h(for)e(fat)g(obje)l(cts)i(and)e(r)l(elate)l(d)i
(pr)l(oblems)p Fz(,)286 3616 y(Comput.)25 b(Geom.)g(Theory)h(Appl.,)g
(5)g(\(1995\),)h(pp.)e(187{206.)163 3699 y([3])43 b Fb(W.)36
b(G.)g(Aref)h(and)f(H.)g(Samet)p Fz(,)g Fa(Persp)l(e)l(ctive)h(viewing)
e(of)286 3781 y(obje)l(cts)27 b(r)l(epr)l(esente)l(d)j(by)d(o)l(ctr)l
(e)l(es)p Fz(,)g(Comput.)c(Graph.)i(F)-6 b(orum,)286
3863 y(14)43 b(\(1995\),)48 b(pp.)42 b(59{66.)86 b(also)43
b(Univ)n(ersit)n(y)f(of)h(Maryland)286 3945 y(Computer)25
b(Science)g(TR-2757.)163 4027 y([4])43 b Fb(S.)52 b(Ar)-5
b(y)g(a)52 b(and)g(D.)g(M.)h(Mount)p Fz(,)j Fa(Appr)l(oximate)51
b(r)l(ange)286 4110 y(se)l(ar)l(ching)p Fz(,)24 b(in)d(Pro)r(c.)i(11th)
e(Ann)n(u.)f(A)n(CM)h(Symp)r(os.)g(Comput.)286 4192 y(Geom.,)26
b(1995,)h(pp.)f(172{181.)163 4274 y([5])43 b Fb(S.)67
b(Ar)-5 b(y)g(a,)78 b(D.)67 b(M.)h(Mount,)78 b(N.)68
b(S.)g(Net)-5 b(any)g(ahu,)286 4356 y(R.)43 b(Sil)-7
b(verman,)47 b(and)c(A.)h(Wu)p Fz(,)g Fa(A)n(n)e(optimal)f(algorithm)
286 4438 y(for)f(appr)l(oximate)j(ne)l(ar)l(est)g(neighb)l(or)e(se)l
(ar)l(ching)p Fz(,)46 b(in)40 b(Pro)r(c.)286 4521 y(5th)d(A)n(CM-SIAM)g
(Symp)r(os.)f(Discrete)i(Algorithms,)j(1994,)286 4603
y(pp.)25 b(573{582.)163 4685 y([6])43 b Fb(J.)35 b(L.)h(Bentley)p
Fz(,)e Fa(Multidimensional)f(binary)i(se)l(ar)l(ch)h(tr)l(e)l(es)286
4767 y(use)l(d)51 b(for)e(asso)l(ciative)j(se)l(ar)l(ching)p
Fz(,)58 b(Comm)n(un.)48 b(A)n(CM,)i(18)286 4849 y(\(1975\),)27
b(pp.)e(509{517.)163 4932 y([7])p 286 4919 191 4 v 234
w(,)31 b Fw(K)5 b Fa(-d)32 b(tr)l(e)l(es)h(for)f(semidynamic)f(p)l
(oint)h(sets)p Fz(,)h(in)d(Pro)r(c.)286 5014 y(6th)56
b(Ann)n(u.)e(A)n(CM)j(Symp)r(os.)e(Comput.)g(Geom.,)64
b(1990,)286 5096 y(pp.)25 b(187{197.)163 5178 y([8])43
b Fb(P.)c(B.)f(Callahan)h(and)f(S.)h(R.)f(K)n(osaraju)p
Fz(,)h Fa(A)n(lgorithms)286 5260 y(for)29 b(dynamic)g(closest-p)l(air)j
(and)d Fw(n)p Fa(-b)l(o)l(dy)i(p)l(otential)f(\014elds)p
Fz(,)f(in)286 5342 y(Pro)r(c.)38 b(6th)g(A)n(CM-SIAM)e(Symp)r(os.)h
(Discrete)h(Algorithms,)286 5425 y(1995,)27 b(pp.)f(263{272.)163
5507 y([9])43 b Fb(P.)31 b(B.)f(Callahan)g(and)g(S.)g(R.)h(K)n(osaraju)
p Fz(,)d Fa(A)i(de)l(c)l(omp)l(os-)286 5589 y(ition)36
b(of)g(multidimensional)g(p)l(oint)h(sets)h(with)e(applic)l(ations)286
5671 y(to)41 b Fw(k)r Fa(-ne)l(ar)l(est-neighb)l(ors)47
b(and)41 b Fw(n)p Fa(-b)l(o)l(dy)i(p)l(otential)f(\014elds)p
Fz(,)j(J.)286 5753 y(A)n(CM,)26 b(42)g(\(1995\),)i(pp.)d(67{90.)2209
523 y([10])43 b Fb(H.)h(H.)g(Chen)f(and)h(T.)g(S.)g(Huang)p
Fz(,)h Fa(A)d(survey)i(of)e(c)l(on-)2370 605 y(struction)29
b(and)f(manipulation)g(of)f(o)l(ctr)l(e)l(es)p Fz(,)h(Comput.)d(Vision)
2370 687 y(Graph.)h(Image)f(Pro)r(cess.,)j(43)e(\(1988\),)h(pp.)f
(409{431.)2209 770 y([11])43 b Fb(N.)24 b(Chin)f(and)h(S.)g(Feiner)p
Fz(,)f Fa(Ne)l(ar)i(r)l(e)l(al-time)g(shadow)g(gener-)2370
852 y(ation)31 b(using)g(BSP)g(tr)l(e)l(es)p Fz(,)h(in)e(Pro)r(c.)g
(SIGGRAPH)e('89,)k(New)2370 934 y(Y)-6 b(ork,)25 b(Aug.)g(1989,)j(A)n
(CM)e(SIGGRAPH,)e(pp.)i(99{106.)2209 1016 y([12])43 b
Fb(M.)38 b(de)f(Ber)n(g)p Fz(,)h Fa(Line)l(ar)f(size)g(binary)h(sp)l
(ac)l(e)g(p)l(artitions)g(for)2370 1098 y(fat)47 b(obje)l(cts)p
Fz(,)55 b(in)47 b(Pro)r(c.)i(3rd)e(Ann)n(u.)f(Europ)r(ean)i(Symp)r(os.)
2370 1181 y(Algorithms,)40 b(v)n(ol.)d(979)h(of)g(Lecture)f(Notes)g
(Comput.)f(Sci.,)2370 1263 y(Springer-V)-6 b(erlag,)26
b(1995,)h(pp.)e(252{263.)2209 1345 y([13])43 b Fb(C.)23
b(A.)g(Duncan,)h(M.)g(T.)f(Goodrich,)i(and)e(S.)g(G.)h(K)n(obor-)2370
1427 y(uo)n(v)p Fz(,)e Fa(Balanc)l(e)l(d)i(asp)l(e)l(ct)h(r)l(atio)e
(tr)l(e)l(es)i(and)e(their)h(use)g(for)f(dr)l(aw-)2370
1509 y(ing)34 b(very)i(lar)l(ge)f(gr)l(aphs)p Fz(,)j(in)33
b(Sixth)f(Symp)r(osium)f(on)j(Graph)2370 1592 y(Dra)n(wing,)26
b(to)g(b)r(e)g(published)f(in)g(1998.)2209 1674 y([14])43
b Fb(A.)33 b(Efra)-5 b(t)35 b(and)e(M.)h(Sharir)p Fz(,)e
Fa(On)h(the)h(c)l(omplexity)f(of)g(the)2370 1756 y(union)e(of)g(fat)h
(obje)l(cts)g(in)f(the)i(plane)p Fz(,)e(in)f(Pro)r(c.)h(13th)f(Ann)n
(u.)2370 1838 y(A)n(CM)25 b(Symp)r(os.)g(Comput.)g(Geom.,)h(1997,)i
(pp.)d(104{112.)2209 1920 y([15])43 b Fb(R.)25 b(A.)g(Finkel)h(and)f
(J.)h(L.)f(Bentley)p Fz(,)e Fa(Quad)j(tr)l(e)l(es:)35
b(a)26 b(data)2370 2002 y(structur)l(e)h(for)e(r)l(etrieval)i(on)e(c)l
(omp)l(osite)h(keys)p Fz(,)f(Acta)e(Inform.,)2370 2085
y(4)j(\(1974\),)h(pp.)e(1{9.)2209 2167 y([16])43 b Fb(H.)25
b(Fuchs,)h(Z.)g(M.)f(Kedem,)g(and)g(B.)h(Na)-5 b(ylor)p
Fz(,)24 b Fa(On)h(visible)2370 2249 y(surfac)l(e)i(gener)l(ation)i(by)e
(a)f(priori)h(tr)l(e)l(e)h(structur)l(es)p Fz(,)h(Comput.)2370
2331 y(Graph.,)21 b(14)g(\(1980\),)i(pp.)c(124{133.)35
b(Pro)r(c.)22 b(SIGGRAPH)c('80.)2209 2413 y([17])43 b
Fb(A.)53 b(Henrich)p Fz(,)j Fa(Impr)l(oving)50 b(the)h(p)l(erformanc)l
(e)h(of)e(multi-)2370 2496 y(dimensional)f(ac)l(c)l(ess)i(structur)l
(es)i(b)l(ase)l(d)e(on)f Fw(k)r(d)p Fa(-tr)l(e)l(es)p
Fz(,)58 b(in)2370 2578 y(Pro)r(c.)20 b(12th)g(IEEE)g(In)n(tl.)f(Conf.)i
(on)e(Data)h(Engineering,)i(1996,)2370 2660 y(pp.)j(68{74.)2209
2742 y([18])43 b Fb(C.)28 b(Ja)n(ckins)i(and)e(S.)g(L.)h(T)-7
b(animoto)p Fz(,)27 b Fa(Oct-tr)l(e)l(es)k(and)d(their)2370
2824 y(use)e(in)f(r)l(epr)l(esenting)j Fz(3)p Fa(-d)f(obje)l(cts)p
Fz(,)f(Comput.)c(Graph.)i(Image)2370 2907 y(Pro)r(cess.,)k(14)e
(\(1980\),)h(pp.)e(249{270.)2209 2989 y([19])43 b Fb(M.)34
b(J.)h(Ka)-5 b(tz)p Fz(,)34 b Fa(3-D)g(vertic)l(al)g(r)l(ay)h(sho)l
(oting)f(and)g(2-D)g(p)l(oint)2370 3071 y(enclosur)l(e,)48
b(r)l(ange)d(se)l(ar)l(ching,)k(and)44 b(ar)l(c)g(sho)l(oting)h(amidst)
2370 3153 y(c)l(onvex)37 b(fat)f(obje)l(cts)p Fz(,)j(Comput.)34
b(Geom.)g(Theory)h(Appl.)61 b(to)2370 3235 y(app)r(ear.)2209
3318 y([20])43 b Fb(J.)24 b(Ma)-5 b(tou)2708 3312 y(\024)2712
3318 y(sek,)26 b(J.)f(P)-7 b(a)n(ch,)26 b(M.)e(Sharir,)g(S.)g(Sifr)n
(ony,)h(and)2370 3400 y(E.)d(Welzl)p Fz(,)e Fa(F)-6 b(at)23
b(triangles)g(determine)g(line)l(arly)f(many)g(holes)p
Fz(,)2370 3482 y(SIAM)j(J.)h(Comput.,)f(23)i(\(1994\),)g(pp.)e
(154{169.)2209 3564 y([21])43 b Fb(M.)48 b(H.)g(O)n(vermars)g(and)f(A.)
h(F.)h(v)-7 b(an)48 b(der)g(St)-5 b(appen)p Fz(,)2370
3646 y Fa(R)l(ange)33 b(se)l(ar)l(ching)g(and)g(p)l(oint)f(lo)l(c)l
(ation)h(among)g(fat)f(obje)l(cts)p Fz(,)2370 3728 y(J.)26
b(Algorithms,)g(21)g(\(1996\),)h(pp.)f(629{656.)2209
3811 y([22])43 b Fb(M.)e(H.)f(O)n(vermars)h(and)f(J.)i(v)-7
b(an)41 b(Leeuwen)p Fz(,)g Fa(Dynamic)2370 3893 y(multi-dimensional)33
b(data)i(structur)l(es)i(b)l(ase)l(d)e(on)f(quad-)h(and)2370
3975 y Fw(k)r Fa(-d)28 b(tr)l(e)l(es)p Fz(,)g(Acta)d(Inform.,)h(17)g
(\(1982\),)h(pp.)f(267{285.)2209 4057 y([23])43 b Fb(M.)i(S.)g(P)-7
b(a)i(terson)47 b(and)d(F.)i(F.)g(Y)-7 b(a)n(o)p Fz(,)48
b Fa(E\016cient)43 b(binary)2370 4139 y(sp)l(ac)l(e)c(p)l(artitions)h
(for)f(hidden-surfac)l(e)h(r)l(emoval)f(and)g(solid)2370
4222 y(mo)l(deling)p Fz(,)25 b(Discrete)h(Comput.)e(Geom.,)i(5)g
(\(1990\),)h(pp.)d(485{)2370 4304 y(503.)2209 4386 y([24])p
2370 4373 V 234 w(,)35 b Fa(Optimal)e(binary)i(sp)l(ac)l(e)h(p)l
(artitions)g(for)e(ortho)l(gonal)2370 4468 y(obje)l(cts)p
Fz(,)27 b(J.)f(Algorithms,)g(13)h(\(1992\),)g(pp.)e(99{113.)2209
4550 y([25])43 b Fb(H.)32 b(Samet)p Fz(,)f Fa(The)h(quadtr)l(e)l(e)i
(and)e(r)l(elate)l(d)h(hier)l(ar)l(chic)l(al)g(data)2370
4633 y(structur)l(es)p Fz(,)c(A)n(CM)d(Comput.)f(Surv.,)g(16)h
(\(1984\).)2209 4715 y([26])p 2370 4702 V 234 w(,)37
b Fa(A)n(n)e(overview)i(of)f(quadtr)l(e)l(es,)k(o)l(ctr)l(e)l(es,)f
(and)d(r)l(elate)l(d)2370 4797 y(hier)l(ar)l(chic)l(al)22
b(data)h(structur)l(es)p Fz(,)h(in)c(Theoretical)h(F)-6
b(oundations)2370 4879 y(of)24 b(Computer)f(Graphics)i(and)e(CAD,)h(R.)
f(A.)h(Earnsha)n(w,)h(ed.,)2370 4961 y(v)n(ol.)f(40)g(of)h(NA)-6
b(TO)22 b(ASI)h(Series)h(F,)g(Springer-V)-6 b(erlag,)25
b(Berlin,)2370 5044 y(W)-6 b(est)25 b(German)n(y)-6 b(,)24
b(1988,)k(pp.)d(51{68.)2209 5126 y([27])p 2370 5113 V
234 w(,)f Fa(The)j(Design)f(and)h(A)n(nalysis)f(of)g(Sp)l(atial)g(Data)
h(Struc-)2370 5208 y(tur)l(es)p Fz(,)g(Addison-W)-6 b(esley)g(,)25
b(Reading,)h(MA,)g(1990.)2209 5290 y([28])43 b Fb(E.)51
b(Torres)p Fz(,)i Fa(Optimization)48 b(of)g(the)h(binary)f(sp)l(ac)l(e)
i(p)l(ar-)2370 5372 y(tition)f(algorithm)h(\(BSP\))g(for)g(the)g
(visualization)g(of)f(dy-)2370 5455 y(namic)h(sc)l(enes)p
Fz(,)59 b(in)51 b(Eurographics)h('90,)58 b(North-Holland,)2370
5537 y(1990,)27 b(pp.)e(507{518.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
